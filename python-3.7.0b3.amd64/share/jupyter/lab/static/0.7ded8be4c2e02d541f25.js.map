{"version":3,"sources":["webpack:///./~/vega/src/core/View.js","webpack:///./~/vega/~/vega-scenegraph/src/render/canvas/CanvasHandler.js","webpack:///./~/datalib/src/aggregate/collector.js","webpack:///./~/vega-lite/src/shorthand.js","webpack:///./~/vega/src/transforms/Sort.js","webpack:///./~/vega-lite/src/compile/mark/mark.js","webpack:///./~/vega-lite/src/compile/data/filter.js","webpack:///./~/vega/~/vega-expression/src/index.js","webpack:///./~/datalib/src/aggregate/measures.js","webpack:///./~/vega/~/vega-scenegraph/src/index.js","webpack:///./~/vega/src/transforms/Voronoi.js","webpack:///./~/vega/~/vega-scenegraph/src/render/Handler.js","webpack:///./~/vega/~/vega-scenegraph/src/render/svg/SVGRenderer.js","webpack:///./~/vega/src/transforms/Aggregate.js","webpack:///./~/datalib/src/accessor.js","webpack:///./~/vega/~/vega-scenegraph/src/render/canvas/marks/path.js","webpack:///./~/vega/src/transforms/Transform.js","webpack:///./~/@jupyterlab/vega2-extension/~/vega-embed/src/post.js","webpack:///./~/datalib/~/d3-time-format/build/d3-time-format.js","webpack:///./~/vega/~/vega-scenegraph/src/render/svg/index.js","webpack:///./~/vega/src/transforms/Pie.js","webpack:///./~/datalib/src/import/load.js","webpack:///./~/vega/~/vega-expression/src/codegen.js","webpack:///./~/vega/src/transforms/CountPattern.js","webpack:///./~/vega/src/parse/streams.js","webpack:///./~/vega-lite/src/compile/data/timeunit.js","webpack:///./~/vega-lite/src/vega.schema.js","webpack:///./~/vega/src/core/config.js","webpack:///./~/vega-lite/src/compile/mark/rule.js","webpack:///./~/vega/src/parse/marks.js","webpack:///./~/vega/~/vega-scenegraph/src/render/canvas/marks/symbol.js","webpack:///./~/vega/src/transforms/Treemap.js","webpack:///./~/vega/src/scene/GroupBuilder.js","webpack:///./~/vega/src/transforms/Filter.js","webpack:///./~/vega/src/transforms/index.js","webpack:///./~/@jupyterlab/vega2-extension/~/vega-embed/src/parameter.js","webpack:///./~/vega/src/scene/legend.js","webpack:///./~/vega/src/core/schema.js","webpack:///./~/vega/src/parse/transforms.js","webpack:///./~/vega/~/vega-scenegraph/src/util/text.js","webpack:///./~/vega/~/vega-expression/src/functions.js","webpack:///./~/vega/~/vega-scenegraph/src/util/bound.js","webpack:///./~/vega-lite/src/spec.js","webpack:///./~/vega/~/vega-scenegraph/src/render/canvas/marks/util.js","webpack:///./~/vega-lite/src/bin.js","webpack:///./~/vega/~/vega-scenegraph/src/util/Gradient.js","webpack:///./~/vega-lite/src/scale.js","webpack:///./~/vega-lite/src/compile/mark/text.js","webpack:///./~/vega/~/vega-scenegraph/src/util/ImageLoader.js","webpack:///./~/vega/src/transforms/Wordcloud.js","webpack:///./~/datalib/src/format.js","webpack:///./~/vega-lite/src/compile/mark/line.js","webpack:///./~/vega-lite/src/compile/axis.js","webpack:///./~/@jupyterlab/vega2-extension/~/vega-embed/src/embed.js","webpack:///./~/vega-lite/src/compile/facet.js","webpack:///./~/vega-logging/index.js","webpack:///./~/vega/~/vega-scenegraph/src/render/canvas/marks/index.js","webpack:///./~/vega/~/vega-scenegraph/src/path/index.js","webpack:///./~/vega/src/scene/Transition.js","webpack:///./~/vega/~/vega-scenegraph/src/render/canvas/marks/area.js","webpack:///./~/vega/src/transforms/screen.js","webpack:///./~/vega/src/transforms/Fold.js","webpack:///./~/vega-lite/src/compile/common.js","webpack:///./~/vega/~/vega-scenegraph/src/render/svg/SVGHandler.js","webpack:///./~/vega/src/scene/Scale.js","webpack:///./~/vega/~/vega-dataflow/src/Collector.js","webpack:///./~/datalib/package.json","webpack:///./~/d3-cloud/index.js","webpack:///./~/vega/src/parse/padding.js","webpack:///./~/vega/src/parse/data.js","webpack:///./~/vega/~/vega-scenegraph/src/render/canvas/marks/group.js","webpack:///./~/vega-lite/src/channel.js","webpack:///./~/vega/src/transforms/Impute.js","webpack:///./~/vega/src/core/Model.js","webpack:///./~/vega-lite/src/config.js","webpack:///./~/vega-lite/src/compile/data/summary.js","webpack:///./~/vega-lite/src/encoding.js","webpack:///./~/vega/src/scene/visit.js","webpack:///./~/vega/src/transforms/Facetor.js","webpack:///./~/vega/~/vega-dataflow/src/Dependencies.js","webpack:///./~/vega/src/transforms/Bin.js","webpack:///./~/vega/src/parse/signals.js","webpack:///./~/datalib/~/d3-dsv/build/d3-dsv.js","webpack:///./~/vega-lite/src/compile/mark/bar.js","webpack:///./~/vega/src/parse/mark.js","webpack:///./~/vega/src/transforms/Hierarchy.js","webpack:///./~/vega/~/vega-scenegraph/src/util/Bounds.js","webpack:///./~/vega/~/vega-dataflow/src/ChangeSet.js","webpack:///./~/vega-lite/src/compile/scale.js","webpack:///./~/vega/src/transforms/Formula.js","webpack:///./~/vega/src/parse/expr.js","webpack:///./~/datalib/~/d3-format/build/d3-format.js","webpack:///./~/vega/~/vega-scenegraph/src/util/svg.js","webpack:///./~/vega/src/parse/index.js","webpack:///./~/vega/src/transforms/Facet.js","webpack:///./~/vega-lite/src/validate.js","webpack:///./~/vega-lite/src/compile/data/data.js","webpack:///./~/vega/~/vega-scenegraph/src/util/dom.js","webpack:///./~/vega/~/vega-scenegraph/src/render/Renderer.js","webpack:///./~/vega/src/scene/Builder.js","webpack:///./~/vega/src/parse/axes.js","webpack:///./~/vega-lite/src/type.js","webpack:///./~/vega/~/vega-event-selector/index.js","webpack:///./~/vega-lite/src/compile/layer.js","webpack:///./~/vega/~/vega-dataflow/src/DataSource.js","webpack:///./~/vega-lite/src/compile/mark/tick.js","webpack:///./~/vega/src/scene/Encoder.js","webpack:///./~/vega-lite/src/compile/layout.js","webpack:///./~/vega/~/vega-scenegraph/src/path/render.js","webpack:///./~/datalib/src/import/read.js","webpack:///./~/vega/~/vega-dataflow/src/Signal.js","webpack:///./~/datalib/src/generate.js","webpack:///./~/vega/src/util/theme-val.js","webpack:///./~/vega/index.js","webpack:///./~/datalib/src/import/formats/topojson.js","webpack:///./~/vega-lite/src/util.js","webpack:///./~/vega-lite/src/legend.js","webpack:///./~/vega/~/vega-dataflow/src/Tuple.js","webpack:///./~/vega/~/vega-scenegraph/src/render/canvas/marks/text.js","webpack:///./~/vega/src/transforms/BatchTransform.js","webpack:///./~/vega/~/vega-dataflow/src/Graph.js","webpack:///./~/vega-lite/src/axis.js","webpack:///./~/vega/src/transforms/Geo.js","webpack:///./~/datalib/src/import/formats/json.js","webpack:///./~/vega/~/vega-dataflow/src/Node.js","webpack:///./~/vega/src/transforms/Lookup.js","webpack:///./~/vega/src/transforms/Treeify.js","webpack:///./~/vega/~/vega-scenegraph/src/path/parse.js","webpack:///./~/vega-lite/src/stack.js","webpack:///./~/vega/src/transforms/Parameter.js","webpack:///./~/vega/src/parse/background.js","webpack:///./~/datalib/src/import/type.js","webpack:///./~/datalib/src/import/readers.js","webpack:///./~/vega-lite/src/aggregate.js","webpack:///./~/vega/src/parse/properties.js","webpack:///./~/vega-lite/src/compile/data/formatparse.js","webpack:///./~/vega/src/util/format.js","webpack:///./~/vega/~/vega-scenegraph/src/render/svg/SVGStringRenderer.js","webpack:///./~/vega/~/vega-scenegraph/src/render/svg/marks.js","webpack:///./~/vega/~/vega-dataflow/src/Heap.js","webpack:///./~/vega-lite/src/mark.js","webpack:///./~/vega-lite/src/compile/model.js","webpack:///./~/vega/~/vega-expression/src/constants.js","webpack:///./~/vega-lite/src/compile/data/source.js","webpack:///./~/datalib/src/import/formats/treejson.js","webpack:///./~/vega/src/transforms/Cross.js","webpack:///./~/vega-lite/src/compile/legend.js","webpack:///./~/vega-lite/src/compile/mark/area.js","webpack:///./~/vega-lite/src/compile/data/timeunitdomain.js","webpack:///./~/vega-lite/src/compile/data/stackscale.js","webpack:///./~/vega/~/vega-scenegraph/src/util/scene.js","webpack:///./~/vega/src/scene/axis.js","webpack:///./~/datalib/src/aggregate/groupby.js","webpack:///./~/vega/~/vega-scenegraph/src/util/BoundsContext.js","webpack:///./~/datalib/src/time.js","webpack:///./~/datalib/src/import/formats/index.js","webpack:///./~/vega-lite/src/compile/data/bin.js","webpack:///./~/datalib/src/format-tables.js","webpack:///./~/vega/~/vega-expression/src/parser.js","webpack:///./~/vega-lite/src/fielddef.js","webpack:///./~/vega/src/core/HeadlessView.js","webpack:///./~/vega/~/vega-scenegraph/src/util/canvas.js","webpack:///./~/vega-lite/src/compile/data/formula.js","webpack:///./~/vega/src/transforms/Force.js","webpack:///./~/datalib/src/import/formats/dsv.js","webpack:///./~/datalib/~/d3-time/build/d3-time.js","webpack:///./~/datalib/src/bins/bins.js","webpack:///./~/vega/~/vega-scenegraph/src/render/canvas/marks/image.js","webpack:///./~/vega-lite/src/compile/config.js","webpack:///./~/datalib/src/bins/histogram.js","webpack:///./~/vega/~/vega-scenegraph/src/render/canvas/marks/rule.js","webpack:///./~/vega/src/parse/modify.js","webpack:///./~/vega/src/transforms/LinkPath.js","webpack:///./~/vega-lite/src/compile/mark/point.js","webpack:///./~/vega/~/vega-scenegraph/src/render/canvas/index.js","webpack:///./~/vega/src/scene/Bounder.js","webpack:///./~/vega/src/transforms/GeoPath.js","webpack:///./~/vega/~/vega-scenegraph/src/render/canvas/CanvasRenderer.js","webpack:///./~/vega-lite/src/compile/data/nullfilter.js","webpack:///./~/datalib/src/aggregate/aggregator.js","webpack:///./~/vega/~/vega-scenegraph/src/path/arc.js","webpack:///./~/vega/~/vega-scenegraph/src/render/canvas/marks/line.js","webpack:///./~/vega/~/vega-scenegraph/src/render/index.js","webpack:///./~/vega/~/vega-scenegraph/src/render/canvas/marks/rect.js","webpack:///./~/datalib/src/stats.js","webpack:///./~/vega/src/util/index.js","webpack:///./~/vega/src/parse/legends.js","webpack:///./~/vega-lite/src/compile/data/colorrank.js","webpack:///./~/vega-lite/src/compile/time.js","webpack:///./~/vega/src/transforms/Stack.js","webpack:///./~/vega-lite/src/vl.js","webpack:///./~/vega-lite/src/data.js","webpack:///./~/vega/~/vega-scenegraph/src/render/canvas/marks/arc.js","webpack:///./~/vega/src/transforms/Rank.js","webpack:///./~/vega-lite/src/sort.js","webpack:///./~/datalib/src/template.js","webpack:///./~/vega/src/parse/predicates.js","webpack:///./~/vega/src/parse/spec.js","webpack:///./~/vega-lite/src/compile/data/nonpositivenullfilter.js","webpack:///./~/vega-lite/src/compile/compile.js","webpack:///./~/vega-lite/src/timeunit.js","webpack:///./~/vega/~/vega-scenegraph/src/util/Item.js","webpack:///./~/datalib/src/util.js","webpack:///./~/vega-lite/src/compile/unit.js","webpack:///./~/datalib/src/index.js","webpack:///./~/vega/~/vega-dataflow/src/index.js"],"names":["d3","__webpack_require__","dl","df","scene","sg","render","bound","log","Deps","Dependencies","parseStreams","Encoder","Transition","View","el","width","height","this","_el","_model","_width","__width","_height","__height","_bgcolor","_cursor","_autopad","_padding","top","left","bottom","right","_viewport","_renderer","_handler","_streamer","_skipSignals","_changeset","_repaint","_renderers","_io","_api","prototype","model","arguments","length","Node","_rank","ChangeSet","create","streaming","src","view","ds","data","error","listener","pipeline","streamer","api","insert","vals","duplicate","addListener","update","apply","remove","values","v","isString","call","isObject","keys","forEach","k","VIEW_SIGNALS","toMap","signal","name","value","skip","m","key","SIGNALS","setSignal","cs","signals","reflow","initialize","_strict","background","bgcolor","padding","pad","resize","viewBounds","s","legends","items","legendItems","i","len","b","lb","mark","bounds","add","x1","x2","autopad","opt","config","inset","autopadInset","l","Math","ceil","t","y1","r","y2","max","reset","props","viewport","size","renderer","type","Error","_build","prevHandler","w","h","bg","parentNode","select","append","attr","style","node","canvas","Renderer","RETINA","retina","load","Handler","handlers","on","handler","_detach","destroy","build","_renderNode","router","evaluate","input","debug","trans","start","dirty","_dirty","duration","ease","undefined","request","built","listeners","propagate","disconnect","fire","toImageURL","svg","string","ren","blob","Blob","window","URL","createObjectURL","toDataURL","onSignal","off","offSignal","factory","HeadlessView","defs","hover","evt","item","hasPropertySet","cursor","body","default","module","exports","DOM","marks","CanvasHandler","_down","_touch","_first","base","Object","constructor","obj","_canvas","find","that","events","addEventListener","context","getContext","DOMMouseScroll","move","moveEvent","overEvent","outEvent","a","_active","p","pickEvent","inactive","mousemove","dragover","mouseout","dragleave","mousedown","click","touchstart","changedTouches","touchmove","touchend","touch","_handlers","vegaType","_obj","eventName","push","splice","rect","getBoundingClientRect","x","y","pick","_scene","clientX","clientY","gx","gy","g","marktype","util","stats","REM","Collector","_add","_rem","_key","_last","proto","rem","_get","Array","j","n","count","map","hasOwnProperty","extent","get","_ext","index","argmin","argmax","min","Infinity","quartile","_q","q1","q2","q3","aggregate_1","timeunit_1","type_1","vlEncoding","mark_1","DELIM","ASSIGN","TYPE","FUNC","shorten","spec","shortenEncoding","encoding","parse","shorthand","split","shift","trim","parseEncoding","join","Mark","fieldDef","channel","shortenFieldDef","encodingShorthand","reduce","e","enctype","fieldDefShorthand","parseFieldDef","aggregate","timeUnit","bin","field","SHORT_TYPE","shortenFieldDefs","fieldDefs","delim","TYPE_FROM_SHORT_TYPE","AGGREGATE_OPS","indexOf","substr","toString","AggregateOp","COUNT","TIMEUNITS","tu","Transform","Sort","graph","init","addParameters","by","transform","mod","sort","comparator","param","schema","$schema","title","description","properties","enum","oneOf","required","channel_1","encoding_1","fielddef_1","scale_1","util_1","area_1","bar_1","common_1","line_1","point_1","rule_1","text_1","tick_1","markCompiler","area","bar","line","point","text","tick","rule","circle","square","parseMark","contains","LINE","AREA","parsePathMark","parseNonPathMark","isFaceted","parent","isFacet","dataFrom","dataTable","details","detailFields","pathMarks","markType","from","extend","sortPathBy","facetTransform","groupby","stack","stackTransforms","concat","has","ORDER","sortBy","group","TEXT","COLOR","applyColorToBackground","X","Y","LABEL","labels","labelProperties","channelDef","order","sortField","PATH","path","orient","binSuffix","DETAIL","OPACITY","SHAPE","impute","stackByFields","getStackByFields","imputeTransform","stackTransform","STACK_GROUP_CHANNELS","fields","channelEncoding","isArray","scale","ScaleType","ORDINAL","stackFields","fieldChannel","orderby","groupbyChannel","method","sortby","valName","output","end","offset","filter","filter_1","parseUnit","parseFacet","filterComponent","childDataComponent","child","component","source","parseLayer","children","compatibleSource","assemble","test","parser","codegen","expr","code","compiler","args","slice","generator","compile","str","fn","Function","c","d","f","functions","constants","types","measure","set","idx","missing","valid","sum","mean","average","req","variance","variancep","stdev","stdevp","stderr","median","distinct","modeskew","out","resolve","agg","stream","collect","helper","accessor","mutator","all","ctr","assign","isValid","$","Item","Bounds","Gradient","toJSON","fromJSON","Tuple","BatchTransform","Voronoi","clipExtent","_layout","geom","voronoi","_output","mutates","batchTransform","pathname","polygons","$ref","minItems","maxItems","additionalProperties","element","ImageLoader","SVG","ns","metadata","xmlns","SVGRenderer","loadConfig","_loader","_dirtyID","_svg","clear","_root","_defs","clip_id","gradient","clipping","setProperty","setAttribute","class","openTag","innerHTML","closeTag","imageURL","url","_dirtyCheck","_dirtyAll","_resetDefs","draw","updateDefs","drawMark","id","updateGradient","updateClipping","removeChild","grad","stop","stops","color","clip","def","isDirty","mdef","o","status","nest","_update","dirtyParents","interactive","isGroup","tag","className","cssClass","bind","_recurse","axes","axisItems","layer","__data__","__values__","fill","mark_extras","childNodes","emit","textContent","font","extra","setAttributeNS","removeAttributeNS","removeAttribute","prop","styleProperties","styles","removeProperty","href","location","Facetor","Aggregate","summarize","signalDeps","tx","_transform","ops","array","as","_fields","_aggr","dependency","_input","_args","_out","_type","TYPES","TUPLE","_acc","true","produces","VALUE","MULTI","VALID_OPS","accessors","acc","aggr","_graph","hasGetter","signalRef","*","getFields","dims","meas","_dims","measures","reeval","prev","result","prev_init","_mod","_markMod","gby","val","_id","_mark","changes","time","utc","u","$year","$func","year","unit","$month","months","$date","dates","$day","weekdays","$hour","hours","$minute","minutes","$second","seconds","$utcYear","$utcMonth","$utcDate","$utcDay","$utcHour","$utcMinute","$utcSecond","pathCache","drawAll","pickPath","Base","Parameter","params","_parameters","_stamp","stamp","editor","open","wait","step","listen","removeEventListener","send","postMessage","setTimeout","global","define","amd","d3_time_format","d3_time","d3Time","localDate","date","Date","H","M","S","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","locale$1","locale","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","A","formatWeekday","formatShortMonth","B","formatMonth","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatPeriod","formatSeconds","U","formatWeekdayNumber","W","formatWeekNumberMonday","formatYear","formatFullYear","Z","formatZone","%","formatLiteralPercent","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCPeriod","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parsePeriod","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseLocaleDate","parseLocaleTime","parseFullYear","parseZone","parseLiteralPercent","newFormat","specifier","format","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","day","getUTCDay","getDay","exec","toLowerCase","getMonth","getHours","getUTCMonth","getUTCHours","utcFormat","-","_","0","numberRe","percentRe","requoteRe","sign","requote","replace","names","RegExp","parseYear","getDate","getMilliseconds","getMinutes","getSeconds","formatWeekNumberSunday","sunday","monday","getFullYear","z","getTimezoneOffset","getUTCDate","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","caES","deCH","deDE","enCA","enGB","esES","fiFI","frCA","frFR","heIL","huHU","itIT","jaJP","koKR","mkMK","nlNL","plPL","ptBR","ruRU","svSE","zhCN","isoSpecifier","formatIsoNative","toISOString","isNaN","formatIso","version","localeCaEs","localeDeCh","localeDeDe","localeEnCa","localeEnGb","localeEnUs","localeEsEs","localeFiFi","localeFrCa","localeFrFr","localeHeIl","localeHuHu","localeItIt","localeJaJp","localeKoKr","localeMkMk","localeNlNl","localePlPl","localePtBr","localeRuRu","localeSvSe","localeZhCn","isoFormat","Pie","startAngle","endAngle","PI","mid","ones","range","minimum","maximum","protocol_re","fileProtocol","sanitizeUrl","file","baseURL","startsWith","useXHR","defaultProtocol","domainWhiteList","domain","origin","document","createElement","host","hostname","parts","whiteListed","some","lastIndexOf","callback","loader","err","xhr","http","xhrHasResponse","responseType","response","responseText","async","XMLHttpRequest","XDomainRequest","respond","onload","onerror","onreadystatechange","readyState","setRequestHeader","headers","filename","fs","readFileSync","readFile","options","gzip","getBody","statusCode","searchString","list","object","functionDefs","idWhiteList","idBlackList","memberDepth","FIELD_VAR","fieldVar","GLOBAL_VAR","globalVar","globals","dataSources","codegen_wrap","ast","retval","lookupGlobal","CODEGEN_TYPES","Literal","raw","Identifier","Program","MemberExpression","computed","property","CallExpression","callee","ArrayExpression","elements","BinaryExpression","operator","UnaryExpression","argument","ConditionalExpression","consequent","alternate","LogicalExpression","ObjectExpression","Property","ExpressionStatement","expression","CountPattern","pattern","case","stopwords","_stop","_stop_re","_pattern","_match","_counts","curr","counts","tuples","_tuples","change","ingest","_tokenize","toUpperCase","match","tok","selector","parseSignals","GATEKEEPER","EVALUATOR","vgEvent","getItem","getGroup","getXY","getX","getY","trueFn","falseFn","registry","nodes","internal","external","sig","streams","sel","exp","mergedStream","preventDefault","extendEvent","datum","elt","querySelectorAll","detach","mouse","event","root","vg","filtered","invoke","filters","verbose","domEvent","orderedStream","ms","target","doNotPropagate","gk","middle","gatekeeper","time_1","timeUnitComponent","ref","nofn","TEMPORAL","hash","parseExpression","isUnionedDomain","isDataRefDomain","fillOpacity","stroke","strokeOpacity","strokeWidth","strokeDash","strokeDashOffset","axis","ticks","axisColor","axisWidth","gridColor","gridOpacity","tickColor","tickLabelColor","tickWidth","tickSize","tickLabelFontSize","tickLabelFont","titleColor","titleFont","titleFontSize","titleFontWeight","titleOffset","titleOffsetAutoMin","titleOffsetAutoMax","titleOffsetAutoMargin","legend","margin","gradientStrokeColor","gradientStrokeWidth","gradientHeight","gradientWidth","labelColor","labelFontSize","labelFont","labelAlign","labelBaseline","labelOffset","symbolShape","symbolSize","symbolColor","symbolStrokeWidth","rgb","lab","hcl","hsl","category10","category20","category20b","category20c","shapes","scaleName","Y2","X2","applyColorAndOpacity","SIZE","sizeValue","ruleSize","parseProperties","parseRootMark","defaults","scales","PROPERTIES","container","groupMark","allOf","visualMark","not","sqrt3","sqrt","tan30","tan","rx","ry","beginPath","shape","arc","closePath","moveTo","lineTo","pathArray","sz","defaultRatio","Treemap","round","sticky","ratio","mode","layout","treemap","depth","dx","dy","Builder","Scale","parseAxes","parseLegends","GroupBuilder","_children","_scaler","_recursor","_scales","Types","GROUP","MARK","AXIS","LEGEND","builder","recurse","opacity","SCALES","_collector","fullUpdate","reevaluate","_def","idFilter","buildGroup","_bounder","group_id","removeListener","hasMarks","hasAxes","hasLegends","inline","buildMarks","buildAxes","buildLegends","connect","removeTemp","updateAxis","updateLegend","disconnectChildren","_parent","inherit","_facetID","_scaleRefs","Filter","_skip","cross","countpattern","linkpath","facet","fold","force","formula","geo","geopath","hierarchy","lookup","pie","rank","treeify","wordcloud","rewrite","handle","dom","__vega__","form","checkbox","radio","fm","cb","checked","sl","selectedIndex","selectAll","enter","identity","rg","option","rb","rn","lbl","bins","maxbins","lgnd","spacing","formatString","formatType","tickArguments","legendStyle","symbolStyle","gradientStyle","titleStyle","labelStyle","titles","symbols","legendDef","discrete","quantDef","ordinalDef","o_legend_def","fmt","getTickFormat","fontSize","ts","points","tdata","label","legendTitle","legendSymbols","vLegendLabels","legendSymbolExtend","legendPosition","encode","q_legend_def","layoutSpec","zero","exponent","align","legendGradient","hLegendLabels","copy","unshift","gp","gh","hh","tp","LEGEND_ORIENT","legendProperties","symbolProperties","gradientProperties","titleProperties","top-left","top-right","bottom-left","bottom-right","db","predicates","ao","lw","lh","pos","_legendPositions","abs","baseline","totalHeight","currItem","interpolate","enc","fontWeight","exit","mult","refs","json","propset","propertySets","transforms","parseTransforms","String","quote","fontStyle","fontVariant","fncall","cast","DATE","STRING","REGEXP","isFinite","acos","asin","atan","atan2","cos","floor","pow","random","sin","clamp","now","datetime","month","milliseconds","timezoneoffset","utcdate","utcday","utcyear","utcmonth","utchours","utcminutes","utcseconds","utcmilliseconds","indexof","lastindexof","parseFloat","parseInt","upper","lower","substring","regexp","if","BoundsContext","paths","drawPath","areaPath","linePath","halfpi","g2D","bc","instance","strokeBounds","stokeOpacity","expand","pathBounds","image","cx","cy","ir","innerRadius","or","outerRadius","sa","ea","xmin","xmax","ymin","ymax","ix","iy","ox","oy","angles","symbol","textMark","noRotate","radius","theta","measureText","angle","rotate","includeLegends","union","translate","methods","itemBounds","func","DUMMY_ITEM","markBounds","hasi","config_1","stack_1","isFacetSpec","isExtendedUnitSpec","isSomeUnitSpec","hasRow","ROW","hasColumn","COLUMN","isUnitSpec","isLayerSpec","normalize","normalizeExtendedUnitSpec","normalizeUnitSpec","column","row","overlayConfig","overlay","overlayWithLine","AreaOverlay","LINEPOINT","overlayWithPoint","ERRORBAR","normalizeErrorBarUnitSpec","isRanged","normalizeRangedUnitSpec","isStacked","normalizeOverlay","hasX","hasY","hasX2","hasY2","normalizedSpec","layerSpec","layers","ruleSpec","RULE","lowerTickSpec","TICK","upperTickSpec","outerProps","baseSpec","omit","baseConfig","lineSpec","markConfig","defaultOverlayConfig","lineStyle","pointSpec","POINT","pointStyle","alwaysNoOcclusion","isAggregate","getCleanSpec","transpose","oldenc","drawPathOne","opac","drawPathAll","intersects","pathFunc","drawOne","trueFunc","pixelratio","testPath","filled","isPointInStroke","lc","strokeCap","lineWidth","lineCap","isPointInPath","globalAlpha","fillStyle","strokeStyle","vgLineDash","vgLineDashOffset","createLinearGradient","addColorStop","autoMaxBins","gradient_id","NiceTime","defaultScaleConfig","textBandWidth","bandSize","useRawDomain","nominalColorRange","sequentialColorRange","shapeRange","fontSizeRange","ruleSizeRange","tickSizeRange","defaultFacetScaleConfig","prefn","applyMarkConfig","textFieldDef","xFieldDef","QUANTITATIVE","yFieldDef","sizeFieldDef","numberFormat","template","timeTemplate","shortTimeLabels","_pending","_config","Config","pending","uri","browser","Image","loaded","server","loadImage","d3_cloud","Wordcloud","fontScale","spiral","wrap","tuple","_tuple","functor","words","weight","d3_timeF","d3_numberF","numberF","timeF","tmpDate","monthFull","monthAbbr","dayFull","dayAbbr","numberLocale","number","numberPrefix","formatPrefix","timeLocale","auto","autoNumberFormat","linear","linearNumberFormat","timeAutoFormat","utcAutoFormat","monthFormat","dayFormat","quarter","quarterFormat","utcQuarter","utcQuarterFormat","localeRef","e10","e5","e2","linearRange","span","LN10","trimZero","decimal","rightmostDigit","formatSpecifier","precision","precisionPrefix","precisionRound","precisionFixed","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","second","minute","hour","week","utcSecond","utcMinute","utcHour","utcMonth","utcWeek","abbreviate","setMonth","setDate","_size","lineSize","axis_1","parseAxisComponent","axisChannels","parseAxis","parseInnerAxis","isCol","isRow","grid","gridShow","isOrdinalScale","AxisOrient","TOP","tickSizeEnd","fieldTitle","maxLength","titleMaxLength","unitModel","cell","characterWidth","truncate","axisPropsSpec","gridPropsSpec","gridWidth","gridDash","labelsSpec","NOMINAL","labelMaxLength","labelAngle","isDimension","ticksPropsSpec","titlePropsSpec","vl","parameter","post","editor_url","source_header","source_footer","MODES","vega","vega-lite","PREPROCESSOR","vgjson","vljson","arg","console","JSON","embed","stringify","actions","div","classed","html","parameters","elp","parameter_el","pdiv","chart","ctrl","export","ext","viewSource","header","footer","win","write","__extends","__","data_1","axis_2","data_2","layout_1","model_1","scale_2","FacetModel","_super","parentGivenName","_initConfig","_child","buildModel","_facet","_initFacet","_scale","_initScale","_axis","_initAxis","specConfig","mergeDeep","defaultConfig","channelMappingForEach","channels","addWarning","getFullName","scaleSpec","axisSpec","modelAxis","yAxis","RIGHT","hasSummary","summary","SUMMARY","SOURCE","parseData","parseFacetData","parseSelectionData","parseLayoutData","parseFacetLayout","parseScale","scaleComponent","parseScaleComponent","scaleNameWithoutPrefix","newName","renameScale","getFacetGroupProperties","assembleGroup","parseAxisGroup","xAxisGroup","yAxisGroup","axisGroup","parseGridGroup","gridGroup","getColumnGridGroups","getRowGridGroups","parseLegend","assembleParentGroupProperties","assembleData","assembleLayout","layoutData","assembleMarks","flatten","mapping","Model","mergedCellConfig","sizeName","getXAxesGroup","getYAxesGroup","hasCol","facetGridConfig","rowGrid","columnGrid","msg","enable","state","prevTime","Status","STATUS","updates","next","interp","EXIT","UPDATE","timer","elapsed","delay","hit","nested","Fold","_cache","_reset","rederive","derive","_fn","uniqueItems","sort_1","facet_1","layer_1","unit_1","spec_1","LayerModel","UnitModel","STROKE_CONFIG","FILL_CONFIG","FILL_STROKE_CONFIG","colorFieldDef","opacityFieldDef","colorValue","opacityValue","applyConfig","propsList","marksProperties","orderChannelDef","SortOrder","DESCENDING","templateField","_format","timeFormat","SVGHandler","Properties","LINEAR","LOG","POWER","SQRT","TIME","TIME_UTC","QUANTILE","QUANTIZE","THRESHOLD","DataRef","DOMAIN","RANGE","GROUPBY","MIN","MAX","ASC","DESC","_updated","reflows","self","deps","DATA","ordinal","quantitative","rng","ctor","_prev","dataDrivenRange","outer","outerPadding","spatial","dataRef","equal","bw","space","reverse","rangeRoundPoints","rangePoints","rangeRoundBands","rangeBands","invert","invertOrdinal","bisect","bisector","numcmp","findAsc","findDsc","asc","isNumber","nice","interval","domainMinMax","rangeRound","isUniques","getRefs","inherits","aggrType","getCache","which","atype","uniques","ck","cache","op","_lastUpdate","rlen","flen","cmp","addDep","last","_values","domainMin","domainMax","rangeVal","rangeMin","rangeMax","rev","rangeDef","anyOf","_data","collector","keywords","repository","author","contributors","license","dependencies","d3-dsv","d3-format","d3-time","d3-time-format","topojson","sync-request","devDependencies","browserify","chai","istanbul","jshint","mocha","uglify-js","main","scripts","deploy","lint","cover","postbuild","buffer","dispatch","cloudRadians","cw","ch","cloudText","cloudFont","cloudFontSize","cloudFontNormal","cloudRotate","cloudPadding","archimedeanSpiral","timeInterval","cloud","cloudCanvas","contextAndRatio","board","zeroArray","tags","clearInterval","setInterval","cloudSprite","hasText","place","cloudBounds","x0","y0","getImageData","textAlign","perimeter","startX","startY","maxDelta","dt","dxdy","cloudCollide","collideRects","sprite","sw","lx","sx","msx","spirals","di","clearRect","maxh","save","sr","cr","wcr","wsr","hcr","hsr","fillText","strokeText","restore","xoff","yoff","pixels","w32","seen","seenRow","b0","b1","rectangularSpiral","archimedean","rectangular","parsePadding","parseModify","onError","onLoad","read","datasource","modify","parseDef","feature","mesh","EMPTY","groups","fillRect","strokeRect","subscene","hits","interative","Channel","CHANNELS","UNIT_CHANNELS","without","UNIT_SCALE_CHANNELS","NONSPATIAL_CHANNELS","NONSPATIAL_SCALE_CHANNELS","supportMark","getSupportedMark","getSupportedRole","dimension","hasScale","Impute","_imputed","partition","getval","gb","gv","ob","ov","lut","N","unique","Graph","visit","cfg","_predicates","_groups","_node","_builder","pred","predicate","_groupBuilder","legend_1","defaultCellConfig","defaultFacetCellConfig","defaultFacetGridConfig","defaultFacetConfig","defaultFacetAxisConfig","FontWeight","Shape","HorizontalAlign","VerticalAlign","FontStyle","Interpolate","defaultMarkConfig","CIRCLE","barThinSize","tickThickness","MIDDLE","countTitle","defaultAxisConfig","defaultLegendConfig","addDimension","dataName","dimensions","summaryComponents","summaryComponent","summaryNameWithoutPrefix","renameData","mergeMeasures","parentMeasures","childMeasures","field_1","summaries","childSummary","summaryData","aggregator","fnDictSet","countRetinal","arr","thisArg","channelMappingMap","channelMappingReduce","sets","Aggregator","facetID","_ingest","_assign","disconnect_cell","_newcell","_newtuple","_cells","_on_add","_on_rem","_on_mod","cell0","cell1","_on_drop","_on_keep","ALL","Bin","steps","minstep","RESERVED","exprVal","dep","scope","_expr","scopedScale","d3_dsv","dsv","delimiter","Dsv","objectConverter","columns","customConverter","inferColumns","rows","columnSet","reFormat","delimiterCode","convert","parseRows","EOL","EOF","eol","token","formatValue","formatRows","formatRow","csv","tsv","x2FieldDef","xIsMeasure","isMeasure","suffix","xc","y2FieldDef","yIsMeasure","yc","barSize","applyDefaults","colorMap","colorProp","Hierarchy","nodesize","_mode","PARTITION","SEPARATION","cartesian","radial","nodesz","separation","nodeSize","clone","Number","MAX_VALUE","encloses","alignsWith","DEPS","COLOR_LEGEND","COLOR_LEGEND_LABEL","parseMainScale","colorLegend","parseColorLegendScale","binColorLegend","parseBinColorLegendLabel","scaleDef","rangeMixins","scaleType","TimeUnit","HOURS","DAY","MONTH","QUARTER","rawDomain","StackOffset","NORMALIZE","STACKED_SCALE","_useRawDomain","domainSort","noAggregate","SHARED_DOMAIN_OPS","scaleConfig","BAR","barSizeRange","pointSizeRange","pointBandSize","POW","smallestUnit","Formula","updated","eventItem","eventGroup","eventX","eventY","openGen","scaleGen","iscale","inrange","indata","indataGen","windowOpen","exclusive","requestIndex","dataname","getIndex","_signals","d3_format","formatDecimal","toExponential","coefficient","NaN","formatGroup","grouping","thousands","prefixExponent","formatPrefixAuto","formatRounded","formatDefault","toPrecision","i0","i1","formatTypes","","toFixed","re","FormatSpecifier","comma","prefixes","currency","prefix","maybeSuffix","valuePrefix","valueSuffix","valueNegative","defaultLocale","csCZ","localeCsCz","d3_svg","xw","yh","areav","areah","xmlns:xlink","tension","pathStr","newPath","command","current","symbolTypes","center","textBaseline","Facet","_pipeline","rerank","DEFAULT_REQUIRED_CHANNEL_MAP","DEFAULT_SUPPORTED_CHANNEL_TYPE","getEncodingMappingError","requiredChannelMap","supportedChannelMap","requiredChannels","supportedChannels","source_1","formatparse_1","nullfilter_1","bin_1","formula_1","nonpositivenullfilter_1","summary_1","stackscale_1","timeunitdomain_1","colorrank_1","parseUnitData","formatParse","nullFilter","nonPositiveFilter","calculate","timeUnitDomain","stackScale","colorRank","parseLayerData","sourceData","colorRankTransform","nonPositiveFilterTransform","stackData","timeUnitDomainData","doc","createElementNS","tagName","getAttribute","ownerDocument","insertBefore","firstChild","Sentinel","Bounder","ENTER","CONNECTED","DISCONNECTED","parent_id","inheritFrom","_from","_ds","_map","_status","_parent_id","inlineDs","_isSuper","_encoder","sibling","sout","encoder","_listeners","disconnectScales","fcs","isFunction","newItem","keyf","keyFunction","idMap","diff","axs","themeVal","ORIENT","tickValues","tickFormat","tickFormatType","tickSubdivide","subdivide","tickPadding","tickCount","majorTickProperties","majorTicks","minorTickProperties","minorTicks","tickLabelProperties","gridLineProperties","domainProperties","axis_x","axis_y","tickSizeMajor","tickSizeMinor","Type","temporal","nominal","Q","T","O","typeString","peg$subclass","peg$SyntaxError","message","expected","found","captureStackTrace","peg$parse","peg$FAILED","peg$startRuleFunctions","peg$parsestart","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","f1","f2","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$c71","peg$c72","peg$c73","peg$c74","peg$c75","peg$c76","peg$c77","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","peg$c84","peg$c85","peg$c86","peg$c87","peg$c88","peg$c89","peg$c90","peg$c91","peg$c92","peg$c93","peg$c94","peg$c95","peg$c96","peg$currPos","peg$savedPos","peg$posDetailsCache","seenCR","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$result","startRule","peg$computeLocation","peg$buildException","peg$computePosDetails","startPos","endPos","startPosDetails","endPosDetails","peg$fail","cleanupExpected","buildMessage","stringEscape","hex","expectedDescs","expectedDesc","foundDesc","s0","peg$parsemerged","s1","s2","s3","s4","s5","peg$parseordered","peg$parsesep","s6","s7","s8","s9","s10","s11","s12","s13","peg$parsefiltered","peg$parsestream","peg$parsefilter","peg$parsename","peg$parseeventType","peg$parsemarkType","peg$parsecss","peg$parseexpr","SyntaxError","vega_schema_1","_this","parseLayerLayout","childScales","modelScales","modelDomain","childDomain","unionedFields","axisComponent","legendComponent","isLayer","childData","compatible","DataSource","_name","_source","_indexes","_indexFields","_inputNode","_outputNode","_mutates","where","ids","DataSourceInput","preprocess","DataSourceOutput","synchronize","indexes","DataSourceListener","delta","updateIndices","pulse","_srcMap","scaleBandSize","FIELDS","preds","guide","pop","update_status","wasDirty","nestedRefs","level","layoutComponent","distinctFields","LAYOUT","parseUnitLayout","parseUnitSizeLayout","cellConfig","nonOrdinalSize","getDistinct","channelSizeName","unitSizeExpr","cardinalityFormula","parseFacetSizeLayout","childLayoutComponent","sizeType","childSizeComponent","facetSizeFormula","innerSize","parseLayerSizeLayout","sizeType_1","distinctField","previous","controlX","controlY","tempX","tempY","tempControlX","tempControlY","bezierCurveTo","quadraticCurveTo","drawArc","coords","seg","segments","bez","bezier","cols","parsers","clen","inferAll","annotation","Signal","initialValue","_value","_verbose","gen","repeat","zeros","uniform","samples","pdf","cdf","icdf","integer","normal","rds","cd","SQRT2","bootstrap","smooth","defaultVal","dataflow","logging","reader","objects","features","isBoolean","util_2","generate_1","util_3","excludedItems","other","every","arrays","dest","_i","deepMerge_","dlBin","getbins","results","warning","warn","differ","dict","tupleID","prev_update","textBounds","tempBounds","px","py","batch","Heap","_requestedIndexes","dataValues","signalValues","ri","reg","buildIndexes","jlen","skipSignals","pulses","nplse","tpls","ntpls","isSg","pq","_qrank","qrank","peek","done","branch","collects","reflowed","run","Geo","Parameters","lon","lat","projection","clipAngle","d3Projection","proj","_projection","ll","xy","baseSchema","isBuffer","nodeID","Flags","Router","Produces","Mutates","Reflows","Batch","_ids","_deps","_flags","q","cur","_setf","_names","Lookup","onKey","onLast","onData","onF","defaultValue","_lut","_on","Treeify","childField","parentField","aggrs","_internal","execute","cmdlen","pathstr","chunks","parsed","cmd","stacked","NONE","stackByChannels","sc","hasXField","hasYField","xIsAggregate","yIsAggregate","ZERO","arrayType","dataType","fieldType","exprType","valType","_accessors","_resolution","isData","isField","isExpr","parseBg","PARSERS","boolean","TESTS","isDate","fieldNames","bracket","fieldName","typeAll","infer","ignore","VALUES","VALID","MISSING","DISTINCT","SUM","MEAN","AVERAGE","VARIANCE","VARIANCEP","STDEV","STDEVP","MEDIAN","Q1","Q3","MODESKEW","ARGMIN","ARGMAX","SUM_OPS","exprs","vars","_nRefs","handleDep","handleNestedRefs","parseShape","valueRef","hasPath","tpl","hb","lastIndex","rules","inputs","exprFn","predName","predicateArg","colorRef","sgRef","fRef","sRef","tmpl","fieldRef","scaleRef","band","xx","yy","zz","fr","valueSchema","modType","valRef","stringModifiers","numberModifiers","numberValue","stringValue","booleanValue","arrayValue","calcFieldMap","fieldMap","parseComponent","isCount","NUMBER","tickFormatString","inferFormatType","getFormatter","logFilter","MARKS","SVGStringRenderer","_text","head","foot","buildDefs","stop-color","prefixed","attributes","escape_text","markGroup","translateItem","_siftdown","_siftup","pushpop","pidx","cidx","ridx","SQUARE","PRIMITIVE_MARKS","NameMap","_nameMap","rename","oldName","_warnings","_dataNameMap","_scaleNameMap","_sizeNameMap","_description","assembleScales","assembleAxes","assembleLegends","dataSourceType","renameSize","_legend","warnings","isUnit","E","LN2","LOG2E","LOG10E","SQRT1_2","defaultExtension","dataFormat","canMerge","tree","toTable","childrenField","table","Cross","with","diagonal","_lastWith","_cids","_cid","diag","mids","cids","oadd","fltrd","cid","rids","omod","orem","purge","selfCross","woutput","wdata","parseLegendComponent","getLegendDefWithScale","useColorLegendScale","symbolsSpec","titleSpec","_x","_y","_x2","_y2","timeUnitDomainMap","timeUnitData","stackProps","stackComponent","indent","axisBounds","axisDef","tickMajorSize","tickMinorSize","tickEndSize","gridLineStyle","tickLabelStyle","majorTickStyle","minorTickStyle","domainStyle","gridLines","tickLabels","getTicks","major","minor","axisSubdivide","axis_def","titleAutoOffset","newScale","oldScale","rangeBand","axisScaleRange","axisTicks","axisTickLabels","axisDomain","axisTitle","axisTicksExtend","axisLabelExtend","axisDomainExtend","axisTitleExtend","axisUpdate","axisOrients","subticks","axisScaleExtent","rangeExtent","axisAlign","axisBaseline","oldRef","newRef","tickPlacement","tickOffset","ofx","ofy","noop","x3","y3","tempDate","baseDate","utcBaseDate","setTime","entry","STEPS","units","minb","maxb","toUnitMap","treejson","bin_2","binComponent","binTrans","isOrdinalColor","formatTable","formatSummary","FMT","POS","separator","minwidth","maxwidth","limit","lens","__summary__","printCategoricalProfile","printQuantitativeProfile","Token","TokenName","Syntax","PropertyKind","Messages","Regex","strict","lineNumber","lineStart","lookahead","BooleanLiteral","Keyword","NullLiteral","NumericLiteral","Punctuator","StringLiteral","RegularExpression","AssignmentExpression","Data","Get","Set","UnexpectedToken","UnexpectedNumber","UnexpectedString","UnexpectedIdentifier","UnexpectedReserved","UnexpectedEOS","NewlineAfterThrow","InvalidRegExp","UnterminatedRegExp","InvalidLHSInAssignment","InvalidLHSInForIn","MultipleDefaultsInSwitch","NoCatchOrFinally","UnknownLabel","Redeclaration","IllegalContinue","IllegalBreak","IllegalReturn","StrictModeWith","StrictCatchVariable","StrictVarName","StrictParamName","StrictParamDupe","StrictFunctionName","StrictOctalLiteral","StrictDelete","StrictDuplicateProperty","AccessorDataProperty","AccessorGetSet","StrictLHSAssignment","StrictLHSPostfix","StrictLHSPrefix","StrictReservedWord","NonAsciiIdentifierStart","NonAsciiIdentifierPart","assert","condition","isDecimalDigit","isHexDigit","isOctalDigit","isWhiteSpace","isLineTerminator","isIdentifierStart","fromCharCode","isIdentifierPart","isFutureReservedWord","isStrictModeReservedWord","isKeyword","skipComment","scanHexEscape","scanUnicodeCodePointEscape","cu1","cu2","throwError","getEscapedIdentifier","getIdentifier","scanIdentifier","scanPunctuator","code2","ch1","ch2","ch3","ch4","tokenize","openParenToken","tokens","openCurlyToken","scanHexLiteral","scanOctalLiteral","octal","scanNumericLiteral","scanStringLiteral","unescaped","startLineNumber","startLineStart","testRegExp","flags","tmp","$0","$1","exception","scanRegExpBody","classMarker","terminated","literal","scanRegExpFlags","throwErrorTolerant","scanRegExp","regex","collectRegex","loc","isIdentifierName","advanceSlash","prevToken","checkToken","advance","collectToken","lex","Position","SourceLocation","WrappingSourceLocation","startToken","WrappingNode","finish","finishArrayExpression","finishAssignmentExpression","finishBinaryExpression","finishCallExpression","finishConditionalExpression","finishExpressionStatement","finishIdentifier","finishLiteral","finishMemberExpression","finishObjectExpression","finishProgram","finishProperty","kind","finishUnaryExpression","peekLineTerminator","messageFormat","whole","errors","throwUnexpected","expect","expectTolerant","matchKeyword","keyword","consumeSemicolon","parseArrayInitialiser","parseAssignmentExpression","parseObjectPropertyKey","parseObjectProperty","parseObjectInitialiser","parseGroupExpression","parenthesisCount","legalKeywords","parsePrimaryExpression","parseArguments","parseNonComputedProperty","parseNonComputedMember","parseComputedMember","parseLeftHandSideExpressionAllowCall","previousAllowIn","allowIn","parsePostfixExpression","parseUnaryExpression","binaryPrecedence","prec","parseBinaryExpression","marker","markers","parseConditionalExpression","oldParenthesisCount","parseExpressionStatement","parseStatement","parseSourceElement","parseSourceElements","sourceElement","sourceElements","directive","firstRestricted","parseProgram","filterTokenLocation","labelSet","inFunctionBody","inIteration","inSwitch","lastCommentStart","tolerant","lexError","program","supportedEnums","supportedTypes","_isFieldDimension","cardinality","filterNull","stat","SECONDS","MINUTES","YEAR","yearstat","canvasAsync","pendingImages","Canvas","lineDash","_ctx","HTMLElement","pixelRatio","setTransform","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","NOOP","NODASH","setLineDash","dash","lineDashOffset","webkitLineDash","webkitLineDashOffset","mozDash","formulaComponent","Force","_interactive","_setup","_nodes","_links","links","linkStrength","linkDistance","charge","chargeDistance","friction","gravity","alpha","iterations","active","fixed","nodeInput","linkSource","linkInput","configure","tickHandler","t0","t1","newInterval","floori","offseti","d0","d1","millisecond","setMilliseconds","setSeconds","setMinutes","setHours","weekday","tuesday","wednesday","thursday","friday","saturday","setUTCMilliseconds","setUTCSeconds","setUTCMinutes","setUTCHours","setUTCDate","utcWeekday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","setUTCMonth","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","weeks","years","utcMillisecond","utcMilliseconds","utcSeconds","utcMinutes","utcHours","utcDays","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcWeeks","utcMonths","utcYears","EPSILON","logb","eps","lo","hi","date_value","date_index","dmin","dmax","minbins","drawImage","initMarkConfig","qtype","$bin","histogram","numerical","categorical","INSERT","REMOVE","UPSERT","TOGGLE","CLEAR","signalName","exprTrigger","isClear","getters","setters","up","LinkPath","sourceX","sourceY","targetX","targetY","sy","ty","curve","cornerX","cornerY","cornerR","ta","tr","ss","tc","sf","diagonalX","diagonalY","diagonalR","mr","fixedShape","isGrp","rebound","ilen","GeoPath","geojson","CanvasRenderer","appendChild","clipToBounds","ctx","renderAsync","_async_id","clearTimeout","DEFAULT_NULL_FILTERS","nullFilterComponent","filteredFields","Measures","_stream","ADD_CELL","MOD_CELL","summarize_args","_count","_cellkey","_cell","num","flag","aggs","_rems","_consolidate","segmentCache","bezierCache","large","sweep","rotateX","th","sin_th","cos_th","pl","a00","a01","a10","a11","sfactor_sq","sfactor","th0","th1","th_arc","segs","th2","th3","cos_th0","sin_th0","cos_th1","sin_th1","th_half","sin_th_h2","quantile","geometric","harmonic","M2","avg","med","std","dot","dist","L2","cohensd","n1","n2","covariance","xm","ym","vx","vy","tie","mu","cor","mua","mub","sda","sdb","ra","mat","aa","bb","ab","linearRegression","slope","icept","fit","intercept","R","rss","res","ci","bs","means","SE","paired","ztestP","ztest2","ztest1","nullH","nullh","gaussian","diffs","meanDiff","entropy","mutual","info","profile","sd","colorRankComponent","containsTimeUnit","onlyRef","fun","addComma","MILLISECONDS","Stack","validate","DataFormatType","DataTable","Rank","norm","klen","format_map","get_format","clearFormatCache","variable","template_re","template_escaper","template_escapeChar","template_var","filter_re","stringCast","strcall","formatter","template_format","args_re","template_escapes","'","\\","\r","\n"," "," ","=","parseComparator","==","!=",">",">=","<","<=","and","parseLogical","&&","||","in","parseIn","nullScale","parsePredicates","parseSignal","parseOperands","operands","decl","setData","operand","parseSpec","arglen","argidx","viewFactory","opts","nonPositiveFilter_1","nonPositiveComponent","nonPositiveFilterComponent","inputSpec","assembleRootGroup","rootGroup","YEARMONTH","YEARMONTHDAY","YEARMONTHDATE","YEARDAY","YEARDATE","YEARMONTHDAYHOURS","YEARMONTHDAYHOURSMINUTES","YEARMONTHDAYHOURSMINUTESSECONDS","HOURSMINUTES","HOURSMINUTESSECONDS","MINUTESSECONDS","SECONDSMILLISECONDS","YEARQUARTER","QUARTERMONTH","YEARQUARTERMONTH","dateComponents","timeComponents","template_1","fullTimeUnit","fullTimeUnitStr","timeUnitStr","cousin","iidx","midx","Buffer","FNAME","namedfunc","false","keystr","field_re","$valid","$length","$in","stablesort","keyFn","indices","sb","permute","swap","padchar","strrep","word","ellipsis","truncateOnWord","l1","l2","cnt","truncate_word_re","config_2","mark_2","_encoding","_initEncoding","_initLegend","_stack","_scaleType","legendSpec","toSpec","excludeConfig","excludeData","print"],"mappings":"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AAAmd,UACAnd,EAAAid,UACAjd,EAAA+c,QACA/c,EAAAwgB,OACAxgB,EAAA07F,UACA17F,EAAA27F,UACA37F,EAAA47F,WACA57F,EAAA67F,aACA77F,EAAA87F,YACA97F,EAAA+7F,UACA/7F,EAAAg8F,YACAh8F,EAAAi8F,QACAj8F,EAAAyc,SACAzc,EAAAk8F,QACAl8F,EAAAm8F,iBACAn8F,EAAAo8F,kBACAp8F,EAAAq8F,aACAr8F,EAAAs8F,aACAt8F,EAAAu8F,WACAv8F,EAAAw8F,UACAx8F,EAAAy8F,cACAz8F,EAAA08F,cACA18F,EAAA28F,eACA38F,EAAA48F,iBACA58F,EAAA68F,gBACA78F,EAAA88F,cACA98F,EAAA+8F,gBACA/8F,EAAAg9F,YACAh9F,EAAAi9F,aACAj9F,EAAAk9F,YACAl9F,EAAAm6F,cACAn6F,EAAAw2C,SACAx2C,EAAAy2C,SACAz2C,EAAA02C,OACA12C,EAAAwmB,MACAxmB,EAAAmoB,SACAnoB,EAAAooB,SACApoB,EAAAy6F,UACAz6F,EAAA06F,YACA16F,EAAA26F,WACA36F,EAAA46F,SACA56F,EAAA66F,WACA76F,EAAA22C,KAAAxuB,EACAnoB,EAAAynC,QACAznC,EAAAsc,OACAtc,EAAA42C,YACA52C,EAAA62C,YACA72C,EAAA82C,UACA92C,EAAAyoB,SACAzoB,EAAA8oB,YACA9oB,EAAA+oB,YACA/oB,EAAAo7F,aACAp7F,EAAAq7F,eACAr7F,EAAAs7F,cACAt7F,EAAAu7F,YACAv7F,EAAAw7F,cACAx7F,EAAAg3C,QAAAluB,EACA9oB,EAAA+2C,WACA/2C,EAAA0oB,UACA1oB,EAAAmmD,SAAA2zC,0BC/VA,IAAAr2F,EAAA3P,EAAA,QACAmoB,EAAAnoB,EAAA,QACAqpG,EAAA,MAEA,SAAA57D,EAAA3mC,GACA,IAAAA,EAAA,CAAa,MAAAkB,MAAA,4BAGb,IAAAotF,EAAAtuF,EAAA4mC,SAAA,GACAjhC,EAAA3F,EAAA2F,MAAA,GACA68F,EAAAniG,KAAA5G,IAAAkM,GACAg6C,EAAA3/C,EAAA2/C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","file":"0.7ded8be4c2e02d541f25.js","sourcesContent":["var d3 = require('d3'),\n    dl = require('datalib'),\n    df = require('vega-dataflow'),\n        scene = require('vega-scenegraph'),\n    sg = scene.render,\n    bound = scene.bound,\n    log = require('vega-logging'),\n    Deps = df.Dependencies,\n    parseStreams = require('../parse/streams'),\n    Encoder = require('../scene/Encoder'),\n    Transition = require('../scene/Transition');\n\nfunction View(el, width, height) {\n  this._el    = null;\n  this._model = null;\n  this._width   = this.__width = width || 500;\n  this._height  = this.__height = height || 300;\n  this._bgcolor = null;\n  this._cursor  = true; // Set cursor based on hover propset?\n  this._autopad = 1;\n  this._padding = {top:0, left:0, bottom:0, right:0};\n  this._viewport = null;\n  this._renderer = null;\n  this._handler  = null;\n  this._streamer = null; // Targeted update for streaming changes\n  this._skipSignals = false; // Batch set signals can skip reevaluation.\n  this._changeset = null;\n  this._repaint = true; // Full re-render on every re-init\n  this._renderers = sg;\n  this._io  = null;\n  this._api = {}; // Stash streaming data API sandboxes.\n}\n\nvar prototype = View.prototype;\n\nprototype.model = function(model) {\n  if (!arguments.length) return this._model;\n  if (this._model !== model) {\n    this._model = model;\n    this._streamer = new df.Node(model);\n    this._streamer._rank = -1;  // HACK: To reduce re-ranking churn.\n    this._changeset = df.ChangeSet.create();\n    if (this._handler) this._handler.model(model);\n  }\n  return this;\n};\n\n// Sandboxed streaming data API\nfunction streaming(src) {\n  var view = this,\n      ds = this._model.data(src);\n  if (!ds) return log.error('Data source \"'+src+'\" is not defined.');\n\n  var listener = ds.pipeline()[0],\n      streamer = this._streamer,\n      api = {};\n\n  // If we have it stashed, don't create a new closure.\n  if (this._api[src]) return this._api[src];\n\n  api.insert = function(vals) {\n    ds.insert(dl.duplicate(vals));  // Don't pollute the environment\n    streamer.addListener(listener);\n    view._changeset.data[src] = 1;\n    return api;\n  };\n\n  api.update = function() {\n    streamer.addListener(listener);\n    view._changeset.data[src] = 1;\n    return (ds.update.apply(ds, arguments), api);\n  };\n\n  api.remove = function() {\n    streamer.addListener(listener);\n    view._changeset.data[src] = 1;\n    return (ds.remove.apply(ds, arguments), api);\n  };\n\n  api.values = function() { return ds.values(); };\n\n  return (this._api[src] = api);\n}\n\nprototype.data = function(data) {\n  var v = this;\n  if (!arguments.length) return v._model.values();\n  else if (dl.isString(data)) return streaming.call(v, data);\n  else if (dl.isObject(data)) {\n    dl.keys(data).forEach(function(k) {\n      var api = streaming.call(v, k);\n      data[k](api);\n    });\n  }\n  return this;\n};\n\nvar VIEW_SIGNALS = dl.toMap(['width', 'height', 'padding']);\n\nprototype.signal = function(name, value, skip) {\n  var m = this._model,\n      key, values;\n\n  // Getter. Returns the value for the specified signal, or\n  // returns all signal values.\n  if (!arguments.length) {\n    return m.values(Deps.SIGNALS);\n  } else if (arguments.length === 1 && dl.isString(name)) {\n    return m.values(Deps.SIGNALS, name);\n  }\n\n  // Setter. Can be done in batch or individually. In either case,\n  // the final argument determines if set signals should be skipped.\n  if (dl.isObject(name)) {\n    values = name;\n    skip = value;\n  } else {\n    values = {};\n    values[name] = value;\n  }\n  for (key in values) {\n    if (VIEW_SIGNALS[key]) {\n      this[key](values[key]);\n    } else {\n      setSignal.call(this, key, values[key]);\n    }\n  }\n  return (this._skipSignals = skip, this);\n};\n\nfunction setSignal(name, value) {\n  var cs = this._changeset,\n      sg = this._model.signal(name);\n  if (!sg) return log.error('Signal \"'+name+'\" is not defined.');\n\n  this._streamer.addListener(sg.value(value));\n  cs.signals[name] = 1;\n  cs.reflow = true;\n}\n\nprototype.width = function(width) {\n  if (!arguments.length) return this.__width;\n  if (this.__width !== width) {\n    this._width = this.__width = width;\n    this.model().width(width);\n    this.initialize();\n    if (this._strict) this._autopad = 1;\n    setSignal.call(this, 'width', width);\n  }\n  return this;\n};\n\nprototype.height = function(height) {\n  if (!arguments.length) return this.__height;\n  if (this.__height !== height) {\n    this._height = this.__height = height;\n    this.model().height(height);\n    this.initialize();\n    if (this._strict) this._autopad = 1;\n    setSignal.call(this, 'height', height);\n  }\n  return this;\n};\n\nprototype.background = function(bgcolor) {\n  if (!arguments.length) return this._bgcolor;\n  if (this._bgcolor !== bgcolor) {\n    this._bgcolor = bgcolor;\n    this.initialize();\n  }\n  return this;\n};\n\nprototype.padding = function(pad) {\n  if (!arguments.length) return this._padding;\n  if (this._padding !== pad) {\n    if (dl.isString(pad)) {\n      this._autopad = 1;\n      this._padding = {top:0, left:0, bottom:0, right:0};\n      this._strict = (pad === 'strict');\n    } else {\n      this._autopad = 0;\n      this._padding = pad;\n      this._strict = false;\n    }\n    if (this._renderer) this._renderer.resize(this._width, this._height, this._padding);\n    if (this._handler)  this._handler.padding(this._padding);\n    setSignal.call(this, 'padding', this._padding);\n  }\n  return (this._repaint = true, this);\n};\n\nfunction viewBounds() {\n  var s = this.model().scene(),\n      legends = s.items[0].legendItems,\n      i = 0, len = legends.length,\n      b, lb;\n\n  // For strict padding, clip legend height to prevent a tiny data rectangle.\n  if (this._strict) {\n    b = bound.mark(s, null, false);\n    for (; i<len; ++i) {\n      lb = legends[i].bounds;\n      b.add(lb.x1, 0).add(lb.x2, 0);\n    }\n    return b;\n  }\n\n  return s.bounds;\n}\n\nprototype.autopad = function(opt) {\n  if (this._autopad < 1) return this;\n  else this._autopad = 0;\n\n  var b = viewBounds.call(this),\n      pad = this._padding,\n      config = this.model().config(),\n      inset = config.autopadInset,\n      l = b.x1 < 0 ? Math.ceil(-b.x1) + inset : 0,\n      t = b.y1 < 0 ? Math.ceil(-b.y1) + inset : 0,\n      r = b.x2 > this._width  ? Math.ceil(+b.x2 - this._width) + inset : 0;\n  b = b.y2 > this._height ? Math.ceil(+b.y2 - this._height) + inset : 0;\n  pad = {left:l, top:t, right:r, bottom:b};\n\n  if (this._strict) {\n    this._autopad = 0;\n    this._padding = pad;\n    this._width = Math.max(0, this.__width - (l+r));\n    this._height = Math.max(0, this.__height - (t+b));\n\n    this._model.width(this._width).height(this._height).reset();\n    setSignal.call(this, 'width', this._width);\n    setSignal.call(this, 'height', this._height);\n    setSignal.call(this, 'padding', pad);\n\n    this.initialize().update({props:'enter'}).update({props:'update'});\n  } else {\n    this.padding(pad).update(opt);\n  }\n  return this;\n};\n\nprototype.viewport = function(size) {\n  if (!arguments.length) return this._viewport;\n  if (this._viewport !== size) {\n    this._viewport = size;\n    this.initialize();\n  }\n  return this;\n};\n\nprototype.renderer = function(type) {\n  if (!arguments.length) return this._renderer;\n  if (this._renderers[type]) type = this._renderers[type];\n  else if (dl.isString(type)) throw new Error('Unknown renderer: ' + type);\n  else if (!type) throw new Error('No renderer specified');\n\n  if (this._io !== type) {\n    this._io = type;\n    this._renderer = null;\n    this.initialize();\n    if (this._build) this.render();\n  }\n  return this;\n};\n\nprototype.initialize = function(el) {\n  var v = this, prevHandler,\n      w = v._width, h = v._height, pad = v._padding, bg = v._bgcolor,\n      config = this.model().config();\n\n  if (!arguments.length || el === null) {\n    el = this._el ? this._el.parentNode : null;\n    if (!el) return this;  // This View cannot init w/o an\n  }\n\n  // clear pre-existing container\n  d3.select(el).select('div.vega').remove();\n\n  // add div container\n  this._el = el = d3.select(el)\n    .append('div')\n    .attr('class', 'vega')\n    .style('position', 'relative')\n    .node();\n  if (v._viewport) {\n    d3.select(el)\n      .style('width',  (v._viewport[0] || w)+'px')\n      .style('height', (v._viewport[1] || h)+'px')\n      .style('overflow', 'auto');\n  }\n\n  // renderer\n  sg.canvas.Renderer.RETINA = config.render.retina;\n  v._renderer = (v._renderer || new this._io.Renderer(config.load))\n    .initialize(el, w, h, pad)\n    .background(bg);\n\n  // input handler\n  prevHandler = v._handler;\n  v._handler = new this._io.Handler()\n    .initialize(el, pad, v);\n\n  if (prevHandler) {\n    prevHandler.handlers().forEach(function(h) {\n      v._handler.on(h.type, h.handler);\n    });\n  } else {\n    // Register event listeners for signal stream definitions.\n    v._detach = parseStreams(this);\n  }\n\n  return (this._repaint = true, this);\n};\n\nprototype.destroy = function() {\n  if (this._detach) this._detach();\n};\n\nfunction build() {\n  var v = this;\n  v._renderNode = new df.Node(v._model)\n    .router(true);\n\n  v._renderNode.evaluate = function(input) {\n    log.debug(input, ['rendering']);\n\n    var s = v._model.scene(),\n        h = v._handler;\n\n    if (h && h.scene) h.scene(s);\n\n    if (input.trans) {\n      input.trans.start(function(items) { v._renderer.render(s, items); });\n    } else if (v._repaint) {\n      v._renderer.render(s);\n    } else if (input.dirty.length) {\n      v._renderer.render(s, input.dirty);\n    }\n\n    if (input.dirty.length) {\n      input.dirty.forEach(function(i) { i._dirty = false; });\n      s.items[0]._dirty = false;\n    }\n\n    v._repaint = v._skipSignals = false;\n    return input;\n  };\n\n  return (v._model.scene(v._renderNode), true);\n}\n\nprototype.update = function(opt) {\n  opt = opt || {};\n  var v = this,\n      model = this._model,\n      streamer = this._streamer,\n      cs = this._changeset,\n      trans = opt.duration ? new Transition(opt.duration, opt.ease) : null;\n\n  if (trans) cs.trans = trans;\n  if (opt.props !== undefined) {\n    if (dl.keys(cs.data).length > 0) {\n      throw Error(\n        'New data values are not reflected in the visualization.' +\n        ' Please call view.update() before updating a specified property set.'\n      );\n    }\n\n    cs.reflow  = true;\n    cs.request = opt.props;\n  }\n\n  var built = v._build;\n  v._build = v._build || build.call(this);\n\n  // If specific items are specified, short-circuit dataflow graph.\n  // Else-If there are streaming updates, perform a targeted propagation.\n  // Otherwise, re-evaluate the entire model (datasources + scene).\n  if (opt.items && built) {\n    Encoder.update(model, opt.trans, opt.props, opt.items, cs.dirty);\n    v._renderNode.evaluate(cs);\n  } else if (streamer.listeners().length && built) {\n    // Include re-evaluation entire model when repaint flag is set\n    if (this._repaint) streamer.addListener(model.node());\n    model.propagate(cs, streamer, null, this._skipSignals);\n    streamer.disconnect();\n  } else {\n    model.fire(cs);\n  }\n\n  v._changeset = df.ChangeSet.create();\n\n  return v.autopad(opt);\n};\n\nprototype.toImageURL = function(type) {\n  var v = this, Renderer;\n\n  // lookup appropriate renderer\n  switch (type || 'png') {\n    case 'canvas':\n    case 'png':\n      Renderer = sg.canvas.Renderer; break;\n    case 'svg':\n      Renderer = sg.svg.string.Renderer; break;\n    default: throw Error('Unrecognized renderer type: ' + type);\n  }\n\n  var retina = sg.canvas.Renderer.RETINA;\n  sg.canvas.Renderer.RETINA = false; // ignore retina screen\n\n  // render the scenegraph\n  var ren = new Renderer(v._model.config.load)\n    .initialize(null, v._width, v._height, v._padding)\n    .background(v._bgcolor)\n    .render(v._model.scene());\n\n  sg.canvas.Renderer.RETINA = retina; // restore retina settings\n\n  // return data url\n  if (type === 'svg') {\n    var blob = new Blob([ren.svg()], {type: 'image/svg+xml'});\n    return window.URL.createObjectURL(blob);\n  } else {\n    return ren.canvas().toDataURL('image/png');\n  }\n};\n\nprototype.render = function(items) {\n  this._renderer.render(this._model.scene(), items);\n  return this;\n};\n\nprototype.on = function() {\n  this._handler.on.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.onSignal = function(name, handler) {\n  var sg = this._model.signal(name);\n  return (sg ?\n    sg.on(handler) : log.error('Signal \"'+name+'\" is not defined.'), this);\n};\n\nprototype.off = function() {\n  this._handler.off.apply(this._handler, arguments);\n  return this;\n};\n\nprototype.offSignal = function(name, handler) {\n  var sg = this._model.signal(name);\n  return (sg ?\n    sg.off(handler) : log.error('Signal \"'+name+'\" is not defined.'), this);\n};\n\nView.factory = function(model) {\n  var HeadlessView = require('./HeadlessView');\n  return function(opt) {\n    opt = opt || {};\n    var defs = model.defs();\n    var v = (opt.el ? new View() : new HeadlessView())\n      .model(model)\n      .renderer(opt.renderer || 'canvas')\n      .width(defs.width)\n      .height(defs.height)\n      .background(defs.background)\n      .padding(defs.padding)\n      .viewport(defs.viewport)\n      .initialize(opt.el);\n\n    if (opt.data) v.data(opt.data);\n\n    // Register handlers for the hover propset and cursors.\n    if (opt.el) {\n      if (opt.hover !== false) {\n        v.on('mouseover', function(evt, item) {\n          if (item && item.hasPropertySet('hover')) {\n            this.update({props:'hover', items:item});\n          }\n        })\n        .on('mouseout', function(evt, item) {\n          if (item && item.hasPropertySet('hover')) {\n            this.update({props:'update', items:item});\n          }\n        });\n      }\n\n      if (opt.cursor !== false) {\n        // If value is a string, it is a custom value set by the user.\n        // In this case, the user is responsible for maintaining the cursor state\n        // and control only reverts back to this handler if set back to 'default'.\n        v.onSignal('cursor', function(name, value) {\n          var body = d3.select('body');\n          if (dl.isString(value)) {\n            v._cursor = value === 'default';\n            body.style('cursor', value);\n          } else if (dl.isObject(value) && v._cursor) {\n            body.style('cursor', value.default);\n          }\n        });\n      }\n    }\n\n    return v;\n  };\n};\n\nmodule.exports = View;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/core/View.js\n// module id = +5nH\n// module chunks = 0","var DOM = require('../../util/dom'),\n    Handler = require('../Handler'),\n    marks = require('./marks');\n\nfunction CanvasHandler() {\n  Handler.call(this);\n  this._down = null;\n  this._touch = null;\n  this._first = true;\n}\n\nvar base = Handler.prototype;\nvar prototype = (CanvasHandler.prototype = Object.create(base));\nprototype.constructor = CanvasHandler;\n\nprototype.initialize = function(el, pad, obj) {\n  // add event listeners\n  var canvas = this._canvas = DOM.find(el, 'canvas');\n  if (canvas) {\n    var that = this;\n    this.events.forEach(function(type) {\n      canvas.addEventListener(type, function(evt) {\n        if (prototype[type]) {\n          prototype[type].call(that, evt);\n        } else {\n          that.fire(type, evt);\n        }\n      });\n    });\n  }\n\n  return base.initialize.call(this, el, pad, obj);\n};\n\nprototype.canvas = function() {\n  return this._canvas;\n};\n\n// retrieve the current canvas context\nprototype.context = function() {\n  return this._canvas.getContext('2d');\n};\n\n// supported events\nprototype.events = [\n  'keydown',\n  'keypress',\n  'keyup',\n  'dragenter',\n  'dragleave',\n  'dragover',\n  'mousedown',\n  'mouseup',\n  'mousemove',\n  'mouseout',\n  'mouseover',\n  'click',\n  'dblclick',\n  'wheel',\n  'mousewheel',\n  'touchstart',\n  'touchmove',\n  'touchend'\n];\n\n// to keep firefox happy\nprototype.DOMMouseScroll = function(evt) {\n  this.fire('mousewheel', evt);\n};\n\nfunction move(moveEvent, overEvent, outEvent) {\n  return function(evt) {\n    var a = this._active,\n        p = this.pickEvent(evt);\n\n    if (p === a) {\n      // active item and picked item are the same\n      this.fire(moveEvent, evt); // fire move\n    } else {\n      // active item and picked item are different\n      this.fire(outEvent, evt);  // fire out for prior active item\n      this._active = p;            // set new active item\n      this.fire(overEvent, evt); // fire over for new active item\n      this.fire(moveEvent, evt); // fire move for new active item\n    }\n  };\n}\n\nfunction inactive(type) {\n  return function(evt) {\n    this.fire(type, evt);\n    this._active = null;\n  };\n}\n\nprototype.mousemove = move('mousemove', 'mouseover', 'mouseout');\nprototype.dragover  = move('dragover', 'dragenter', 'dragleave');\n\nprototype.mouseout  = inactive('mouseout');\nprototype.dragleave = inactive('dragleave');\n\nprototype.mousedown = function(evt) {\n  this._down = this._active;\n  this.fire('mousedown', evt);\n};\n\nprototype.click = function(evt) {\n  if (this._down === this._active) {\n    this.fire('click', evt);\n    this._down = null;\n  }\n};\n\nprototype.touchstart = function(evt) {\n  this._touch = this.pickEvent(evt.changedTouches[0]);\n\n  if (this._first) {\n    this._active = this._touch;\n    this._first = false;\n  }\n\n  this.fire('touchstart', evt, true);\n};\n\nprototype.touchmove = function(evt) {\n  this.fire('touchmove', evt, true);\n};\n\nprototype.touchend = function(evt) {\n  this.fire('touchend', evt, true);\n  this._touch = null;\n};\n\n// fire an event\nprototype.fire = function(type, evt, touch) {\n  var a = touch ? this._touch : this._active,\n      h = this._handlers[type], i, len;\n  if (h) {\n    evt.vegaType = type;\n    for (i=0, len=h.length; i<len; ++i) {\n      h[i].handler.call(this._obj, evt, a);\n    }\n  }\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = this.eventName(type),\n      h = this._handlers;\n  (h[name] || (h[name] = [])).push({\n    type: type,\n    handler: handler\n  });\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = this.eventName(type),\n      h = this._handlers[name], i;\n  if (!h) return;\n  for (i=h.length; --i>=0;) {\n    if (h[i].type !== type) continue;\n    if (!handler || h[i].handler === handler) h.splice(i, 1);\n  }\n  return this;\n};\n\nprototype.pickEvent = function(evt) {\n  var rect = this._canvas.getBoundingClientRect(),\n      pad = this._padding, x, y;\n  return this.pick(this._scene,\n    x = (evt.clientX - rect.left),\n    y = (evt.clientY - rect.top),\n    x - pad.left, y - pad.top);\n};\n\n// find the scenegraph item at the current mouse position\n// x, y -- the absolute x, y mouse coordinates on the canvas element\n// gx, gy -- the relative coordinates within the current group\nprototype.pick = function(scene, x, y, gx, gy) {\n  var g = this.context(),\n      mark = marks[scene.marktype];\n  return mark.pick.call(this, g, scene, x, y, gx, gy);\n};\n\nmodule.exports = CanvasHandler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/render/canvas/CanvasHandler.js\n// module id = +Xqm\n// module chunks = 0","var util = require('../util');\nvar stats = require('../stats');\n\nvar REM = '__dl_rem__';\n\nfunction Collector(key) {\n  this._add = [];\n  this._rem = [];\n  this._key = key || null;\n  this._last = null;\n}\n\nvar proto = Collector.prototype;\n\nproto.add = function(v) {\n  this._add.push(v);\n};\n\nproto.rem = function(v) {\n  this._rem.push(v);\n};\n\nproto.values = function() {\n  this._get = null;\n  if (this._rem.length === 0) return this._add;\n\n  var a = this._add,\n      r = this._rem,\n      k = this._key,\n      x = Array(a.length - r.length),\n      i, j, n, m;\n\n  if (!util.isObject(r[0])) {\n    // processing raw values\n    m = stats.count.map(r);\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (m[a[i]] > 0) {\n        m[a[i]] -= 1;\n      } else {\n        x[j++] = a[i];\n      }\n    }\n  } else if (k) {\n    // has unique key field, so use that\n    m = util.toMap(r, k);\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!m.hasOwnProperty(k(a[i]))) { x[j++] = a[i]; }\n    }\n  } else {\n    // no unique key, mark tuples directly\n    for (i=0, n=r.length; i<n; ++i) {\n      r[i][REM] = 1;\n    }\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!a[i][REM]) { x[j++] = a[i]; }\n    }\n    for (i=0, n=r.length; i<n; ++i) {\n      delete r[i][REM];\n    }\n  }\n\n  this._rem = [];\n  return (this._add = x);\n};\n\n// memoizing statistics methods\n\nproto.extent = function(get) {\n  if (this._get !== get || !this._ext) {\n    var v = this.values(),\n        i = stats.extent.index(v, get);\n    this._ext = [v[i[0]], v[i[1]]];\n    this._get = get;\n  }\n  return this._ext;\n};\n\nproto.argmin = function(get) {\n  return this.extent(get)[0];\n};\n\nproto.argmax = function(get) {\n  return this.extent(get)[1];\n};\n\nproto.min = function(get) {\n  var m = this.extent(get)[0];\n  return m != null ? get(m) : +Infinity;\n};\n\nproto.max = function(get) {\n  var m = this.extent(get)[1];\n  return m != null ? get(m) : -Infinity;\n};\n\nproto.quartile = function(get) {\n  if (this._get !== get || !this._q) {\n    this._q = stats.quartile(this.values(), get);\n    this._get = get;\n  }\n  return this._q;\n};\n\nproto.q1 = function(get) {\n  return this.quartile(get)[0];\n};\n\nproto.q2 = function(get) {\n  return this.quartile(get)[1];\n};\n\nproto.q3 = function(get) {\n  return this.quartile(get)[2];\n};\n\nmodule.exports = Collector;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/aggregate/collector.js\n// module id = /2vj\n// module chunks = 0","\"use strict\";\nvar aggregate_1 = require('./aggregate');\nvar timeunit_1 = require('./timeunit');\nvar type_1 = require('./type');\nvar vlEncoding = require('./encoding');\nvar mark_1 = require('./mark');\nexports.DELIM = '|';\nexports.ASSIGN = '=';\nexports.TYPE = ',';\nexports.FUNC = '_';\nfunction shorten(spec) {\n    return 'mark' + exports.ASSIGN + spec.mark +\n        exports.DELIM + shortenEncoding(spec.encoding);\n}\nexports.shorten = shorten;\nfunction parse(shorthand, data, config) {\n    var split = shorthand.split(exports.DELIM), mark = split.shift().split(exports.ASSIGN)[1].trim(), encoding = parseEncoding(split.join(exports.DELIM));\n    var spec = {\n        mark: mark_1.Mark[mark],\n        encoding: encoding\n    };\n    if (data !== undefined) {\n        spec.data = data;\n    }\n    if (config !== undefined) {\n        spec.config = config;\n    }\n    return spec;\n}\nexports.parse = parse;\nfunction shortenEncoding(encoding) {\n    return vlEncoding.map(encoding, function (fieldDef, channel) {\n        return channel + exports.ASSIGN + shortenFieldDef(fieldDef);\n    }).join(exports.DELIM);\n}\nexports.shortenEncoding = shortenEncoding;\nfunction parseEncoding(encodingShorthand) {\n    return encodingShorthand.split(exports.DELIM).reduce(function (m, e) {\n        var split = e.split(exports.ASSIGN), enctype = split[0].trim(), fieldDefShorthand = split[1];\n        m[enctype] = parseFieldDef(fieldDefShorthand);\n        return m;\n    }, {});\n}\nexports.parseEncoding = parseEncoding;\nfunction shortenFieldDef(fieldDef) {\n    return (fieldDef.aggregate ? fieldDef.aggregate + exports.FUNC : '') +\n        (fieldDef.timeUnit ? fieldDef.timeUnit + exports.FUNC : '') +\n        (fieldDef.bin ? 'bin' + exports.FUNC : '') +\n        (fieldDef.field || '') + exports.TYPE + type_1.SHORT_TYPE[fieldDef.type];\n}\nexports.shortenFieldDef = shortenFieldDef;\nfunction shortenFieldDefs(fieldDefs, delim) {\n    if (delim === void 0) { delim = exports.DELIM; }\n    return fieldDefs.map(shortenFieldDef).join(delim);\n}\nexports.shortenFieldDefs = shortenFieldDefs;\nfunction parseFieldDef(fieldDefShorthand) {\n    var split = fieldDefShorthand.split(exports.TYPE);\n    var fieldDef = {\n        field: split[0].trim(),\n        type: type_1.TYPE_FROM_SHORT_TYPE[split[1].trim()]\n    };\n    for (var i = 0; i < aggregate_1.AGGREGATE_OPS.length; i++) {\n        var a = aggregate_1.AGGREGATE_OPS[i];\n        if (fieldDef.field.indexOf(a + '_') === 0) {\n            fieldDef.field = fieldDef.field.substr(a.toString().length + 1);\n            if (a === aggregate_1.AggregateOp.COUNT && fieldDef.field.length === 0) {\n                fieldDef.field = '*';\n            }\n            fieldDef.aggregate = a;\n            break;\n        }\n    }\n    for (var i = 0; i < timeunit_1.TIMEUNITS.length; i++) {\n        var tu = timeunit_1.TIMEUNITS[i];\n        if (fieldDef.field && fieldDef.field.indexOf(tu + '_') === 0) {\n            fieldDef.field = fieldDef.field.substr(fieldDef.field.length + 1);\n            fieldDef.timeUnit = tu;\n            break;\n        }\n    }\n    if (fieldDef.field && fieldDef.field.indexOf('bin_') === 0) {\n        fieldDef.field = fieldDef.field.substr(4);\n        fieldDef.bin = true;\n    }\n    return fieldDef;\n}\nexports.parseFieldDef = parseFieldDef;\n//# sourceMappingURL=shorthand.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/shorthand.js\n// module id = /7Ur\n// module chunks = 0","var dl = require('datalib'),\n    log  = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction Sort(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {by: {type: 'array<field>'} });\n  this.router(true);\n}\n\nvar prototype = (Sort.prototype = Object.create(Transform.prototype));\nprototype.constructor = Sort;\n\nprototype.transform = function(input) {\n  log.debug(input, ['sorting']);\n\n  if (input.add.length || input.mod.length || input.rem.length) {\n    input.sort = dl.comparator(this.param('by').field);\n  }\n  return input;\n};\n\nmodule.exports = Sort;\n\nSort.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Sort transform\",\n  \"description\": \"Sorts the values of a data set.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"sort\"]},\n    \"by\": {\n      \"oneOf\": [\n        {\"type\": \"string\"},\n        {\"type\": \"array\", \"items\": {\"type\": \"string\"}}\n      ],\n      \"description\": \"A list of fields to use as sort criteria.\"\n    }\n  },\n  \"required\": [\"type\", \"by\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Sort.js\n// module id = /lc5\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar encoding_1 = require('../../encoding');\nvar fielddef_1 = require('../../fielddef');\nvar mark_1 = require('../../mark');\nvar scale_1 = require('../../scale');\nvar util_1 = require('../../util');\nvar area_1 = require('./area');\nvar bar_1 = require('./bar');\nvar common_1 = require('../common');\nvar line_1 = require('./line');\nvar point_1 = require('./point');\nvar rule_1 = require('./rule');\nvar text_1 = require('./text');\nvar tick_1 = require('./tick');\nvar markCompiler = {\n    area: area_1.area,\n    bar: bar_1.bar,\n    line: line_1.line,\n    point: point_1.point,\n    text: text_1.text,\n    tick: tick_1.tick,\n    rule: rule_1.rule,\n    circle: point_1.circle,\n    square: point_1.square\n};\nfunction parseMark(model) {\n    if (util_1.contains([mark_1.LINE, mark_1.AREA], model.mark())) {\n        return parsePathMark(model);\n    }\n    else {\n        return parseNonPathMark(model);\n    }\n}\nexports.parseMark = parseMark;\nfunction parsePathMark(model) {\n    var mark = model.mark();\n    var isFaceted = model.parent() && model.parent().isFacet();\n    var dataFrom = { data: model.dataTable() };\n    var details = detailFields(model);\n    var pathMarks = [\n        {\n            name: model.name('marks'),\n            type: markCompiler[mark].markType(),\n            from: util_1.extend(isFaceted || details.length > 0 ? {} : dataFrom, { transform: [{ type: 'sort', by: sortPathBy(model) }] }),\n            properties: { update: markCompiler[mark].properties(model) }\n        }\n    ];\n    if (details.length > 0) {\n        var facetTransform = { type: 'facet', groupby: details };\n        var transform = mark === mark_1.AREA && model.stack() ?\n            stackTransforms(model, true).concat(facetTransform) :\n            [].concat(facetTransform, model.has(channel_1.ORDER) ? [{ type: 'sort', by: sortBy(model) }] : []);\n        return [{\n                name: model.name('pathgroup'),\n                type: 'group',\n                from: util_1.extend(isFaceted ? {} : dataFrom, { transform: transform }),\n                properties: {\n                    update: {\n                        width: { field: { group: 'width' } },\n                        height: { field: { group: 'height' } }\n                    }\n                },\n                marks: pathMarks\n            }];\n    }\n    else {\n        return pathMarks;\n    }\n}\nfunction parseNonPathMark(model) {\n    var mark = model.mark();\n    var isFaceted = model.parent() && model.parent().isFacet();\n    var dataFrom = { data: model.dataTable() };\n    var marks = [];\n    if (mark === mark_1.TEXT &&\n        model.has(channel_1.COLOR) &&\n        model.config().mark.applyColorToBackground && !model.has(channel_1.X) && !model.has(channel_1.Y)) {\n        marks.push(util_1.extend({\n            name: model.name('background'),\n            type: 'rect'\n        }, isFaceted ? {} : { from: dataFrom }, { properties: { update: text_1.text.background(model) } }));\n    }\n    marks.push(util_1.extend({\n        name: model.name('marks'),\n        type: markCompiler[mark].markType()\n    }, (!isFaceted || model.stack() || model.has(channel_1.ORDER)) ? {\n        from: util_1.extend(isFaceted ? {} : dataFrom, model.stack() ?\n            { transform: stackTransforms(model, false) } :\n            model.has(channel_1.ORDER) ?\n                { transform: [{ type: 'sort', by: sortBy(model) }] } :\n                {})\n    } : {}, { properties: { update: markCompiler[mark].properties(model) } }));\n    if (model.has(channel_1.LABEL) && markCompiler[mark].labels) {\n        var labelProperties = markCompiler[mark].labels(model);\n        if (labelProperties !== undefined) {\n            marks.push(util_1.extend({\n                name: model.name('label'),\n                type: 'text'\n            }, isFaceted ? {} : { from: dataFrom }, { properties: { update: labelProperties } }));\n        }\n    }\n    return marks;\n}\nfunction sortBy(model) {\n    if (model.has(channel_1.ORDER)) {\n        var channelDef = model.encoding().order;\n        if (channelDef instanceof Array) {\n            return channelDef.map(common_1.sortField);\n        }\n        else {\n            return common_1.sortField(channelDef);\n        }\n    }\n    return null;\n}\nfunction sortPathBy(model) {\n    if (model.mark() === mark_1.LINE && model.has(channel_1.PATH)) {\n        var channelDef = model.encoding().path;\n        if (channelDef instanceof Array) {\n            return channelDef.map(common_1.sortField);\n        }\n        else {\n            return common_1.sortField(channelDef);\n        }\n    }\n    else {\n        return '-' + model.field(model.config().mark.orient === 'horizontal' ? channel_1.Y : channel_1.X, { binSuffix: '_mid' });\n    }\n}\nfunction detailFields(model) {\n    return [channel_1.COLOR, channel_1.DETAIL, channel_1.OPACITY, channel_1.SHAPE].reduce(function (details, channel) {\n        if (model.has(channel) && !model.fieldDef(channel).aggregate) {\n            details.push(model.field(channel));\n        }\n        return details;\n    }, []);\n}\nfunction stackTransforms(model, impute) {\n    var stackByFields = getStackByFields(model);\n    if (impute) {\n        return [imputeTransform(model, stackByFields), stackTransform(model, stackByFields)];\n    }\n    return [stackTransform(model, stackByFields)];\n}\nfunction getStackByFields(model) {\n    var encoding = model.encoding();\n    return channel_1.STACK_GROUP_CHANNELS.reduce(function (fields, channel) {\n        var channelEncoding = encoding[channel];\n        if (encoding_1.has(encoding, channel)) {\n            if (util_1.isArray(channelEncoding)) {\n                channelEncoding.forEach(function (fieldDef) {\n                    fields.push(fielddef_1.field(fieldDef));\n                });\n            }\n            else {\n                var fieldDef = channelEncoding;\n                var scale = model.scale(channel);\n                fields.push(fielddef_1.field(fieldDef, {\n                    binSuffix: scale && scale.type === scale_1.ScaleType.ORDINAL ? '_range' : '_start'\n                }));\n            }\n        }\n        return fields;\n    }, []);\n}\nfunction imputeTransform(model, stackFields) {\n    var stack = model.stack();\n    return {\n        type: 'impute',\n        field: model.field(stack.fieldChannel),\n        groupby: stackFields,\n        orderby: [model.field(stack.groupbyChannel, { binSuffix: '_mid' })],\n        method: 'value',\n        value: 0\n    };\n}\nfunction stackTransform(model, stackFields) {\n    var stack = model.stack();\n    var encoding = model.encoding();\n    var sortby = model.has(channel_1.ORDER) ?\n        (util_1.isArray(encoding[channel_1.ORDER]) ? encoding[channel_1.ORDER] : [encoding[channel_1.ORDER]]).map(common_1.sortField) :\n        stackFields.map(function (field) {\n            return '-' + field;\n        });\n    var valName = model.field(stack.fieldChannel);\n    var transform = {\n        type: 'stack',\n        groupby: [model.field(stack.groupbyChannel, { binSuffix: '_mid' })],\n        field: model.field(stack.fieldChannel),\n        sortby: sortby,\n        output: {\n            start: valName + '_start',\n            end: valName + '_end'\n        }\n    };\n    if (stack.offset) {\n        transform.offset = stack.offset;\n    }\n    return transform;\n}\n//# sourceMappingURL=mark.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/mark/mark.js\n// module id = 0ZZw\n// module chunks = 0","\"use strict\";\nvar filter;\n(function (filter_1) {\n    function parse(model) {\n        return model.transform().filter;\n    }\n    filter_1.parseUnit = parse;\n    function parseFacet(model) {\n        var filterComponent = parse(model);\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source && childDataComponent.filter) {\n            filterComponent =\n                (filterComponent ? filterComponent + ' && ' : '') +\n                    childDataComponent.filter;\n            delete childDataComponent.filter;\n        }\n        return filterComponent;\n    }\n    filter_1.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var filterComponent = parse(model);\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (model.compatibleSource(child) && childDataComponent.filter && childDataComponent.filter === filterComponent) {\n                delete childDataComponent.filter;\n            }\n        });\n        return filterComponent;\n    }\n    filter_1.parseLayer = parseLayer;\n    function assemble(component) {\n        var filter = component.filter;\n        return filter ? [{\n                type: 'filter',\n                test: filter\n            }] : [];\n    }\n    filter_1.assemble = assemble;\n})(filter = exports.filter || (exports.filter = {}));\n//# sourceMappingURL=filter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/filter.js\n// module id = 1PdY\n// module chunks = 0","var parser = require('./parser'),\n    codegen = require('./codegen');\n\nvar expr = module.exports = {\n  parse: function(input, opt) {\n      return parser.parse('('+input+')', opt);\n    },\n  code: function(opt) {\n      return codegen(opt);\n    },\n  compiler: function(args, opt) {\n      args = args.slice();\n      var generator = codegen(opt),\n          len = args.length,\n          compile = function(str) {\n            var value = generator(expr.parse(str));\n            args[len] = '\"use strict\"; return (' + value.code + ');';\n            var fn = Function.apply(null, args);\n            value.fn = (args.length > 8) ?\n              function() { return fn.apply(value, arguments); } :\n              function(a, b, c, d, e, f, g) {\n                return fn.call(value, a, b, c, d, e, f, g);\n              }; // call often faster than apply, use if args low enough\n            return value;\n          };\n      compile.codegen = generator;\n      return compile;\n    },\n  functions: require('./functions'),\n  constants: require('./constants')\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-expression/src/index.js\n// module id = 1ifp\n// module chunks = 0","var util = require('../util');\n\nvar types = {\n  'values': measure({\n    name: 'values',\n    init: 'cell.collect = true;',\n    set:  'cell.data.values()', idx: -1\n  }),\n  'count': measure({\n    name: 'count',\n    set:  'cell.num'\n  }),\n  'missing': measure({\n    name: 'missing',\n    set:  'this.missing'\n  }),\n  'valid': measure({\n    name: 'valid',\n    set:  'this.valid'\n  }),\n  'sum': measure({\n    name: 'sum',\n    init: 'this.sum = 0;',\n    add:  'this.sum += v;',\n    rem:  'this.sum -= v;',\n    set:  'this.sum'\n  }),\n  'mean': measure({\n    name: 'mean',\n    init: 'this.mean = 0;',\n    add:  'var d = v - this.mean; this.mean += d / this.valid;',\n    rem:  'var d = v - this.mean; this.mean -= this.valid ? d / this.valid : this.mean;',\n    set:  'this.mean'\n  }),\n  'average': measure({\n    name: 'average',\n    set:  'this.mean',\n    req:  ['mean'], idx: 1\n  }),\n  'variance': measure({\n    name: 'variance',\n    init: 'this.dev = 0;',\n    add:  'this.dev += d * (v - this.mean);',\n    rem:  'this.dev -= d * (v - this.mean);',\n    set:  'this.valid > 1 ? this.dev / (this.valid-1) : 0',\n    req:  ['mean'], idx: 1\n  }),\n  'variancep': measure({\n    name: 'variancep',\n    set:  'this.valid > 1 ? this.dev / this.valid : 0',\n    req:  ['variance'], idx: 2\n  }),\n  'stdev': measure({\n    name: 'stdev',\n    set:  'this.valid > 1 ? Math.sqrt(this.dev / (this.valid-1)) : 0',\n    req:  ['variance'], idx: 2\n  }),\n  'stdevp': measure({\n    name: 'stdevp',\n    set:  'this.valid > 1 ? Math.sqrt(this.dev / this.valid) : 0',\n    req:  ['variance'], idx: 2\n  }),\n  'stderr': measure({\n    name: 'stderr',\n    set:  'this.valid > 1 ? Math.sqrt(this.dev / (this.valid * (this.valid-1))) : 0',\n    req:  ['variance'], idx: 2\n  }),\n  'median': measure({\n    name: 'median',\n    set:  'cell.data.q2(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q1': measure({\n    name: 'q1',\n    set:  'cell.data.q1(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q3': measure({\n    name: 'q3',\n    set:  'cell.data.q3(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'distinct': measure({\n    name: 'distinct',\n    set:  'this.distinct(cell.data.values(), this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'argmin': measure({\n    name: 'argmin',\n    add:  'if (v < this.min) this.argmin = t;',\n    rem:  'if (v <= this.min) this.argmin = null;',\n    set:  'this.argmin = this.argmin || cell.data.argmin(this.get)',\n    req:  ['min'], str: ['values'], idx: 3\n  }),\n  'argmax': measure({\n    name: 'argmax',\n    add:  'if (v > this.max) this.argmax = t;',\n    rem:  'if (v >= this.max) this.argmax = null;',\n    set:  'this.argmax = this.argmax || cell.data.argmax(this.get)',\n    req:  ['max'], str: ['values'], idx: 3\n  }),\n  'min': measure({\n    name: 'min',\n    init: 'this.min = +Infinity;',\n    add:  'if (v < this.min) this.min = v;',\n    rem:  'if (v <= this.min) this.min = NaN;',\n    set:  'this.min = (isNaN(this.min) ? cell.data.min(this.get) : this.min)',\n    str:  ['values'], idx: 4\n  }),\n  'max': measure({\n    name: 'max',\n    init: 'this.max = -Infinity;',\n    add:  'if (v > this.max) this.max = v;',\n    rem:  'if (v >= this.max) this.max = NaN;',\n    set:  'this.max = (isNaN(this.max) ? cell.data.max(this.get) : this.max)',\n    str:  ['values'], idx: 4\n  }),\n  'modeskew': measure({\n    name: 'modeskew',\n    set:  'this.dev===0 ? 0 : (this.mean - cell.data.q2(this.get)) / Math.sqrt(this.dev/(this.valid-1))',\n    req:  ['mean', 'variance', 'median'], idx: 5\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = util.extend({init:'', add:'', rem:'', idx:0}, base);\n    m.out = out || base.name;\n    return m;\n  };\n}\n\nfunction resolve(agg, stream) {\n  function collect(m, a) {\n    function helper(r) { if (!m[r]) collect(m, m[r] = types[r]()); }\n    if (a.req) a.req.forEach(helper);\n    if (stream && a.str) a.str.forEach(helper);\n    return m;\n  }\n  var map = agg.reduce(\n    collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {})\n  );\n  return util.vals(map).sort(function(a, b) { return a.idx - b.idx; });\n}\n\nfunction create(agg, stream, accessor, mutator) {\n  var all = resolve(agg, stream),\n      ctr = 'this.cell = cell; this.tuple = t; this.valid = 0; this.missing = 0;',\n      add = 'if (v==null) this.missing++; if (!this.isValid(v)) return; ++this.valid;',\n      rem = 'if (v==null) this.missing--; if (!this.isValid(v)) return; --this.valid;',\n      set = 'var t = this.tuple; var cell = this.cell;';\n\n  all.forEach(function(a) {\n    if (a.idx < 0) {\n      ctr = a.init + ctr;\n      add = a.add + add;\n      rem = a.rem + rem;\n    } else {\n      ctr += a.init;\n      add += a.add;\n      rem += a.rem;\n    }\n  });\n  agg.slice()\n    .sort(function(a, b) { return a.idx - b.idx; })\n    .forEach(function(a) {\n      set += 'this.assign(t,\\''+a.out+'\\','+a.set+');';\n    });\n  set += 'return t;';\n\n  /* jshint evil: true */\n  ctr = Function('cell', 't', ctr);\n  ctr.prototype.assign = mutator;\n  ctr.prototype.add = Function('t', 'var v = this.get(t);' + add);\n  ctr.prototype.rem = Function('t', 'var v = this.get(t);' + rem);\n  ctr.prototype.set = Function(set);\n  ctr.prototype.get = accessor;\n  ctr.prototype.distinct = require('../stats').count.distinct;\n  ctr.prototype.isValid = util.isValid;\n  ctr.fields = agg.map(util.$('out'));\n  return ctr;\n}\n\ntypes.create = create;\nmodule.exports = types;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/aggregate/measures.js\n// module id = 2I0S\n// module chunks = 0","module.exports = {\n  path:       require('./path'),\n  render:     require('./render'),\n  Item:       require('./util/Item'),\n  bound:      require('./util/bound'),\n  Bounds:     require('./util/Bounds'),\n  canvas:     require('./util/canvas'),\n  Gradient:   require('./util/Gradient'),\n  toJSON:     require('./util/scene').toJSON,\n  fromJSON:   require('./util/scene').fromJSON\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/index.js\n// module id = 2pdF\n// module chunks = 0","var d3 = require('d3'),\n    Tuple = require('vega-dataflow/src/Tuple'),\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Voronoi(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    clipExtent: {type: 'array<value>', default: require('./screen').extent},\n    x: {type: 'field', default: 'layout_x'},\n    y: {type: 'field', default: 'layout_y'}\n  });\n\n  this._layout = d3.geom.voronoi();\n  this._output = {'path': 'layout_path'};\n\n  return this.mutates(true);\n}\n\nvar prototype = (Voronoi.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Voronoi;\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['voronoi']);\n\n  // get variables\n  var pathname = this._output.path;\n\n  // configure layout\n  var polygons = this._layout\n    .clipExtent(this.param('clipExtent'))\n    .x(this.param('x').accessor)\n    .y(this.param('y').accessor)\n    (data);\n\n  // build and assign path strings\n  for (var i=0; i<data.length; ++i) {\n    if (polygons[i]) Tuple.set(data[i], pathname, 'M' + polygons[i].join('L') + 'Z');\n  }\n\n  // return changeset\n  input.fields[pathname] = 1;\n  return input;\n};\n\nmodule.exports = Voronoi;\n\nVoronoi.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Voronoi transform\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"voronoi\"]},\n    \"clipExtent\": {\n      \"description\": \"The min and max points at which to clip the voronoi diagram.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\n            \"oneOf\": [\n              {\n                \"type\": \"array\",\n                \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n                \"minItems\": 2,\n                \"maxItems\": 2\n              },\n              {\"$ref\": \"#/refs/signal\"}\n            ]\n          },\n          \"minItems\": 2,\n          \"maxItems\": 2\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": [[-1e5,-1e5],[1e5,1e5]]\n    },\n    \"x\": {\n      \"description\": \"The input x coordinates.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"y\": {\n      \"description\": \"The input y coordinates.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"path\": {\"type\": \"string\", \"default\": \"layout_path\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Voronoi.js\n// module id = 3C/O\n// module chunks = 0","function Handler() {\n  this._active = null;\n  this._handlers = {};\n}\n\nvar prototype = Handler.prototype;\n\nprototype.initialize = function(el, pad, obj) {\n  this._el = el;\n  this._obj = obj || null;\n  return this.padding(pad);\n};\n\nprototype.element = function() {\n  return this._el;\n};\n\nprototype.padding = function(pad) {\n  this._padding = pad || {top:0, left:0, bottom:0, right:0};\n  return this;\n};\n\nprototype.scene = function(scene) {\n  if (!arguments.length) return this._scene;\n  this._scene = scene;\n  return this;\n};\n\n// add an event handler\n// subclasses should override\nprototype.on = function(/*type, handler*/) {};\n\n// remove an event handler\n// subclasses should override\nprototype.off = function(/*type, handler*/) {};\n\n// return an array with all registered event handlers\nprototype.handlers = function() {\n  var h = this._handlers, a = [], k;\n  for (k in h) { a.push.apply(a, h[k]); }\n  return a;\n};\n\nprototype.eventName = function(name) {\n  var i = name.indexOf('.');\n  return i < 0 ? name : name.slice(0,i);\n};\n\nmodule.exports = Handler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/render/Handler.js\n// module id = 3Lw3\n// module chunks = 0","var ImageLoader = require('../../util/ImageLoader'),\n    Renderer = require('../Renderer'),\n    text = require('../../util/text'),\n    DOM = require('../../util/dom'),\n    SVG = require('../../util/svg'),\n    ns = SVG.metadata.xmlns,\n    marks = require('./marks');\n\nfunction SVGRenderer(loadConfig) {\n  Renderer.call(this);\n  this._loader = new ImageLoader(loadConfig);\n  this._dirtyID = 0;\n}\n\nvar base = Renderer.prototype;\nvar prototype = (SVGRenderer.prototype = Object.create(base));\nprototype.constructor = SVGRenderer;\n\nprototype.initialize = function(el, width, height, padding) {\n  if (el) {\n    this._svg = DOM.child(el, 0, 'svg', ns, 'marks');\n    DOM.clear(el, 1);\n    // set the svg root group\n    this._root = DOM.child(this._svg, 0, 'g', ns);\n    DOM.clear(this._svg, 1);\n  }\n\n  // create the svg definitions cache\n  this._defs = {\n    clip_id:  1,\n    gradient: {},\n    clipping: {}\n  };\n\n  // set background color if defined\n  this.background(this._bgcolor);\n\n  return base.initialize.call(this, el, width, height, padding);\n};\n\nprototype.background = function(bgcolor) {\n  if (arguments.length && this._svg) {\n    this._svg.style.setProperty('background-color', bgcolor);\n  }\n  return base.background.apply(this, arguments);\n};\n\nprototype.resize = function(width, height, padding) {\n  base.resize.call(this, width, height, padding);\n  \n  if (this._svg) {\n    var w = this._width,\n        h = this._height,\n        p = this._padding;\n  \n    this._svg.setAttribute('width', w + p.left + p.right);\n    this._svg.setAttribute('height', h + p.top + p.bottom);\n    \n    this._root.setAttribute('transform', 'translate('+p.left+','+p.top+')');\n  }\n\n  return this;\n};\n\nprototype.svg = function() {\n  if (!this._svg) return null;\n\n  var attr = {\n    'class':  'marks',\n    'width':  this._width + this._padding.left + this._padding.right,\n    'height': this._height + this._padding.top + this._padding.bottom,\n  };\n  for (var key in SVG.metadata) {\n    attr[key] = SVG.metadata[key];\n  }\n\n  return DOM.openTag('svg', attr) + this._svg.innerHTML + DOM.closeTag('svg');\n};\n\nprototype.imageURL = function(url) {\n  return this._loader.imageURL(url);\n};\n\n\n// -- Render entry point --\n\nprototype.render = function(scene, items) {\n  if (this._dirtyCheck(items)) {\n    if (this._dirtyAll) this._resetDefs();\n    this.draw(this._root, scene, -1);\n    DOM.clear(this._root, 1);\n  }\n  this.updateDefs();\n  return this;\n};\n\nprototype.draw = function(el, scene, index) {\n  this.drawMark(el, scene, index, marks[scene.marktype]);\n};\n\n\n// -- Manage SVG definitions ('defs') block --\n\nprototype.updateDefs = function() {\n  var svg = this._svg,\n      defs = this._defs,\n      el = defs.el,\n      index = 0, id;\n\n  for (id in defs.gradient) {\n    if (!el) el = (defs.el = DOM.child(svg, 0, 'defs', ns));\n    updateGradient(el, defs.gradient[id], index++);\n  }\n\n  for (id in defs.clipping) {\n    if (!el) el = (defs.el = DOM.child(svg, 0, 'defs', ns));\n    updateClipping(el, defs.clipping[id], index++);\n  }\n\n  // clean-up\n  if (el) {\n    if (index === 0) {\n      svg.removeChild(el);\n      defs.el = null;\n    } else {\n      DOM.clear(el, index);      \n    }\n  }\n};\n\nfunction updateGradient(el, grad, index) {\n  var i, n, stop;\n\n  el = DOM.child(el, index, 'linearGradient', ns);\n  el.setAttribute('id', grad.id);\n  el.setAttribute('x1', grad.x1);\n  el.setAttribute('x2', grad.x2);\n  el.setAttribute('y1', grad.y1);\n  el.setAttribute('y2', grad.y2);\n  \n  for (i=0, n=grad.stops.length; i<n; ++i) {\n    stop = DOM.child(el, i, 'stop', ns);\n    stop.setAttribute('offset', grad.stops[i].offset);\n    stop.setAttribute('stop-color', grad.stops[i].color);\n  }\n  DOM.clear(el, i);\n}\n\nfunction updateClipping(el, clip, index) {\n  var rect;\n\n  el = DOM.child(el, index, 'clipPath', ns);\n  el.setAttribute('id', clip.id);\n  rect = DOM.child(el, 0, 'rect', ns);\n  rect.setAttribute('x', 0);\n  rect.setAttribute('y', 0);\n  rect.setAttribute('width', clip.width);\n  rect.setAttribute('height', clip.height);\n}\n\nprototype._resetDefs = function() {\n  var def = this._defs;\n  def.clip_id = 1;\n  def.gradient = {};\n  def.clipping = {};\n};\n\n\n// -- Manage rendering of items marked as dirty --\n\nprototype.isDirty = function(item) {\n  return this._dirtyAll || item.dirty === this._dirtyID;\n};\n\nprototype._dirtyCheck = function(items) {\n  this._dirtyAll = true;\n  if (!items) return true;\n\n  var id = ++this._dirtyID,\n      item, mark, type, mdef, i, n, o;\n\n  for (i=0, n=items.length; i<n; ++i) {\n    item = items[i];\n    mark = item.mark;\n    if (mark.marktype !== type) {\n      // memoize mark instance lookup\n      type = mark.marktype;\n      mdef = marks[type];\n    }\n\n    if (item.status === 'exit') { // EXIT\n      if (item._svg) {\n        if (mdef.nest && item.mark.items.length) {\n          // if nested mark with remaining points, update instead\n          this._update(mdef, item._svg, item.mark.items[0]);\n          o = item.mark.items[0];\n          o._svg = item._svg;\n          o._update = id;\n        } else {\n          // otherwise remove from DOM\n          DOM.remove(item._svg);\n        }\n        item._svg = null;\n      }\n      continue;\n    }\n\n    item = (mdef.nest ? mark.items[0] : item);\n    if (item._update === id) { // Already processed\n      continue;\n    } else if (item._svg) { // UPDATE\n      this._update(mdef, item._svg, item);\n    } else { // ENTER\n      this._dirtyAll = false;\n      dirtyParents(item, id);\n    }\n    item._update = id;\n  }\n  return !this._dirtyAll;\n};\n\nfunction dirtyParents(item, id) {\n  for (; item && item.dirty !== id; item=item.mark.group) {\n    item.dirty = id;\n    if (item.mark && item.mark.dirty !== id) {\n      item.mark.dirty = id;\n    } else return;\n  }\n}\n\n\n// -- Construct & maintain scenegraph to SVG mapping ---\n\n// Draw a mark container.\nprototype.drawMark = function(el, scene, index, mdef) {\n  if (!this.isDirty(scene)) return;\n\n  var items = mdef.nest ?\n        (scene.items && scene.items.length ? [scene.items[0]] : []) :\n        scene.items || [],\n      events = scene.interactive === false ? 'none' : null,\n      isGroup = (mdef.tag === 'g'),\n      className = DOM.cssClass(scene),\n      p, i, n, c, d, insert;\n\n  p = DOM.child(el, index+1, 'g', ns, className);\n  p.setAttribute('class', className);\n  scene._svg = p;\n  if (!isGroup && events) {\n    p.style.setProperty('pointer-events', events);\n  }\n\n  for (i=0, n=items.length; i<n; ++i) {\n    if (this.isDirty(d = items[i])) {\n      insert = !(this._dirtyAll || d._svg);\n      c = bind(p, mdef, d, i, insert);\n      this._update(mdef, c, d);\n      if (isGroup) {\n        if (insert) this._dirtyAll = true;\n        this._recurse(c, d);\n        if (insert) this._dirtyAll = false;\n      }\n    }\n  }\n  DOM.clear(p, i);\n  return p;\n};\n\n// Recursively process group contents.\nprototype._recurse = function(el, group) {\n  var items = group.items || [],\n      legends = group.legendItems || [],\n      axes = group.axisItems || [],\n      idx = 0, j, m;\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].layer === 'back') {\n      this.drawMark(el, axes[j], idx++, marks.group);\n    }\n  }\n  for (j=0, m=items.length; j<m; ++j) {\n    this.draw(el, items[j], idx++);\n  }\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].layer !== 'back') {\n      this.drawMark(el, axes[j], idx++, marks.group);\n    }\n  }\n  for (j=0, m=legends.length; j<m; ++j) {\n    this.drawMark(el, legends[j], idx++, marks.group);\n  }\n\n  // remove any extraneous DOM elements\n  DOM.clear(el, 1 + idx);\n};\n\n// Bind a scenegraph item to an SVG DOM element.\n// Create new SVG elements as needed.\nfunction bind(el, mdef, item, index, insert) {\n  // create svg element, bind item data for D3 compatibility\n  var node = DOM.child(el, index, mdef.tag, ns, null, insert);\n  node.__data__ = item;\n  node.__values__ = {fill: 'default'};\n\n  // create background rect\n  if (mdef.tag === 'g') {\n    var bg = DOM.child(node, 0, 'rect', ns, 'background');\n    bg.__data__ = item;\n  }\n\n  // add pointer from scenegraph item to svg element\n  return (item._svg = node);\n}\n\n\n// -- Set attributes & styles on SVG elements ---\n\nvar element = null, // temp var for current SVG element\n    values = null;  // temp var for current values hash\n\n// Extra configuration for certain mark types\nvar mark_extras = {\n  group: function(mdef, el, item) {\n    element = el.childNodes[0];\n    values = el.__values__; // use parent's values hash\n    mdef.background(emit, item, this);\n\n    var value = item.mark.interactive === false ? 'none' : null;\n    if (value !== values.events) {\n      element.style.setProperty('pointer-events', value);\n      values.events = value;\n    }\n  },\n  text: function(mdef, el, item) {\n    var str = text.value(item.text);\n    if (str !== values.text) {\n      el.textContent = str;\n      values.text = str;\n    }\n    str = text.font(item);\n    if (str !== values.font) {\n      el.style.setProperty('font', str);\n      values.font = str;\n    }\n  }\n};\n\nprototype._update = function(mdef, el, item) {\n  // set dom element and values cache\n  // provides access to emit method\n  element = el;\n  values = el.__values__;\n\n  // apply svg attributes\n  mdef.attr(emit, item, this);\n\n  // some marks need special treatment\n  var extra = mark_extras[mdef.type];\n  if (extra) extra(mdef, el, item);\n\n  // apply svg css styles\n  // note: element may be modified by 'extra' method\n  this.style(element, item);\n};\n\nfunction emit(name, value, ns) {\n  // early exit if value is unchanged\n  if (value === values[name]) return;\n\n  if (value != null) {\n    // if value is provided, update DOM attribute\n    if (ns) {\n      element.setAttributeNS(ns, name, value);\n    } else {\n      element.setAttribute(name, value);\n    }\n  } else {\n    // else remove DOM attribute\n    if (ns) {\n      element.removeAttributeNS(ns, name);\n    } else {\n      element.removeAttribute(name);\n    }\n  }\n\n  // note current value for future comparison\n  values[name] = value;\n}\n\nprototype.style = function(el, o) {\n  if (o == null) return;\n  var i, n, prop, name, value;\n\n  for (i=0, n=SVG.styleProperties.length; i<n; ++i) {\n    prop = SVG.styleProperties[i];\n    value = o[prop];\n    if (value === values[prop]) continue;\n\n    name = SVG.styles[prop];\n    if (value == null) {\n      if (name === 'fill') {\n        el.style.setProperty(name, 'none');\n      } else {\n        el.style.removeProperty(name);\n      }\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        this._defs.gradient[value.id] = value;\n        value = 'url(' + href() + '#' + value.id + ')';\n      }\n      el.style.setProperty(name, value+'');\n    }\n\n    values[prop] = value;\n  }\n};\n\nfunction href() {\n  return typeof window !== 'undefined' ? window.location.href : '';\n}\n\nmodule.exports = SVGRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/render/svg/SVGRenderer.js\n// module id = 3OjF\n// module chunks = 0","var dl = require('datalib'),\n    df = require('vega-dataflow'),\n    log = require('vega-logging'),\n    ChangeSet = df.ChangeSet,\n    Tuple = df.Tuple,\n    Deps = df.Dependencies,\n    Transform = require('./Transform'),\n    Facetor = require('./Facetor');\n\nfunction Aggregate(graph) {\n  Transform.prototype.init.call(this, graph);\n\n  Transform.addParameters(this, {\n    groupby: {type: 'array<field>'},\n    summarize: {\n      type: 'custom',\n      set: function(summarize) {\n        var signalDeps = {},\n            tx = this._transform,\n            i, len, f, fields, name, ops;\n\n        if (!dl.isArray(fields = summarize)) { // Object syntax from dl\n          fields = [];\n          for (name in summarize) {\n            ops = dl.array(summarize[name]);\n            fields.push({field: name, ops: ops});\n          }\n        }\n\n        function sg(x) { if (x.signal) signalDeps[x.signal] = 1; }\n\n        for (i=0, len=fields.length; i<len; ++i) {\n          f = fields[i];\n          if (f.field.signal) { signalDeps[f.field.signal] = 1; }\n          dl.array(f.ops).forEach(sg);\n          dl.array(f.as).forEach(sg);\n        }\n\n        tx._fields = fields;\n        tx._aggr = null;\n        tx.dependency(Deps.SIGNALS, dl.keys(signalDeps));\n        return tx;\n      }\n    }\n  });\n\n  this._aggr  = null; // dl.Aggregator\n  this._input = null; // Used by Facetor._on_keep.\n  this._args  = null; // To cull re-computation.\n  this._fields = [];\n  this._out = [];\n\n  this._type = TYPES.TUPLE;\n  this._acc = {groupby: dl.true, value: dl.true};\n\n  return this.router(true).produces(true);\n}\n\nvar prototype = (Aggregate.prototype = Object.create(Transform.prototype));\nprototype.constructor = Aggregate;\n\nvar TYPES = Aggregate.TYPES = {\n  VALUE: 1,\n  TUPLE: 2,\n  MULTI: 3\n};\n\nAggregate.VALID_OPS = [\n  'values', 'count', 'valid', 'missing', 'distinct',\n  'sum', 'mean', 'average', 'variance', 'variancep', 'stdev',\n  'stdevp', 'median', 'q1', 'q3', 'modeskew', 'min', 'max',\n  'argmin', 'argmax'\n];\n\nprototype.type = function(type) {\n  return (this._type = type, this);\n};\n\nprototype.accessors = function(groupby, value) {\n  var acc = this._acc;\n  acc.groupby = dl.$(groupby) || dl.true;\n  acc.value = dl.$(value) || dl.true;\n};\n\nprototype.aggr = function() {\n  if (this._aggr) return this._aggr;\n\n  var g = this._graph,\n      hasGetter = false,\n      args = [],\n      groupby = this.param('groupby').field,\n      value = function(x) { return x.signal ? g.signalRef(x.signal) : x; };\n\n  // Prepare summarize fields.\n  var fields = this._fields.map(function(f) {\n    var field = {\n      name: value(f.field),\n      as:   dl.array(f.as),\n      ops:  dl.array(value(f.ops)).map(value),\n      get:  f.get\n    };\n    hasGetter = hasGetter || field.get != null;\n    args.push(field.name);\n    return field;\n  });\n\n  // If there is an arbitrary getter, all bets are off.\n  // Otherwise, we can check argument fields to cull re-computation.\n  groupby.forEach(function(g) {\n    if (g.get) hasGetter = true;\n    args.push(g.name || g);\n  });\n  this._args = hasGetter || !fields.length ? null : args;\n\n  if (!fields.length) fields = {'*': 'values'};\n\n  // Instantiate our aggregator instance.\n  // Facetor is a special subclass that can facet into data pipelines.\n  var aggr = this._aggr = new Facetor()\n    .groupby(groupby)\n    .stream(true)\n    .summarize(fields);\n\n  // Collect output fields sets by this aggregate.\n  this._out = getFields(aggr);\n\n  // If we are processing tuples, key them by '_id'.\n  if (this._type !== TYPES.VALUE) { aggr.key('_id'); }\n\n  return aggr;\n};\n\nfunction getFields(aggr) {\n  // Collect the output fields set by this aggregate.\n  var f = [], i, n, j, m, dims, vals, meas;\n\n  dims = aggr._dims;\n  for (i=0, n=dims.length; i<n; ++i) {\n    f.push(dims[i].name);\n  }\n\n  vals = aggr._aggr;\n  for (i=0, n=vals.length; i<n; ++i) {\n    meas = vals[i].measures.fields;\n    for (j=0, m=meas.length; j<m; ++j) {\n      f.push(meas[j]);\n    }\n  }\n\n  return f;\n}\n\nprototype.transform = function(input, reset) {\n  log.debug(input, ['aggregate']);\n\n  var output = ChangeSet.create(input),\n      aggr = this.aggr(),\n      out = this._out,\n      args = this._args,\n      reeval = true,\n      p = Tuple.prev,\n      add, rem, mod, mark, i;\n\n  // Upon reset, retract prior tuples and re-initialize.\n  if (reset) {\n    output.rem.push.apply(output.rem, aggr.result());\n    aggr.clear();\n    this._aggr = null;\n    aggr = this.aggr();\n  }\n\n  // Get update methods according to input type.\n  if (this._type === TYPES.TUPLE) {\n    add  = function(x) { aggr._add(x); Tuple.prev_init(x); };\n    rem  = function(x) { aggr._rem(p(x)); };\n    mod  = function(x) { aggr._mod(x, p(x)); };\n    mark = function(x) { aggr._markMod(x, p(x)); };\n  } else {\n    var gby = this._acc.groupby,\n        val = this._acc.value,\n        get = this._type === TYPES.VALUE ? val : function(x) {\n          return { _id: x._id, groupby: gby(x), value: val(x) };\n        };\n    add  = function(x) { aggr._add(get(x)); Tuple.prev_init(x); };\n    rem  = function(x) { aggr._rem(get(p(x))); };\n    mod  = function(x) { aggr._mod(get(x), get(p(x))); };\n    mark = function(x) { aggr._mark(get(x), get(p(x))); };\n  }\n\n  input.add.forEach(add);\n  if (reset) {\n    // A signal change triggered reflow. Add everything.\n    // No need for rem, we cleared the aggregator.\n    input.mod.forEach(add);\n  } else {\n    input.rem.forEach(rem);\n\n    // If possible, check argument fields to see if we need to re-process mods.\n    if (args) for (i=0, reeval=false; i<args.length; ++i) {\n      if (input.fields[args[i]]) { reeval = true; break; }\n    }\n    input.mod.forEach(reeval ? mod : mark);\n  }\n\n  // Indicate output fields and return aggregate tuples.\n  for (i=0; i<out.length; ++i) {\n    output.fields[out[i]] = 1;\n  }\n  return (aggr._input = input, aggr.changes(output));\n};\n\nmodule.exports = Aggregate;\n\nvar VALID_OPS = Aggregate.VALID_OPS;\n\nAggregate.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Aggregate transform\",\n  \"description\": \"Compute summary aggregate statistics\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"aggregate\"]},\n    \"groupby\": {\n      \"type\": \"array\",\n      \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]},\n      \"description\": \"A list of fields to split the data into groups.\"\n    },\n    \"summarize\": {\n      \"oneOf\": [\n        {\n          \"type\": \"object\",\n          \"additionalProperties\": {\n            \"type\": \"array\",\n            \"description\": \"An array of aggregate functions.\",\n            \"items\": {\"oneOf\": [{\"enum\": VALID_OPS}, {\"$ref\": \"#/refs/signal\"}]}\n          }\n        },\n        {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"field\": {\n                \"description\": \"The name of the field to aggregate.\",\n                \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n              },\n              \"ops\": {\n                \"type\": \"array\",\n                \"description\": \"An array of aggregate functions.\",\n                \"items\": {\"oneOf\": [{\"enum\": VALID_OPS}, {\"$ref\": \"#/refs/signal\"}]}\n              },\n              \"as\": {\n                \"type\": \"array\",\n                \"description\": \"An optional array of names to use for the output fields.\",\n                \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n              }\n            },\n            \"additionalProperties\": false,\n            \"required\": [\"field\", \"ops\"]\n          }\n        }\n      ]\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Aggregate.js\n// module id = 3Y21\n// module chunks = 0","var util = require('./util'),\n    time = require('./time'),\n    utc = time.utc;\n\nvar u = module.exports;\n\nu.$year   = util.$func('year', time.year.unit);\nu.$month  = util.$func('month', time.months.unit);\nu.$date   = util.$func('date', time.dates.unit);\nu.$day    = util.$func('day', time.weekdays.unit);\nu.$hour   = util.$func('hour', time.hours.unit);\nu.$minute = util.$func('minute', time.minutes.unit);\nu.$second = util.$func('second', time.seconds.unit);\n\nu.$utcYear   = util.$func('utcYear', utc.year.unit);\nu.$utcMonth  = util.$func('utcMonth', utc.months.unit);\nu.$utcDate   = util.$func('utcDate', utc.dates.unit);\nu.$utcDay    = util.$func('utcDay', utc.weekdays.unit);\nu.$utcHour   = util.$func('utcHour', utc.hours.unit);\nu.$utcMinute = util.$func('utcMinute', utc.minutes.unit);\nu.$utcSecond = util.$func('utcSecond', utc.seconds.unit);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/accessor.js\n// module id = 3bKu\n// module chunks = 0","var util = require('./util'),\n    parse = require('../../../path/parse'),\n    render = require('../../../path/render');\n\nfunction path(g, o) {\n  if (o.path == null) return true;\n  var p = o.pathCache || (o.pathCache = parse(o.path));\n  render(g, p, o.x, o.y);\n}\n\nmodule.exports = {\n  draw: util.drawAll(path),\n  pick: util.pickPath(path)\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/render/canvas/marks/path.js\n// module id = 3lgv\n// module chunks = 0","var df = require('vega-dataflow'),\n    Base = df.Node.prototype, // jshint ignore:line\n    Deps = df.Dependencies,\n    Parameter = require('./Parameter');\n\nfunction Transform(graph) {\n  if (graph) Base.init.call(this, graph);\n}\n\nTransform.addParameters = function(proto, params) {\n  proto._parameters = proto._parameters || {};\n  for (var name in params) {\n    var p = params[name],\n        param = new Parameter(name, p.type, proto);\n\n    proto._parameters[name] = param;\n\n    if (p.type === 'custom') {\n      if (p.set) param.set = p.set.bind(param);\n      if (p.get) param.get = p.get.bind(param);\n    }\n\n    if (p.hasOwnProperty('default')) param.set(p.default);\n  }\n};\n\nvar prototype = (Transform.prototype = Object.create(Base));\nprototype.constructor = Transform;\n\nprototype.param = function(name, value) {\n  var param = this._parameters[name];\n  return (param === undefined) ? this :\n    (arguments.length === 1) ? param.get() : param.set(value);\n};\n\n// Perform transformation. Subclasses should override.\nprototype.transform = function(input/*, reset */) {\n  return input;\n};\n\nprototype.evaluate = function(input) {\n  // Many transforms store caches that must be invalidated if\n  // a signal value has changed.\n  var reset = this._stamp < input.stamp &&\n    this.dependency(Deps.SIGNALS).reduce(function(c, s) {\n      return c += input.signals[s] ? 1 : 0;\n    }, 0);\n  return this.transform(input, reset);\n};\n\nprototype.output = function(map) {\n  for (var key in this._output) {\n    if (map[key] !== undefined) {\n      this._output[key] = map[key];\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transform;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Transform.js\n// module id = 4JPs\n// module chunks = 0","// open editor url in a new window, and pass a message\nmodule.exports = function(window, url, data) {\n  var editor = window.open(url),\n      wait = 10000,\n      step = 250,\n      count = ~~(wait/step);\n\n  function listen(evt) {\n    if (evt.source === editor) {\n      count = 0;\n      window.removeEventListener('message', listen, false);\n    }\n  }\n  window.addEventListener('message', listen, false);\n\n  // send message\n  // periodically resend until ack received or timeout\n  function send() {\n    if (count <= 0) return;\n    editor.postMessage(data, '*');\n    setTimeout(send, step);\n    count -= 1;\n  }\n  setTimeout(send, step);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@jupyterlab/vega2-extension/~/vega-embed/src/post.js\n// module id = 4Wr6\n// module chunks = 0","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-time')) :\n  typeof define === 'function' && define.amd ? define('d3-time-format', ['exports', 'd3-time'], factory) :\n  factory((global.d3_time_format = {}),global.d3_time);\n}(this, function (exports,d3Time) { 'use strict';\n\n  function localDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n      date.setFullYear(d.y);\n      return date;\n    }\n    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n  }\n\n  function utcDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n      date.setUTCFullYear(d.y);\n      return date;\n    }\n    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n  }\n\n  function newYear(y) {\n    return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n  }\n\n  function locale$1(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_weekdays = locale.days,\n        locale_shortWeekdays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    var periodRe = formatRe(locale_periods),\n        periodLookup = formatLookup(locale_periods),\n        weekdayRe = formatRe(locale_weekdays),\n        weekdayLookup = formatLookup(locale_weekdays),\n        shortWeekdayRe = formatRe(locale_shortWeekdays),\n        shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n        monthRe = formatRe(locale_months),\n        monthLookup = formatLookup(locale_months),\n        shortMonthRe = formatRe(locale_shortMonths),\n        shortMonthLookup = formatLookup(locale_shortMonths);\n\n    var formats = {\n      \"a\": formatShortWeekday,\n      \"A\": formatWeekday,\n      \"b\": formatShortMonth,\n      \"B\": formatMonth,\n      \"c\": null,\n      \"d\": formatDayOfMonth,\n      \"e\": formatDayOfMonth,\n      \"H\": formatHour24,\n      \"I\": formatHour12,\n      \"j\": formatDayOfYear,\n      \"L\": formatMilliseconds,\n      \"m\": formatMonthNumber,\n      \"M\": formatMinutes,\n      \"p\": formatPeriod,\n      \"S\": formatSeconds,\n      \"U\": formatWeekNumberSunday,\n      \"w\": formatWeekdayNumber,\n      \"W\": formatWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatYear,\n      \"Y\": formatFullYear,\n      \"Z\": formatZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var utcFormats = {\n      \"a\": formatUTCShortWeekday,\n      \"A\": formatUTCWeekday,\n      \"b\": formatUTCShortMonth,\n      \"B\": formatUTCMonth,\n      \"c\": null,\n      \"d\": formatUTCDayOfMonth,\n      \"e\": formatUTCDayOfMonth,\n      \"H\": formatUTCHour24,\n      \"I\": formatUTCHour12,\n      \"j\": formatUTCDayOfYear,\n      \"L\": formatUTCMilliseconds,\n      \"m\": formatUTCMonthNumber,\n      \"M\": formatUTCMinutes,\n      \"p\": formatUTCPeriod,\n      \"S\": formatUTCSeconds,\n      \"U\": formatUTCWeekNumberSunday,\n      \"w\": formatUTCWeekdayNumber,\n      \"W\": formatUTCWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatUTCYear,\n      \"Y\": formatUTCFullYear,\n      \"Z\": formatUTCZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var parses = {\n      \"a\": parseShortWeekday,\n      \"A\": parseWeekday,\n      \"b\": parseShortMonth,\n      \"B\": parseMonth,\n      \"c\": parseLocaleDateTime,\n      \"d\": parseDayOfMonth,\n      \"e\": parseDayOfMonth,\n      \"H\": parseHour24,\n      \"I\": parseHour24,\n      \"j\": parseDayOfYear,\n      \"L\": parseMilliseconds,\n      \"m\": parseMonthNumber,\n      \"M\": parseMinutes,\n      \"p\": parsePeriod,\n      \"S\": parseSeconds,\n      \"U\": parseWeekNumberSunday,\n      \"w\": parseWeekdayNumber,\n      \"W\": parseWeekNumberMonday,\n      \"x\": parseLocaleDate,\n      \"X\": parseLocaleTime,\n      \"y\": parseYear,\n      \"Y\": parseFullYear,\n      \"Z\": parseZone,\n      \"%\": parseLiteralPercent\n    };\n\n    // These recursive directive definitions must be deferred.\n    formats.x = newFormat(locale_date, formats);\n    formats.X = newFormat(locale_time, formats);\n    formats.c = newFormat(locale_dateTime, formats);\n    utcFormats.x = newFormat(locale_date, utcFormats);\n    utcFormats.X = newFormat(locale_time, utcFormats);\n    utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n    function newFormat(specifier, formats) {\n      return function(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            n = specifier.length,\n            c,\n            pad,\n            format;\n\n        if (!(date instanceof Date)) date = new Date(+date);\n\n        while (++i < n) {\n          if (specifier.charCodeAt(i) === 37) {\n            string.push(specifier.slice(j, i));\n            if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n            else pad = c === \"e\" ? \" \" : \"0\";\n            if (format = formats[c]) c = format(date, pad);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(specifier.slice(j, i));\n        return string.join(\"\");\n      };\n    }\n\n    function newParse(specifier, newDate) {\n      return function(string) {\n        var d = newYear(1900),\n            i = parseSpecifier(d, specifier, string += \"\", 0);\n        if (i != string.length) return null;\n\n        // The am-pm flag is 0 for AM, and 1 for PM.\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n        // Convert day-of-week and week-of-year to day-of-year.\n        if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          var day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n          d.m = 0;\n          d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n        }\n\n        // If a time zone is specified, all fields are interpreted as UTC and then\n        // offset according to the specified time zone.\n        if (\"Z\" in d) {\n          d.H += d.Z / 100 | 0;\n          d.M += d.Z % 100;\n          return utcDate(d);\n        }\n\n        // Otherwise, all fields are in local time.\n        return newDate(d);\n      };\n    }\n\n    function parseSpecifier(d, specifier, string, j) {\n      var i = 0,\n          n = specifier.length,\n          m = string.length,\n          c,\n          parse;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = specifier.charCodeAt(i++);\n        if (c === 37) {\n          c = specifier.charAt(i++);\n          parse = parses[c in pads ? specifier.charAt(i++) : c];\n          if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    function parsePeriod(d, string, i) {\n      var n = periodRe.exec(string.slice(i));\n      return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortWeekday(d, string, i) {\n      var n = shortWeekdayRe.exec(string.slice(i));\n      return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseWeekday(d, string, i) {\n      var n = weekdayRe.exec(string.slice(i));\n      return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortMonth(d, string, i) {\n      var n = shortMonthRe.exec(string.slice(i));\n      return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseMonth(d, string, i) {\n      var n = monthRe.exec(string.slice(i));\n      return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseLocaleDateTime(d, string, i) {\n      return parseSpecifier(d, locale_dateTime, string, i);\n    }\n\n    function parseLocaleDate(d, string, i) {\n      return parseSpecifier(d, locale_date, string, i);\n    }\n\n    function parseLocaleTime(d, string, i) {\n      return parseSpecifier(d, locale_time, string, i);\n    }\n\n    function formatShortWeekday(d) {\n      return locale_shortWeekdays[d.getDay()];\n    }\n\n    function formatWeekday(d) {\n      return locale_weekdays[d.getDay()];\n    }\n\n    function formatShortMonth(d) {\n      return locale_shortMonths[d.getMonth()];\n    }\n\n    function formatMonth(d) {\n      return locale_months[d.getMonth()];\n    }\n\n    function formatPeriod(d) {\n      return locale_periods[+(d.getHours() >= 12)];\n    }\n\n    function formatUTCShortWeekday(d) {\n      return locale_shortWeekdays[d.getUTCDay()];\n    }\n\n    function formatUTCWeekday(d) {\n      return locale_weekdays[d.getUTCDay()];\n    }\n\n    function formatUTCShortMonth(d) {\n      return locale_shortMonths[d.getUTCMonth()];\n    }\n\n    function formatUTCMonth(d) {\n      return locale_months[d.getUTCMonth()];\n    }\n\n    function formatUTCPeriod(d) {\n      return locale_periods[+(d.getUTCHours() >= 12)];\n    }\n\n    return {\n      format: function(specifier) {\n        var f = newFormat(specifier += \"\", formats);\n        f.parse = newParse(specifier, localDate);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      utcFormat: function(specifier) {\n        var f = newFormat(specifier += \"\", utcFormats);\n        f.parse = newParse(specifier, utcDate);\n        f.toString = function() { return specifier; };\n        return f;\n      }\n    };\n  };\n\n  var pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n  var numberRe = /^\\s*\\d+/;\n  var percentRe = /^%/;\n  var requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  function pad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function requote(s) {\n    return s.replace(requoteRe, \"\\\\$&\");\n  }\n\n  function formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function formatLookup(names) {\n    var map = {}, i = -1, n = names.length;\n    while (++i < n) map[names[i].toLowerCase()] = i;\n    return map;\n  }\n\n  function parseWeekdayNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 1));\n    return n ? (d.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberSunday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberMonday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseFullYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 4));\n    return n ? (d.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n  }\n\n  function parseZone(d, string, i) {\n    var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n    return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n  }\n\n  function parseMonthNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function parseDayOfMonth(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseDayOfYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseHour24(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMinutes(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseSeconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMilliseconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseLiteralPercent(d, string, i) {\n    var n = percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function formatDayOfMonth(d, p) {\n    return pad(d.getDate(), p, 2);\n  }\n\n  function formatHour24(d, p) {\n    return pad(d.getHours(), p, 2);\n  }\n\n  function formatHour12(d, p) {\n    return pad(d.getHours() % 12 || 12, p, 2);\n  }\n\n  function formatDayOfYear(d, p) {\n    return pad(1 + d3Time.day.count(d3Time.year(d), d), p, 3);\n  }\n\n  function formatMilliseconds(d, p) {\n    return pad(d.getMilliseconds(), p, 3);\n  }\n\n  function formatMonthNumber(d, p) {\n    return pad(d.getMonth() + 1, p, 2);\n  }\n\n  function formatMinutes(d, p) {\n    return pad(d.getMinutes(), p, 2);\n  }\n\n  function formatSeconds(d, p) {\n    return pad(d.getSeconds(), p, 2);\n  }\n\n  function formatWeekNumberSunday(d, p) {\n    return pad(d3Time.sunday.count(d3Time.year(d), d), p, 2);\n  }\n\n  function formatWeekdayNumber(d) {\n    return d.getDay();\n  }\n\n  function formatWeekNumberMonday(d, p) {\n    return pad(d3Time.monday.count(d3Time.year(d), d), p, 2);\n  }\n\n  function formatYear(d, p) {\n    return pad(d.getFullYear() % 100, p, 2);\n  }\n\n  function formatFullYear(d, p) {\n    return pad(d.getFullYear() % 10000, p, 4);\n  }\n\n  function formatZone(d) {\n    var z = d.getTimezoneOffset();\n    return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n        + pad(z / 60 | 0, \"0\", 2)\n        + pad(z % 60, \"0\", 2);\n  }\n\n  function formatUTCDayOfMonth(d, p) {\n    return pad(d.getUTCDate(), p, 2);\n  }\n\n  function formatUTCHour24(d, p) {\n    return pad(d.getUTCHours(), p, 2);\n  }\n\n  function formatUTCHour12(d, p) {\n    return pad(d.getUTCHours() % 12 || 12, p, 2);\n  }\n\n  function formatUTCDayOfYear(d, p) {\n    return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n  }\n\n  function formatUTCMilliseconds(d, p) {\n    return pad(d.getUTCMilliseconds(), p, 3);\n  }\n\n  function formatUTCMonthNumber(d, p) {\n    return pad(d.getUTCMonth() + 1, p, 2);\n  }\n\n  function formatUTCMinutes(d, p) {\n    return pad(d.getUTCMinutes(), p, 2);\n  }\n\n  function formatUTCSeconds(d, p) {\n    return pad(d.getUTCSeconds(), p, 2);\n  }\n\n  function formatUTCWeekNumberSunday(d, p) {\n    return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n  }\n\n  function formatUTCWeekdayNumber(d) {\n    return d.getUTCDay();\n  }\n\n  function formatUTCWeekNumberMonday(d, p) {\n    return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n  }\n\n  function formatUTCYear(d, p) {\n    return pad(d.getUTCFullYear() % 100, p, 2);\n  }\n\n  function formatUTCFullYear(d, p) {\n    return pad(d.getUTCFullYear() % 10000, p, 4);\n  }\n\n  function formatUTCZone() {\n    return \"+0000\";\n  }\n\n  function formatLiteralPercent() {\n    return \"%\";\n  }\n\n  var locale = locale$1({\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n\n  var caES = locale$1({\n    dateTime: \"%A, %e de %B de %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"diumenge\", \"dilluns\", \"dimarts\", \"dimecres\", \"dijous\", \"divendres\", \"dissabte\"],\n    shortDays: [\"dg.\", \"dl.\", \"dt.\", \"dc.\", \"dj.\", \"dv.\", \"ds.\"],\n    months: [\"gener\", \"febrer\", \"març\", \"abril\", \"maig\", \"juny\", \"juliol\", \"agost\", \"setembre\", \"octubre\", \"novembre\", \"desembre\"],\n    shortMonths: [\"gen.\", \"febr.\", \"març\", \"abr.\", \"maig\", \"juny\", \"jul.\", \"ag.\", \"set.\", \"oct.\", \"nov.\", \"des.\"]\n  });\n\n  var deCH = locale$1({\n    dateTime: \"%A, der %e. %B %Y, %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"],\n    shortDays: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\n    months: [\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mrz\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dez\"]\n  });\n\n  var deDE = locale$1({\n    dateTime: \"%A, der %e. %B %Y, %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"],\n    shortDays: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\n    months: [\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mrz\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dez\"]\n  });\n\n  var enCA = locale$1({\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%Y-%m-%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n\n  var enGB = locale$1({\n    dateTime: \"%a %e %b %X %Y\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n\n  var esES = locale$1({\n    dateTime: \"%A, %e de %B de %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"domingo\", \"lunes\", \"martes\", \"miércoles\", \"jueves\", \"viernes\", \"sábado\"],\n    shortDays: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    months: [\"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"],\n    shortMonths: [\"ene\", \"feb\", \"mar\", \"abr\", \"may\", \"jun\", \"jul\", \"ago\", \"sep\", \"oct\", \"nov\", \"dic\"]\n  });\n\n  var fiFI = locale$1({\n    dateTime: \"%A, %-d. %Bta %Y klo %X\",\n    date: \"%-d.%-m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"a.m.\", \"p.m.\"],\n    days: [\"sunnuntai\", \"maanantai\", \"tiistai\", \"keskiviikko\", \"torstai\", \"perjantai\", \"lauantai\"],\n    shortDays: [\"Su\", \"Ma\", \"Ti\", \"Ke\", \"To\", \"Pe\", \"La\"],\n    months: [\"tammikuu\", \"helmikuu\", \"maaliskuu\", \"huhtikuu\", \"toukokuu\", \"kesäkuu\", \"heinäkuu\", \"elokuu\", \"syyskuu\", \"lokakuu\", \"marraskuu\", \"joulukuu\"],\n    shortMonths: [\"Tammi\", \"Helmi\", \"Maalis\", \"Huhti\", \"Touko\", \"Kesä\", \"Heinä\", \"Elo\", \"Syys\", \"Loka\", \"Marras\", \"Joulu\"]\n  });\n\n  var frCA = locale$1({\n    dateTime: \"%a %e %b %Y %X\",\n    date: \"%Y-%m-%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"\", \"\"],\n    days: [\"dimanche\", \"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\"],\n    shortDays: [\"dim\", \"lun\", \"mar\", \"mer\", \"jeu\", \"ven\", \"sam\"],\n    months: [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"],\n    shortMonths: [\"jan\", \"fév\", \"mar\", \"avr\", \"mai\", \"jui\", \"jul\", \"aoû\", \"sep\", \"oct\", \"nov\", \"déc\"]\n  });\n\n  var frFR = locale$1({\n    dateTime: \"%A, le %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"dimanche\", \"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\"],\n    shortDays: [\"dim.\", \"lun.\", \"mar.\", \"mer.\", \"jeu.\", \"ven.\", \"sam.\"],\n    months: [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"],\n    shortMonths: [\"janv.\", \"févr.\", \"mars\", \"avr.\", \"mai\", \"juin\", \"juil.\", \"août\", \"sept.\", \"oct.\", \"nov.\", \"déc.\"]\n  });\n\n  var heIL = locale$1({\n    dateTime: \"%A, %e ב%B %Y %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"ראשון\", \"שני\", \"שלישי\", \"רביעי\", \"חמישי\", \"שישי\", \"שבת\"],\n    shortDays: [\"א׳\", \"ב׳\", \"ג׳\", \"ד׳\", \"ה׳\", \"ו׳\", \"ש׳\"],\n    months: [\"ינואר\", \"פברואר\", \"מרץ\", \"אפריל\", \"מאי\", \"יוני\", \"יולי\", \"אוגוסט\", \"ספטמבר\", \"אוקטובר\", \"נובמבר\", \"דצמבר\"],\n    shortMonths: [\"ינו׳\", \"פבר׳\", \"מרץ\", \"אפר׳\", \"מאי\", \"יוני\", \"יולי\", \"אוג׳\", \"ספט׳\", \"אוק׳\", \"נוב׳\", \"דצמ׳\"]\n  });\n\n  var huHU = locale$1({\n    dateTime: \"%Y. %B %-e., %A %X\",\n    date: \"%Y. %m. %d.\",\n    time: \"%H:%M:%S\",\n    periods: [\"de.\", \"du.\"], // unused\n    days: [\"vasárnap\", \"hétfő\", \"kedd\", \"szerda\", \"csütörtök\", \"péntek\", \"szombat\"],\n    shortDays: [\"V\", \"H\", \"K\", \"Sze\", \"Cs\", \"P\", \"Szo\"],\n    months: [\"január\", \"február\", \"március\", \"április\", \"május\", \"június\", \"július\", \"augusztus\", \"szeptember\", \"október\", \"november\", \"december\"],\n    shortMonths: [\"jan.\", \"feb.\", \"már.\", \"ápr.\", \"máj.\", \"jún.\", \"júl.\", \"aug.\", \"szept.\", \"okt.\", \"nov.\", \"dec.\"]\n  });\n\n  var itIT = locale$1({\n    dateTime: \"%A %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Domenica\", \"Lunedì\", \"Martedì\", \"Mercoledì\", \"Giovedì\", \"Venerdì\", \"Sabato\"],\n    shortDays: [\"Dom\", \"Lun\", \"Mar\", \"Mer\", \"Gio\", \"Ven\", \"Sab\"],\n    months: [\"Gennaio\", \"Febbraio\", \"Marzo\", \"Aprile\", \"Maggio\", \"Giugno\", \"Luglio\", \"Agosto\", \"Settembre\", \"Ottobre\", \"Novembre\", \"Dicembre\"],\n    shortMonths: [\"Gen\", \"Feb\", \"Mar\", \"Apr\", \"Mag\", \"Giu\", \"Lug\", \"Ago\", \"Set\", \"Ott\", \"Nov\", \"Dic\"]\n  });\n\n  var jaJP = locale$1({\n    dateTime: \"%Y %b %e %a %X\",\n    date: \"%Y/%m/%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"日曜日\", \"月曜日\", \"火曜日\", \"水曜日\", \"木曜日\", \"金曜日\", \"土曜日\"],\n    shortDays: [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"],\n    months: [\"睦月\", \"如月\", \"弥生\", \"卯月\", \"皐月\", \"水無月\", \"文月\", \"葉月\", \"長月\", \"神無月\", \"霜月\", \"師走\"],\n    shortMonths: [\"1月\", \"2月\", \"3月\", \"4月\", \"5月\", \"6月\", \"7月\", \"8月\", \"9月\", \"10月\", \"11月\", \"12月\"]\n  });\n\n  var koKR = locale$1({\n    dateTime: \"%Y/%m/%d %a %X\",\n    date: \"%Y/%m/%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"오전\", \"오후\"],\n    days: [\"일요일\", \"월요일\", \"화요일\", \"수요일\", \"목요일\", \"금요일\", \"토요일\"],\n    shortDays: [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"],\n    months: [\"1월\", \"2월\", \"3월\", \"4월\", \"5월\", \"6월\", \"7월\", \"8월\", \"9월\", \"10월\", \"11월\", \"12월\"],\n    shortMonths: [\"1월\", \"2월\", \"3월\", \"4월\", \"5월\", \"6월\", \"7월\", \"8월\", \"9월\", \"10월\", \"11월\", \"12월\"]\n  });\n\n  var mkMK = locale$1({\n    dateTime: \"%A, %e %B %Y г. %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"недела\", \"понеделник\", \"вторник\", \"среда\", \"четврток\", \"петок\", \"сабота\"],\n    shortDays: [\"нед\", \"пон\", \"вто\", \"сре\", \"чет\", \"пет\", \"саб\"],\n    months: [\"јануари\", \"февруари\", \"март\", \"април\", \"мај\", \"јуни\", \"јули\", \"август\", \"септември\", \"октомври\", \"ноември\", \"декември\"],\n    shortMonths: [\"јан\", \"фев\", \"мар\", \"апр\", \"мај\", \"јун\", \"јул\", \"авг\", \"сеп\", \"окт\", \"ное\", \"дек\"]\n  });\n\n  var nlNL = locale$1({\n    dateTime: \"%a %e %B %Y %T\",\n    date: \"%d-%m-%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"zondag\", \"maandag\", \"dinsdag\", \"woensdag\", \"donderdag\", \"vrijdag\", \"zaterdag\"],\n    shortDays: [\"zo\", \"ma\", \"di\", \"wo\", \"do\", \"vr\", \"za\"],\n    months: [\"januari\", \"februari\", \"maart\", \"april\", \"mei\", \"juni\", \"juli\", \"augustus\", \"september\", \"oktober\", \"november\", \"december\"],\n    shortMonths: [\"jan\", \"feb\", \"mrt\", \"apr\", \"mei\", \"jun\", \"jul\", \"aug\", \"sep\", \"okt\", \"nov\", \"dec\"]\n  });\n\n  var plPL = locale$1({\n    dateTime: \"%A, %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Niedziela\", \"Poniedziałek\", \"Wtorek\", \"Środa\", \"Czwartek\", \"Piątek\", \"Sobota\"],\n    shortDays: [\"Niedz.\", \"Pon.\", \"Wt.\", \"Śr.\", \"Czw.\", \"Pt.\", \"Sob.\"],\n    months: [\"Styczeń\", \"Luty\", \"Marzec\", \"Kwiecień\", \"Maj\", \"Czerwiec\", \"Lipiec\", \"Sierpień\", \"Wrzesień\", \"Październik\", \"Listopad\", \"Grudzień\"],\n    shortMonths: [\"Stycz.\", \"Luty\", \"Marz.\", \"Kwie.\", \"Maj\", \"Czerw.\", \"Lipc.\", \"Sierp.\", \"Wrz.\", \"Paźdz.\", \"Listop.\", \"Grudz.\"]/* In Polish language abbraviated months are not commonly used so there is a dispute about the proper abbraviations. */\n  });\n\n  var ptBR = locale$1({\n    dateTime: \"%A, %e de %B de %Y. %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\n    shortDays: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\n    months: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\n    shortMonths: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"]\n  });\n\n  var ruRU = locale$1({\n    dateTime: \"%A, %e %B %Y г. %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"воскресенье\", \"понедельник\", \"вторник\", \"среда\", \"четверг\", \"пятница\", \"суббота\"],\n    shortDays: [\"вс\", \"пн\", \"вт\", \"ср\", \"чт\", \"пт\", \"сб\"],\n    months: [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\", \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"],\n    shortMonths: [\"янв\", \"фев\", \"мар\", \"апр\", \"май\", \"июн\", \"июл\", \"авг\", \"сен\", \"окт\", \"ноя\", \"дек\"]\n  });\n\n  var svSE = locale$1({\n    dateTime: \"%A den %d %B %Y %X\",\n    date: \"%Y-%m-%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"fm\", \"em\"],\n    days: [\"Söndag\", \"Måndag\", \"Tisdag\", \"Onsdag\", \"Torsdag\", \"Fredag\", \"Lördag\"],\n    shortDays: [\"Sön\", \"Mån\", \"Tis\", \"Ons\", \"Tor\", \"Fre\", \"Lör\"],\n    months: [\"Januari\", \"Februari\", \"Mars\", \"April\", \"Maj\", \"Juni\", \"Juli\", \"Augusti\", \"September\", \"Oktober\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"Maj\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dec\"]\n  });\n\n  var zhCN = locale$1({\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%Y/%-m/%-d\",\n    time: \"%H:%M:%S\",\n    periods: [\"上午\", \"下午\"],\n    days: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"],\n    shortDays: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"],\n    months: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"],\n    shortMonths: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"]\n  });\n\n  var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\n  function formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n\n  formatIsoNative.toString = function() {\n    return isoSpecifier;\n  };\n\n  var formatIso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\")\n      ? formatIsoNative\n      : locale.utcFormat(isoSpecifier);\n\n  var format = locale.format;\n  var utcFormat = locale.utcFormat;\n\n  var version = \"0.2.1\";\n\n  exports.version = version;\n  exports.format = format;\n  exports.utcFormat = utcFormat;\n  exports.locale = locale$1;\n  exports.localeCaEs = caES;\n  exports.localeDeCh = deCH;\n  exports.localeDeDe = deDE;\n  exports.localeEnCa = enCA;\n  exports.localeEnGb = enGB;\n  exports.localeEnUs = locale;\n  exports.localeEsEs = esES;\n  exports.localeFiFi = fiFI;\n  exports.localeFrCa = frCA;\n  exports.localeFrFr = frFR;\n  exports.localeHeIl = heIL;\n  exports.localeHuHu = huHU;\n  exports.localeItIt = itIT;\n  exports.localeJaJp = jaJP;\n  exports.localeKoKr = koKR;\n  exports.localeMkMk = mkMK;\n  exports.localeNlNl = nlNL;\n  exports.localePlPl = plPL;\n  exports.localePtBr = ptBR;\n  exports.localeRuRu = ruRU;\n  exports.localeSvSe = svSE;\n  exports.localeZhCn = zhCN;\n  exports.isoFormat = formatIso;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/~/d3-time-format/build/d3-time-format.js\n// module id = 4iS9\n// module chunks = 0","module.exports = {\n  Handler:  require('./SVGHandler'),\n  Renderer: require('./SVGRenderer'),\n  string: {\n    Renderer : require('./SVGStringRenderer')\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/render/svg/index.js\n// module id = 54Eg\n// module chunks = 0","var dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Pie(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field:      {type: 'field', default: null},\n    startAngle: {type: 'value', default: 0},\n    endAngle:   {type: 'value', default: 2 * Math.PI},\n    sort:       {type: 'value', default: false}\n  });\n\n  this._output = {\n    'start': 'layout_start',\n    'end':   'layout_end',\n    'mid':   'layout_mid'\n  };\n\n  return this.mutates(true);\n}\n\nvar prototype = (Pie.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Pie;\n\nfunction ones() { return 1; }\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['pie']);\n\n  var output = this._output,\n      field = this.param('field').accessor || ones,\n      start = this.param('startAngle'),\n      stop = this.param('endAngle'),\n      sort = this.param('sort');\n\n  var values = data.map(field),\n      a = start,\n      k = (stop - start) / dl.sum(values),\n      index = dl.range(data.length),\n      i, t, v;\n\n  if (sort) {\n    index.sort(function(a, b) {\n      return values[a] - values[b];\n    });\n  }\n\n  for (i=0; i<index.length; ++i) {\n    t = data[index[i]];\n    v = values[index[i]];\n    Tuple.set(t, output.start, a);\n    Tuple.set(t, output.mid, (a + 0.5 * v * k));\n    Tuple.set(t, output.end, (a += v * k));\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.end] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nmodule.exports = Pie;\n\nPie.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Pie transform\",\n  \"description\": \"Computes a pie chart layout.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"pie\"]},\n    \"field\": {\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"The data values to encode as angular spans. \" +\n        \"If this property is omitted, all pie slices will have equal spans.\"\n    },\n    \"startAngle\": {\n      \"oneOf\": [\n        {\n          \"type\": \"number\",\n          \"minimum\": 0,\n          \"maximum\": 2 * Math.PI\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": 0\n    },\n    \"endAngle\": {\n      \"oneOf\": [\n        {\n          \"type\": \"number\",\n          \"minimum\": 0,\n          \"maximum\": 2 * Math.PI\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": 2 * Math.PI,\n    },\n    \"sort\": {\n      \"description\": \" If true, will sort the data prior to computing angles.\",\n      \"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": false\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"start\": {\"type\": \"string\", \"default\": \"layout_start\"},\n        \"end\": {\"type\": \"string\", \"default\": \"layout_end\"},\n        \"mid\": {\"type\": \"string\", \"default\": \"layout_mid\"}\n      }\n    }\n  },\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Pie.js\n// module id = 58eP\n// module chunks = 0","var util = require('../util');\n\n// Matches absolute URLs with optional protocol\n//   https://...    file://...    //...\nvar protocol_re = /^([A-Za-z]+:)?\\/\\//;\n\n// Special treatment in node.js for the file: protocol\nvar fileProtocol = 'file://';\n\n// Validate and cleanup URL to ensure that it is allowed to be accessed\n// Returns cleaned up URL, or false if access is not allowed\nfunction sanitizeUrl(opt) {\n  var url = opt.url;\n  if (!url && opt.file) { return fileProtocol + opt.file; }\n\n  // In case this is a relative url (has no host), prepend opt.baseURL\n  if (opt.baseURL && !protocol_re.test(url)) {\n    if (!startsWith(url, '/') && opt.baseURL[opt.baseURL.length-1] !== '/') {\n      url = '/' + url; // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n    }\n    url = opt.baseURL + url;\n  }\n  // relative protocol, starts with '//'\n  if (!load.useXHR && startsWith(url, '//')) {\n    url = (opt.defaultProtocol || 'http') + ':' + url;\n  }\n  // If opt.domainWhiteList is set, only allows url, whose hostname\n  // * Is the same as the origin (window.location.hostname)\n  // * Equals one of the values in the whitelist\n  // * Is a proper subdomain of one of the values in the whitelist\n  if (opt.domainWhiteList) {\n    var domain, origin;\n    if (load.useXHR) {\n      var a = document.createElement('a');\n      a.href = url;\n      // From http://stackoverflow.com/questions/736513/how-do-i-parse-a-url-into-hostname-and-path-in-javascript\n      // IE doesn't populate all link properties when setting .href with a relative URL,\n      // however .href will return an absolute URL which then can be used on itself\n      // to populate these additional fields.\n      if (a.host === '') {\n        a.href = a.href;\n      }\n      domain = a.hostname.toLowerCase();\n      origin = window.location.hostname;\n    } else {\n      // relative protocol is broken: https://github.com/defunctzombie/node-url/issues/5\n      var parts = require('url').parse(url);\n      domain = parts.hostname;\n      origin = null;\n    }\n\n    if (origin !== domain) {\n      var whiteListed = opt.domainWhiteList.some(function(d) {\n        var idx = domain.length - d.length;\n        return d === domain ||\n          (idx > 1 && domain[idx-1] === '.' && domain.lastIndexOf(d) === idx);\n      });\n      if (!whiteListed) {\n        throw 'URL is not whitelisted: ' + url;\n      }\n    }\n  }\n  return url;\n}\n\nfunction load(opt, callback) {\n  return load.loader(opt, callback);\n}\n\nfunction loader(opt, callback) {\n  var error = callback || function(e) { throw e; }, url;\n\n  try {\n    url = load.sanitizeUrl(opt); // enable override\n  } catch (err) {\n    error(err);\n    return;\n  }\n\n  if (!url) {\n    error('Invalid URL: ' + opt.url);\n  } else if (load.useXHR) {\n    // on client, use xhr\n    return load.xhr(url, opt, callback);\n  } else if (startsWith(url, fileProtocol)) {\n    // on server, if url starts with 'file://', strip it and load from file\n    return load.file(url.slice(fileProtocol.length), opt, callback);\n  } else if (url.indexOf('://') < 0) { // TODO better protocol check?\n    // on server, if no protocol assume file\n    return load.file(url, opt, callback);\n  } else {\n    // for regular URLs on server\n    return load.http(url, opt, callback);\n  }\n}\n\nfunction xhrHasResponse(request) {\n  var type = request.responseType;\n  return type && type !== 'text' ?\n    request.response : // null on error\n    request.responseText; // '' on error\n}\n\nfunction xhr(url, opt, callback) {\n  var async = !!callback;\n  var request = new XMLHttpRequest();\n  // If IE does not support CORS, use XDomainRequest (copied from d3.xhr)\n  if (typeof XDomainRequest !== 'undefined' &&\n      !('withCredentials' in request) &&\n      /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\n  function respond() {\n    var status = request.status;\n    if (!status && xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n      callback(null, request.responseText);\n    } else {\n      callback(request, null);\n    }\n  }\n\n  if (async) {\n    if ('onload' in request) {\n      request.onload = request.onerror = respond;\n    } else {\n      request.onreadystatechange = function() {\n        if (request.readyState > 3) respond();\n      };\n    }\n  }\n\n  request.open('GET', url, async);\n  /* istanbul ignore else */\n  if (request.setRequestHeader) {\n    var headers = util.extend({}, load.headers, opt.headers);\n    for (var name in headers) {\n      request.setRequestHeader(name, headers[name]);\n    }\n  }\n  request.send();\n\n  if (!async && xhrHasResponse(request)) {\n    return request.responseText;\n  }\n}\n\nfunction file(filename, opt, callback) {\n  var fs = require('fs');\n  if (!callback) {\n    return fs.readFileSync(filename, 'utf8');\n  }\n  fs.readFile(filename, callback);\n}\n\nfunction http(url, opt, callback) {\n  var headers = util.extend({}, load.headers, opt.headers);\n\n  var options = {url: url, encoding: null, gzip: true, headers: headers};\n  if (!callback) {\n    return require('sync-request')('GET', url, options).getBody();\n  }\n  require('request')(options, function(error, response, body) {\n    if (!error && response.statusCode === 200) {\n      callback(null, body);\n    } else {\n      error = error ||\n        'Load failed with response code ' + response.statusCode + '.';\n      callback(error, null);\n    }\n  });\n}\n\nfunction startsWith(string, searchString) {\n  return string == null ? false : string.lastIndexOf(searchString, 0) === 0;\n}\n\n// Allow these functions to be overriden by the user of the library\nload.loader = loader;\nload.sanitizeUrl = sanitizeUrl;\nload.xhr = xhr;\nload.file = file;\nload.http = http;\n\n// Default settings\nload.useXHR = (typeof XMLHttpRequest !== 'undefined');\nload.headers = {};\n\nmodule.exports = load;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/load.js\n// module id = 5AQc\n// module chunks = 0","function toMap(list) {\n  var map = {}, i, n;\n  for (i=0, n=list.length; i<n; ++i) map[list[i]] = 1;\n  return map;\n}\n\nfunction keys(object) {\n  var list = [], k;\n  for (k in object) list.push(k);\n  return list;\n}\n\nmodule.exports = function(opt) {\n  opt = opt || {};\n  var constants = opt.constants || require('./constants'),\n      functions = (opt.functions || require('./functions'))(codegen),\n      functionDefs = opt.functionDefs ? opt.functionDefs(codegen) : {},\n      idWhiteList = opt.idWhiteList ? toMap(opt.idWhiteList) : null,\n      idBlackList = opt.idBlackList ? toMap(opt.idBlackList) : null,\n      memberDepth = 0,\n      FIELD_VAR = opt.fieldVar || 'datum',\n      GLOBAL_VAR = opt.globalVar || 'signals',\n      globals = {},\n      fields = {},\n      dataSources = {};\n\n  function codegen_wrap(ast) {\n    var retval = {\n      code: codegen(ast),\n      globals: keys(globals),\n      fields: keys(fields),\n      dataSources: keys(dataSources),\n      defs: functionDefs\n    };\n    globals = {};\n    fields = {};\n    dataSources = {};\n    return retval;\n  }\n\n  /* istanbul ignore next */\n  var lookupGlobal = typeof GLOBAL_VAR === 'function' ? GLOBAL_VAR :\n    function (id) {\n      return GLOBAL_VAR + '[\"' + id + '\"]';\n    };\n\n  function codegen(ast) {\n    if (typeof ast === 'string') return ast;\n    var generator = CODEGEN_TYPES[ast.type];\n    if (generator == null) {\n      throw new Error('Unsupported type: ' + ast.type);\n    }\n    return generator(ast);\n  }\n\n  var CODEGEN_TYPES = {\n    'Literal': function(n) {\n        return n.raw;\n      },\n    'Identifier': function(n) {\n        var id = n.name;\n        if (memberDepth > 0) {\n          return id;\n        }\n        if (constants.hasOwnProperty(id)) {\n          return constants[id];\n        }\n        if (idWhiteList) {\n          if (idWhiteList.hasOwnProperty(id)) {\n            return id;\n          } else {\n            globals[id] = 1;\n            return lookupGlobal(id);\n          }\n        }\n        if (idBlackList && idBlackList.hasOwnProperty(id)) {\n          throw new Error('Illegal identifier: ' + id);\n        }\n        return id;\n      },\n    'Program': function(n) {\n        return n.body.map(codegen).join('\\n');\n      },\n    'MemberExpression': function(n) {\n        var d = !n.computed;\n        var o = codegen(n.object);\n        if (d) memberDepth += 1;\n        var p = codegen(n.property);\n        if (o === FIELD_VAR) { fields[p] = 1; } // HACKish...\n        if (d) memberDepth -= 1;\n        return o + (d ? '.'+p : '['+p+']');\n      },\n    'CallExpression': function(n) {\n        if (n.callee.type !== 'Identifier') {\n          throw new Error('Illegal callee type: ' + n.callee.type);\n        }\n        var callee = n.callee.name;\n        var args = n.arguments;\n        var fn = functions.hasOwnProperty(callee) && functions[callee];\n        if (!fn) throw new Error('Unrecognized function: ' + callee);\n        return fn instanceof Function ?\n          fn(args, globals, fields, dataSources) :\n          fn + '(' + args.map(codegen).join(',') + ')';\n      },\n    'ArrayExpression': function(n) {\n        return '[' + n.elements.map(codegen).join(',') + ']';\n      },\n    'BinaryExpression': function(n) {\n        return '(' + codegen(n.left) + n.operator + codegen(n.right) + ')';\n      },\n    'UnaryExpression': function(n) {\n        return '(' + n.operator + codegen(n.argument) + ')';\n      },\n    'ConditionalExpression': function(n) {\n        return '(' + codegen(n.test) +\n          '?' + codegen(n.consequent) +\n          ':' + codegen(n.alternate) +\n          ')';\n      },\n    'LogicalExpression': function(n) {\n        return '(' + codegen(n.left) + n.operator + codegen(n.right) + ')';\n      },\n    'ObjectExpression': function(n) {\n        return '{' + n.properties.map(codegen).join(',') + '}';\n      },\n    'Property': function(n) {\n        memberDepth += 1;\n        var k = codegen(n.key);\n        memberDepth -= 1;\n        return k + ':' + codegen(n.value);\n      },\n    'ExpressionStatement': function(n) {\n        return codegen(n.expression);\n      }\n  };\n\n  codegen_wrap.functions = functions;\n  codegen_wrap.functionDefs = functionDefs;\n  codegen_wrap.constants = constants;\n  return codegen_wrap;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-expression/src/codegen.js\n// module id = 5meb\n// module chunks = 0","var df = require('vega-dataflow'),\n    Tuple = df.Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction CountPattern(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field:     {type: 'field', default: 'data'},\n    pattern:   {type: 'value', default: '[\\\\w\\']+'},\n    case:      {type: 'value', default: 'lower'},\n    stopwords: {type: 'value', default: ''}\n  });\n\n  this._output = {text: 'text', count: 'count'};\n\n  return this.router(true).produces(true);\n}\n\nvar prototype = (CountPattern.prototype = Object.create(Transform.prototype));\nprototype.constructor = CountPattern;\n\nprototype.transform = function(input, reset) {\n  log.debug(input, ['countpattern']);\n\n  var get = this.param('field').accessor,\n      pattern = this.param('pattern'),\n      stop = this.param('stopwords'),\n      rem = false;\n\n  // update parameters\n  if (this._stop !== stop) {\n    this._stop = stop;\n    this._stop_re = new RegExp('^' + stop + '$', 'i');\n    reset = true;\n  }\n\n  if (this._pattern !== pattern) {\n    this._pattern = pattern;\n    this._match = new RegExp(this._pattern, 'g');\n    reset = true;\n  }\n\n  if (reset) this._counts = {};\n\n  function curr(t) { return (Tuple.prev_init(t), get(t)); }\n  function prev(t) { return get(Tuple.prev(t)); }\n\n  this._add(input.add, curr);\n  if (!reset) this._rem(input.rem, prev);\n  if (reset || (rem = input.fields[get.field])) {\n    if (rem) this._rem(input.mod, prev);\n    this._add(input.mod, curr);\n  }\n\n  // generate output tuples\n  return this._changeset(input);\n};\n\nprototype._changeset = function(input) {\n  var counts = this._counts,\n      tuples = this._tuples || (this._tuples = {}),\n      change = df.ChangeSet.create(input),\n      out = this._output, w, t, c;\n\n  for (w in counts) {\n    t = tuples[w];\n    c = counts[w] || 0;\n    if (!t && c) {\n      tuples[w] = (t = Tuple.ingest({}));\n      t[out.text] = w;\n      t[out.count] = c;\n      change.add.push(t);\n    } else if (c === 0) {\n      if (t) change.rem.push(t);\n      delete counts[w];\n      delete tuples[w];\n    } else if (t[out.count] !== c) {\n      Tuple.set(t, out.count, c);\n      change.mod.push(t);\n    }\n  }\n  return change;\n};\n\nprototype._tokenize = function(text) {\n  switch (this.param('case')) {\n    case 'upper': text = text.toUpperCase(); break;\n    case 'lower': text = text.toLowerCase(); break;\n  }\n  return text.match(this._match);\n};\n\nprototype._add = function(tuples, get) {\n  var counts = this._counts,\n      stop = this._stop_re,\n      tok, i, j, t;\n\n  for (j=0; j<tuples.length; ++j) {\n    tok = this._tokenize(get(tuples[j]));\n    for (i=0; i<tok.length; ++i) {\n      if (!stop.test(t=tok[i])) {\n        counts[t] = 1 + (counts[t] || 0);\n      }\n    }\n  }\n};\n\nprototype._rem = function(tuples, get) {\n  var counts = this._counts,\n      stop = this._stop_re,\n      tok, i, j, t;\n\n  for (j=0; j<tuples.length; ++j) {\n    tok = this._tokenize(get(tuples[j]));\n    for (i=0; i<tok.length; ++i) {\n      if (!stop.test(t=tok[i])) {\n        counts[t] -= 1;\n      }\n    }\n  }\n};\n\nmodule.exports = CountPattern;\n\nCountPattern.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"CountPattern transform\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"countpattern\"]},\n    \"field\": {\n      \"description\": \"The field containing the text to analyze.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 'data'\n    },\n    \"pattern\": {\n      \"description\": \"A regexp pattern for matching words in text.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"[\\\\w\\']+\"\n    },\n    \"case\": {\n      \"description\": \"Text case transformation to apply.\",\n      \"oneOf\": [{\"enum\": [\"lower\", \"upper\", \"none\"]}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"lower\"\n    },\n    \"stopwords\": {\n      \"description\": \"A regexp pattern for matching stopwords to omit.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"\"\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"text\": {\"type\": \"string\", \"default\": \"text\"},\n        \"count\": {\"type\": \"string\", \"default\": \"count\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/CountPattern.js\n// module id = 6+LD\n// module chunks = 0","var d3 = require('d3'),\n    dl = require('datalib'),\n    df = require('vega-dataflow'),\n    selector = require('vega-event-selector'),\n    parseSignals = require('./signals');\n\nvar GATEKEEPER = '_vgGATEKEEPER',\n    EVALUATOR  = '_vgEVALUATOR';\n\nvar vgEvent = {\n  getItem: function() { return this.item; },\n  getGroup: function(name) {\n    var group = name ? this.name[name] : this.group,\n        mark = group && group.mark,\n        interactive = mark && (mark.interactive || mark.interactive === undefined);\n    return interactive ? group : {};\n  },\n  getXY: function(item) {\n      var p = {x: this.x, y: this.y};\n      if (typeof item === 'string') {\n        item = this.name[item];\n      }\n      for (; item; item = item.mark && item.mark.group) {\n        p.x -= item.x || 0;\n        p.y -= item.y || 0;\n      }\n      return p;\n    },\n  getX: function(item) { return this.getXY(item).x; },\n  getY: function(item) { return this.getXY(item).y; }\n};\n\nfunction parseStreams(view) {\n  var model = view.model(),\n      trueFn  = model.expr('true'),\n      falseFn = model.expr('false'),\n      spec    = model.defs().signals,\n      registry = {handlers: {}, nodes: {}},\n      internal = dl.duplicate(registry),  // Internal event processing\n      external = dl.duplicate(registry);  // External event processing\n\n  dl.array(spec).forEach(function(sig) {\n    var signal = model.signal(sig.name);\n    if (sig.expr) return;  // Cannot have an expr and stream definition.\n\n    dl.array(sig.streams).forEach(function(stream) {\n      var sel = selector.parse(stream.type),\n          exp = model.expr(stream.expr);\n      mergedStream(signal, sel, exp, stream);\n    });\n  });\n\n  // We register the event listeners all together so that if multiple\n  // signals are registered on the same event, they will receive the\n  // new value on the same pulse.\n  dl.keys(internal.handlers).forEach(function(type) {\n    view.on(type, function(evt, item) {\n      evt.preventDefault(); // stop text selection\n      extendEvent(evt, item);\n      fire(internal, type, (item && item.datum) || {}, (item && item.mark && item.mark.group && item.mark.group.datum) || {}, evt);\n    });\n  });\n\n  // add external event listeners\n  dl.keys(external.handlers).forEach(function(type) {\n    if (typeof window === 'undefined') return; // No external support\n\n    var h = external.handlers[type],\n        t = type.split(':'), // --> no element pseudo-selectors\n        elt = (t[0] === 'window') ? [window] :\n              window.document.querySelectorAll(t[0]);\n\n    function handler(evt) {\n      extendEvent(evt);\n      fire(external, type, d3.select(this).datum(), this.parentNode && d3.select(this.parentNode).datum(), evt);\n    }\n\n    for (var i=0; i<elt.length; ++i) {\n      elt[i].addEventListener(t[1], handler);\n    }\n\n    h.elements = elt;\n    h.listener = handler;\n  });\n\n  // remove external event listeners\n  external.detach = function() {\n    dl.keys(external.handlers).forEach(function(type) {\n      var h = external.handlers[type],\n          t = type.split(':'),\n          elt = dl.array(h.elements);\n\n      for (var i=0; i<elt.length; ++i) {\n        elt[i].removeEventListener(t[1], h.listener);\n      }\n    });\n  };\n\n  // export detach method\n  return external.detach;\n\n  // -- helper functions -----\n\n  function extendEvent(evt, item) {\n    var mouse = d3.mouse((d3.event=evt, view.renderer().scene())),\n        pad = view.padding(),\n        names = {}, mark, group, i;\n\n    if (item) {\n      mark = item.mark;\n      group = mark.marktype === 'group' ? item : mark.group;\n      for (i=item; i!=null; i=i.mark.group) {\n        if (i.mark.def.name) {\n          names[i.mark.def.name] = i;\n        }\n      }\n    }\n    names.root = view.model().scene().items[0];\n\n    evt.vg = Object.create(vgEvent);\n    evt.vg.group = group;\n    evt.vg.item = item || {};\n    evt.vg.name = names;\n    evt.vg.x = mouse[0] - pad.left;\n    evt.vg.y = mouse[1] - pad.top;\n  }\n\n  function fire(registry, type, datum, parent, evt) {\n    var handlers = registry.handlers[type],\n        node = registry.nodes[type],\n        cs = df.ChangeSet.create(null, true),\n        filtered = false,\n        val, i, n, h;\n\n    function invoke(f) {\n      return !f.fn(datum, parent, evt);\n    }\n\n    for (i=0, n=handlers.length; i<n; ++i) {\n      h = handlers[i];\n      filtered = h.filters.some(invoke);\n      if (filtered) continue;\n\n      val = h.exp.fn(datum, parent, evt);\n      if (h.spec.scale) {\n        val = parseSignals.scale(model, h.spec, val, datum, evt);\n      }\n\n      if (val !== h.signal.value() || h.signal.verbose()) {\n        h.signal.value(val);\n        cs.signals[h.signal.name()] = 1;\n      }\n    }\n\n    model.propagate(cs, node);\n  }\n\n  function mergedStream(sig, selector, exp, spec) {\n    selector.forEach(function(s) {\n      if (s.event)       domEvent(sig, s, exp, spec);\n      else if (s.signal) signal(sig, s, exp, spec);\n      else if (s.start)  orderedStream(sig, s, exp, spec);\n      else if (s.stream) {\n        if (s.filters) s.stream.forEach(function(ms) {\n          ms.filters = dl.array(ms.filters).concat(s.filters);\n        });\n        mergedStream(sig, s.stream, exp, spec);\n      }\n    });\n  }\n\n  function domEvent(sig, selector, exp, spec) {\n    var evt = selector.event,\n        name = selector.name,\n        mark = selector.mark,\n        target   = selector.target,\n        filters  = dl.array(selector.filters),\n        registry = target ? external : internal,\n        type = target ? target+':'+evt : evt,\n        node = registry.nodes[type] || (registry.nodes[type] = new df.Node(model)),\n        handlers = registry.handlers[type] || (registry.handlers[type] = []);\n\n    if (name) {\n      filters.push('!!event.vg.name[\"' + name + '\"]'); // Mimic event bubbling\n    } else if (mark) {\n      filters.push('event.vg.item.mark && event.vg.item.mark.marktype==='+dl.str(mark));\n    }\n\n    handlers.push({\n      signal: sig,\n      exp: exp,\n      spec: spec,\n      filters: filters.map(function(f) { return model.expr(f); })\n    });\n\n    node.addListener(sig);\n  }\n\n  function signal(sig, selector, exp, spec) {\n    var n = sig.name(), s = model.signal(n+EVALUATOR, null);\n    s.evaluate = function(input) {\n      if (!input.signals[selector.signal]) return model.doNotPropagate;\n      var val = exp.fn();\n      if (spec.scale) {\n        val = parseSignals.scale(model, spec, val);\n      }\n\n      if (val !== sig.value() || sig.verbose()) {\n        sig.value(val);\n        input.signals[n] = 1;\n        input.reflow = true;\n      }\n\n      return input;\n    };\n    s.dependency(df.Dependencies.SIGNALS, selector.signal);\n    s.addListener(sig);\n    model.signal(selector.signal).addListener(s);\n  }\n\n  function orderedStream(sig, selector, exp, spec) {\n    var name = sig.name(),\n        gk = name + GATEKEEPER,\n        middle  = selector.middle,\n        filters = middle.filters || (middle.filters = []),\n        gatekeeper = model.signal(gk) || model.signal(gk, false);\n\n    // Register an anonymous signal to act as a gatekeeper. Its value is\n    // true or false depending on whether the start or end streams occur.\n    // The middle signal then simply filters for the gatekeeper's value.\n    mergedStream(gatekeeper, [selector.start], trueFn, {});\n    mergedStream(gatekeeper, [selector.end], falseFn, {});\n\n    filters.push(gatekeeper.name());\n    mergedStream(sig, [selector.middle], exp, spec);\n  }\n}\n\nmodule.exports = parseStreams;\nparseStreams.schema = {\n  \"defs\": {\n    \"streams\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n\n        \"properties\": {\n          \"type\": {\"type\": \"string\"},\n          \"expr\": {\"type\": \"string\"},\n          \"scale\": {\"$ref\": \"#/refs/scopedScale\"}\n        },\n\n        \"additionalProperties\": false,\n        \"required\": [\"type\", \"expr\"]\n      }\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/streams.js\n// module id = 6gf1\n// module chunks = 0","\"use strict\";\nvar fielddef_1 = require('../../fielddef');\nvar type_1 = require('../../type');\nvar util_1 = require('../../util');\nvar time_1 = require('./../time');\nvar timeUnit;\n(function (timeUnit) {\n    function parse(model) {\n        return model.reduce(function (timeUnitComponent, fieldDef, channel) {\n            var ref = fielddef_1.field(fieldDef, { nofn: true, datum: true });\n            if (fieldDef.type === type_1.TEMPORAL && fieldDef.timeUnit) {\n                var hash = fielddef_1.field(fieldDef);\n                timeUnitComponent[hash] = {\n                    type: 'formula',\n                    field: fielddef_1.field(fieldDef),\n                    expr: time_1.parseExpression(fieldDef.timeUnit, ref)\n                };\n            }\n            return timeUnitComponent;\n        }, {});\n    }\n    timeUnit.parseUnit = parse;\n    function parseFacet(model) {\n        var timeUnitComponent = parse(model);\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source) {\n            util_1.extend(timeUnitComponent, childDataComponent.timeUnit);\n            delete childDataComponent.timeUnit;\n        }\n        return timeUnitComponent;\n    }\n    timeUnit.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var timeUnitComponent = parse(model);\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (!childDataComponent.source) {\n                util_1.extend(timeUnitComponent, childDataComponent.timeUnit);\n                delete childDataComponent.timeUnit;\n            }\n        });\n        return timeUnitComponent;\n    }\n    timeUnit.parseLayer = parseLayer;\n    function assemble(component) {\n        return util_1.vals(component.timeUnit);\n    }\n    timeUnit.assemble = assemble;\n})(timeUnit = exports.timeUnit || (exports.timeUnit = {}));\n//# sourceMappingURL=timeunit.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/timeunit.js\n// module id = 736r\n// module chunks = 0","\"use strict\";\nvar util_1 = require('./util');\nfunction isUnionedDomain(domain) {\n    if (!util_1.isArray(domain)) {\n        return 'fields' in domain;\n    }\n    return false;\n}\nexports.isUnionedDomain = isUnionedDomain;\nfunction isDataRefDomain(domain) {\n    if (!util_1.isArray(domain)) {\n        return 'data' in domain;\n    }\n    return false;\n}\nexports.isDataRefDomain = isDataRefDomain;\n//# sourceMappingURL=vega.schema.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/vega.schema.js\n// module id = 7YRp\n// module chunks = 0","var d3 = require('d3'),\n    config = {};\n\nconfig.load = {\n  // base url for loading external data files\n  // used only for server-side operation\n  baseURL: '',\n  // Allows domain restriction when using data loading via XHR.\n  // To enable, set it to a list of allowed domains\n  // e.g., ['wikipedia.org', 'eff.org']\n  domainWhiteList: false\n};\n\n// inset padding for automatic padding calculation\nconfig.autopadInset = 5;\n\n// extensible scale lookup table\n// all d3.scale.* instances also supported\nconfig.scale = {\n  time: d3.time.scale,\n  utc:  d3.time.scale.utc\n};\n\n// default rendering settings\nconfig.render = {\n  retina: true\n};\n\n// root scenegraph group\nconfig.scene = {\n  fill: undefined,\n  fillOpacity: undefined,\n  stroke: undefined,\n  strokeOpacity: undefined,\n  strokeWidth: undefined,\n  strokeDash: undefined,\n  strokeDashOffset: undefined\n};\n\n// default axis properties\nconfig.axis = {\n  layer: 'back',\n  ticks: 10,\n  padding: 3,\n  axisColor: '#000',\n  axisWidth: 1,\n  gridColor: '#000',\n  gridOpacity: 0.15,\n  tickColor: '#000',\n  tickLabelColor: '#000',\n  tickWidth: 1,\n  tickSize: 6,\n  tickLabelFontSize: 11,\n  tickLabelFont: 'sans-serif',\n  titleColor: '#000',\n  titleFont: 'sans-serif',\n  titleFontSize: 11,\n  titleFontWeight: 'bold',\n  titleOffset: 'auto',\n  titleOffsetAutoMin: 30,\n  titleOffsetAutoMax: 10000,\n  titleOffsetAutoMargin: 4\n};\n\n// default legend properties\nconfig.legend = {\n  orient: 'right',\n  offset: 20,\n  padding: 3, // padding between legend items and border\n  margin: 2,  // extra margin between two consecutive legends\n  gradientStrokeColor: '#888',\n  gradientStrokeWidth: 1,\n  gradientHeight: 16,\n  gradientWidth: 100,\n  labelColor: '#000',\n  labelFontSize: 10,\n  labelFont: 'sans-serif',\n  labelAlign: 'left',\n  labelBaseline: 'middle',\n  labelOffset: 8,\n  symbolShape: 'circle',\n  symbolSize: 50,\n  symbolColor: '#888',\n  symbolStrokeWidth: 1,\n  titleColor: '#000',\n  titleFont: 'sans-serif',\n  titleFontSize: 11,\n  titleFontWeight: 'bold'\n};\n\n// default color values\nconfig.color = {\n  rgb: [128, 128, 128],\n  lab: [50, 0, 0],\n  hcl: [0, 0, 50],\n  hsl: [0, 0, 0.5]\n};\n\n// default scale ranges\nconfig.range = {\n  category10:  d3.scale.category10().range(),\n  category20:  d3.scale.category20().range(),\n  category20b: d3.scale.category20b().range(),\n  category20c: d3.scale.category20c().range(),\n  shapes: [\n    'circle',\n    'cross',\n    'diamond',\n    'square',\n    'triangle-down',\n    'triangle-up'\n  ]\n};\n\nmodule.exports = config;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/core/config.js\n// module id = 8NMF\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar common_1 = require('../common');\nvar rule;\n(function (rule) {\n    function markType() {\n        return 'rule';\n    }\n    rule.markType = markType;\n    function properties(model) {\n        var p = {};\n        if (model.config().mark.orient === 'vertical') {\n            if (model.has(channel_1.X)) {\n                p.x = {\n                    scale: model.scaleName(channel_1.X),\n                    field: model.field(channel_1.X, { binSuffix: '_mid' })\n                };\n            }\n            else {\n                p.x = { value: 0 };\n            }\n            if (model.has(channel_1.Y)) {\n                p.y = {\n                    scale: model.scaleName(channel_1.Y),\n                    field: model.field(channel_1.Y, { binSuffix: '_mid' })\n                };\n            }\n            else {\n                p.y = { field: { group: 'height' } };\n            }\n            if (model.has(channel_1.Y2)) {\n                p.y2 = {\n                    scale: model.scaleName(channel_1.Y),\n                    field: model.field(channel_1.Y2, { binSuffix: '_mid' })\n                };\n            }\n            else {\n                p.y2 = { value: 0 };\n            }\n        }\n        else {\n            if (model.has(channel_1.Y)) {\n                p.y = {\n                    scale: model.scaleName(channel_1.Y),\n                    field: model.field(channel_1.Y, { binSuffix: '_mid' })\n                };\n            }\n            else {\n                p.y = { value: 0 };\n            }\n            if (model.has(channel_1.X)) {\n                p.x = {\n                    scale: model.scaleName(channel_1.X),\n                    field: model.field(channel_1.X, { binSuffix: '_mid' })\n                };\n            }\n            else {\n                p.x = { value: 0 };\n            }\n            if (model.has(channel_1.X2)) {\n                p.x2 = {\n                    scale: model.scaleName(channel_1.X),\n                    field: model.field(channel_1.X2, { binSuffix: '_mid' })\n                };\n            }\n            else {\n                p.x2 = { field: { group: 'width' } };\n            }\n        }\n        common_1.applyColorAndOpacity(p, model);\n        if (model.has(channel_1.SIZE)) {\n            p.strokeWidth = {\n                scale: model.scaleName(channel_1.SIZE),\n                field: model.field(channel_1.SIZE)\n            };\n        }\n        else {\n            p.strokeWidth = { value: sizeValue(model) };\n        }\n        return p;\n    }\n    rule.properties = properties;\n    function sizeValue(model) {\n        var fieldDef = model.fieldDef(channel_1.SIZE);\n        if (fieldDef && fieldDef.value !== undefined) {\n            return fieldDef.value;\n        }\n        return model.config().mark.ruleSize;\n    }\n    function labels(model) {\n        return undefined;\n    }\n    rule.labels = labels;\n})(rule = exports.rule || (exports.rule = {}));\n//# sourceMappingURL=rule.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/mark/rule.js\n// module id = 8lgt\n// module chunks = 0","var parseMark = require('./mark'),\n    parseProperties = require('./properties');\n\nfunction parseRootMark(model, spec, width, height) {\n  return {\n    type:       'group',\n    width:      width,\n    height:     height,\n    properties: defaults(spec.scene || {}, model),\n    scales:     spec.scales  || [],\n    axes:       spec.axes    || [],\n    legends:    spec.legends || [],\n    marks:      (spec.marks || []).map(function(m) { return parseMark(model, m, true); })\n  };\n}\n\nvar PROPERTIES = [\n  'fill', 'fillOpacity', 'stroke', 'strokeOpacity',\n  'strokeWidth', 'strokeDash', 'strokeDashOffset'\n];\n\nfunction defaults(spec, model) {\n  var config = model.config().scene,\n      props = {}, i, n, m, p, s;\n\n  for (i=0, n=m=PROPERTIES.length; i<n; ++i) {\n    p = PROPERTIES[i];\n    if ((s=spec[p]) !== undefined) {\n      props[p] = s.signal ? s : {value: s};\n    } else if (config[p]) {\n      props[p] = {value: config[p]};\n    } else {\n      --m;\n    }\n  }\n\n  return m ? {update: parseProperties(model, 'group', props)} : {};\n}\n\nmodule.exports = parseRootMark;\n\nparseRootMark.schema = {\n  \"defs\": {\n    \"container\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"scene\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"fill\": {\n              \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n            },\n            \"fillOpacity\": {\n              \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n            },\n            \"stroke\": {\n              \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n            },\n            \"strokeOpacity\": {\n              \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n            },\n            \"strokeWidth\": {\n              \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n            },\n            \"strokeDash\": {\n              \"oneOf\": [\n                {\"type\": \"array\", \"items\": {\"type\": \"number\"}}, \n                {\"$ref\": \"#/refs/signal\"}\n              ]\n            },\n            \"strokeDashOffset\": {\n              \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n            },\n          }\n        },\n        \"scales\": {\n          \"type\": \"array\",\n          \"items\": {\"$ref\": \"#/defs/scale\"}\n        },\n        \"axes\": {\n          \"type\": \"array\",\n          \"items\": {\"$ref\": \"#/defs/axis\"}\n        },\n        \"legends\": {\n          \"type\": \"array\",\n          \"items\": {\"$ref\": \"#/defs/legend\"}\n        },\n        \"marks\": {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\":[{\"$ref\": \"#/defs/groupMark\"}, {\"$ref\": \"#/defs/visualMark\"}]}\n        }\n      }\n    },\n\n\n    \"groupMark\": {\n      \"allOf\": [\n        {\n          \"properties\": { \"type\": {\"enum\": [\"group\"]} },\n          \"required\": [\"type\"]\n        },\n        {\"$ref\": \"#/defs/mark\"},\n        {\"$ref\": \"#/defs/container\"}\n      ]\n    },\n\n    \"visualMark\": {\n      \"allOf\": [\n        {\n          \"not\": { \"properties\": { \"type\": {\"enum\": [\"group\"]} } },\n        },\n        {\"$ref\": \"#/defs/mark\"}\n      ]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/marks.js\n// module id = 92+E\n// module chunks = 0","var util = require('./util'),\n    parse = require('../../../path/parse'),\n    render = require('../../../path/render');\n\nvar sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180);\n\nfunction path(g, o) {\n  var size = o.size != null ? o.size : 100,\n      x = o.x, y = o.y, r, t, rx, ry;\n\n  g.beginPath();\n\n  if (o.shape == null || o.shape === 'circle') {\n    r = Math.sqrt(size / Math.PI);\n    g.arc(x, y, r, 0, 2*Math.PI, 0);\n    g.closePath();\n    return;\n  }\n\n  switch (o.shape) {\n    case 'cross':\n      r = Math.sqrt(size / 5) / 2;\n      t = 3*r;\n      g.moveTo(x-t, y-r);\n      g.lineTo(x-r, y-r);\n      g.lineTo(x-r, y-t);\n      g.lineTo(x+r, y-t);\n      g.lineTo(x+r, y-r);\n      g.lineTo(x+t, y-r);\n      g.lineTo(x+t, y+r);\n      g.lineTo(x+r, y+r);\n      g.lineTo(x+r, y+t);\n      g.lineTo(x-r, y+t);\n      g.lineTo(x-r, y+r);\n      g.lineTo(x-t, y+r);\n      break;\n\n    case 'diamond':\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y);\n      g.lineTo(x, y+ry);\n      g.lineTo(x-rx, y);\n      break;\n\n    case 'square':\n      t = Math.sqrt(size);\n      r = t / 2;\n      g.rect(x-r, y-r, t, t);\n      break;\n\n    case 'triangle-down':\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y+ry);\n      g.lineTo(x+rx, y-ry);\n      g.lineTo(x-rx, y-ry);\n      break;\n\n    case 'triangle-up':\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      g.moveTo(x, y-ry);\n      g.lineTo(x+rx, y+ry);\n      g.lineTo(x-rx, y+ry);\n      break;\n\n    // custom shape\n    default:\n      var pathArray = resize(parse(o.shape), size);\n      render(g, pathArray, x, y);\n  }\n  g.closePath();\n}\n\n// Scale custom shapes (defined within a unit square) by given size.\nfunction resize(path, size) {\n  var sz = Math.sqrt(size),\n      i, n, j, m, curr;\n\n  for (i=0, n=path.length; i<n; ++i) {\n    for (curr=path[i], j=1, m=curr.length; j<m; ++j) {\n      curr[j] *= sz;\n    }\n  }\n  return path;\n}\n\nmodule.exports = {\n  draw: util.drawAll(path),\n  pick: util.pickPath(path)\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/render/canvas/marks/symbol.js\n// module id = Ad3P\n// module chunks = 0","var d3 = require('d3'),\n    dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nvar defaultRatio = 0.5 * (1 + Math.sqrt(5));\n\nfunction Treemap(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    // hierarchy parameters\n    sort: {type: 'array<field>', default: ['-value']},\n    children: {type: 'field', default: 'children'},\n    parent: {type: 'field', default: 'parent'},\n    field: {type: 'field', default: 'value'},\n    // treemap parameters\n    size: {type: 'array<value>', default: require('./screen').size},\n    round: {type: 'value', default: true},\n    sticky: {type: 'value', default: false},\n    ratio: {type: 'value', default: defaultRatio},\n    padding: {type: 'value', default: null},\n    mode: {type: 'value', default: 'squarify'}\n  });\n\n  this._layout = d3.layout.treemap();\n\n  this._output = {\n    'x':      'layout_x',\n    'y':      'layout_y',\n    'width':  'layout_width',\n    'height': 'layout_height',\n    'depth':  'layout_depth',\n  };\n  return this.mutates(true);\n}\n\nvar prototype = (Treemap.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Treemap;\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['treemap']);\n\n  // get variables\n  var layout = this._layout,\n      output = this._output,\n      sticky = this.param('sticky'),\n      parent = this.param('parent').accessor,\n      root = data.filter(function(d) { return parent(d) === null; })[0];\n\n  // layout.sticky resets state _regardless_ of input value\n  // so, we perform out own check first\n  if (layout.sticky() !== sticky) { layout.sticky(sticky); }\n\n  // configure layout\n  layout\n    .sort(dl.comparator(this.param('sort').field))\n    .children(this.param('children').accessor)\n    .value(this.param('field').accessor)\n    .size(this.param('size'))\n    .round(this.param('round'))\n    .ratio(this.param('ratio'))\n    .padding(this.param('padding'))\n    .mode(this.param('mode'))\n    .nodes(root);\n\n  // copy layout values to nodes\n  data.forEach(function(n) {\n    Tuple.set(n, output.x, n.x);\n    Tuple.set(n, output.y, n.y);\n    Tuple.set(n, output.width, n.dx);\n    Tuple.set(n, output.height, n.dy);\n    Tuple.set(n, output.depth, n.depth);\n  });\n\n  // return changeset\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  input.fields[output.width] = 1;\n  input.fields[output.height] = 1;\n  input.fields[output.depth] = 1;\n  return input;\n};\n\nmodule.exports = Treemap;\n\nTreemap.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Treemap transform\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"treemap\"]},\n    \"sort\": {\n      \"description\": \"A list of fields to use as sort criteria for sibling nodes.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": [\"-value\"]\n    },\n    \"children\": {\n      \"description\": \"The data field for the children node array\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"children\"\n    },\n    \"parent\": {\n      \"description\": \"The data field for the parent node\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"parent\"\n    },\n    \"field\": {\n      \"description\": \"The values to use to determine the area of each leaf-level treemap cell.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"mode\": {\n      \"description\": \"The treemap layout algorithm to use.\",\n      \"oneOf\": [\n        {\"enum\": [\"squarify\", \"slice\", \"dice\", \"slice-dice\"]},\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": \"squarify\"\n    },\n    \"size\": {\n      \"description\": \"The dimensions of the treemap layout\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n          \"minItems\": 2,\n          \"maxItems\": 2\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": [500, 500]\n    },\n    \"round\": {\n      \"description\": \"If true, treemap cell dimensions will be rounded to integer pixels.\",\n      \"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": true\n    },\n    \"sticky\": {\n      \"description\": \"If true, repeated runs of the treemap will use cached partition boundaries.\",\n      \"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": false\n    },\n    \"ratio\": {\n      \"description\": \"The target aspect ratio for the layout to optimize.\",\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": defaultRatio\n    },\n    \"padding\": {\n      \"oneOf\": [\n        {\"type\": \"number\"},\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n          \"minItems\": 4,\n          \"maxItems\": 4\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"description\": \"he padding (in pixels) to provide around internal nodes in the treemap.\"\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"x\": {\"type\": \"string\", \"default\": \"layout_x\"},\n        \"y\": {\"type\": \"string\", \"default\": \"layout_y\"},\n        \"width\": {\"type\": \"string\", \"default\": \"layout_width\"},\n        \"height\": {\"type\": \"string\", \"default\": \"layout_height\"},\n        \"depth\": {\"type\": \"string\", \"default\": \"layout_depth\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Treemap.js\n// module id = Aj/a\n// module chunks = 0","var dl = require('datalib'),\n    df = require('vega-dataflow'),\n    Node  = df.Node, // jshint ignore:line\n    Deps  = df.Dependencies,\n    Tuple = df.Tuple,\n    Collector = df.Collector,\n    log = require('vega-logging'),\n    Builder = require('./Builder'),\n    Scale = require('./Scale'),\n    parseAxes = require('../parse/axes'),\n    parseLegends = require('../parse/legends');\n\nfunction GroupBuilder() {\n  this._children = {};\n  this._scaler = null;\n  this._recursor = null;\n\n  this._scales = {};\n  this.scale = scale.bind(this);\n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar Types = GroupBuilder.TYPES = {\n  GROUP:  \"group\",\n  MARK:   \"mark\",\n  AXIS:   \"axis\",\n  LEGEND: \"legend\"\n};\n\nvar proto = (GroupBuilder.prototype = new Builder());\n\nproto.init = function(graph, def) {\n  var builder = this, name;\n\n  this._scaler = new Node(graph);\n\n  (def.scales||[]).forEach(function(s) {\n    s = builder.scale((name=s.name), new Scale(graph, s, builder));\n    builder.scale(name+\":prev\", s);\n    builder._scaler.addListener(s);  // Scales should be computed after group is encoded\n  });\n\n  this._recursor = new Node(graph);\n  this._recursor.evaluate = recurse.bind(this);\n\n  var scales = (def.axes||[]).reduce(function(acc, x) {\n    acc[x.scale] = 1;\n    return acc;\n  }, {});\n\n  scales = (def.legends||[]).reduce(function(acc, x) {\n    acc[x.size || x.shape || x.fill || x.stroke || x.opacity] = 1;\n    return acc;\n  }, scales);\n\n  this._recursor.dependency(Deps.SCALES, dl.keys(scales));\n\n  // We only need a collector for up-propagation of bounds calculation,\n  // so only GroupBuilders, and not regular Builders, have collectors.\n  this._collector = new Collector(graph);\n\n  return Builder.prototype.init.apply(this, arguments);\n};\n\nproto.evaluate = function() {\n  var output  = Builder.prototype.evaluate.apply(this, arguments),\n      model   = this._graph,\n      builder = this,\n      scales = this._scales,\n      items  = this._mark.items;\n\n  // If scales need to be reevaluated, we need to send all group items forward.\n  if (output.mod.length < items.length) {\n    var fullUpdate = dl.keys(scales).some(function(s) {\n      return scales[s].reevaluate(output);\n    });\n\n    if (!fullUpdate && this._def.axes) {\n      fullUpdate = this._def.axes.reduce(function(acc, a) {\n        return acc || output.scales[a.scale];\n      }, false);\n    }\n\n    if (!fullUpdate && this._def.legends) {\n      fullUpdate = this._def.legends.reduce(function(acc, l) {\n        return acc || output.scales[l.size || l.shape || l.fill || l.stroke];\n      }, false);\n    }\n\n    if (fullUpdate) {\n      output.mod = output.mod.concat(Tuple.idFilter(items,\n          output.mod, output.add, output.rem));\n    }\n  }\n\n  output.add.forEach(function(group) { buildGroup.call(builder, output, group); });\n  output.rem.forEach(function(group) { model.group(group._id, null); });\n  return output;\n};\n\nproto.pipeline = function() {\n  return [this, this._scaler, this._recursor, this._collector, this._bounder];\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  dl.keys(builder._children).forEach(function(group_id) {\n    builder._children[group_id].forEach(function(c) {\n      builder._recursor.removeListener(c.builder);\n      c.builder.disconnect();\n    });\n  });\n\n  builder._children = {};\n  return Builder.prototype.disconnect.call(this);\n};\n\nproto.child = function(name, group_id) {\n  var children = this._children[group_id],\n      i = 0, len = children.length,\n      child;\n\n  for (; i<len; ++i) {\n    child = children[i];\n    if (child.type == Types.MARK && child.builder._def.name == name) break;\n  }\n\n  return child.builder;\n};\n\nfunction recurse(input) {\n  var builder = this,\n      hasMarks = dl.array(this._def.marks).length > 0,\n      hasAxes = dl.array(this._def.axes).length > 0,\n      hasLegends = dl.array(this._def.legends).length > 0,\n      i, j, c, len, group, pipeline, def, inline = false;\n\n  for (i=0, len=input.add.length; i<len; ++i) {\n    group = input.add[i];\n    if (hasMarks) buildMarks.call(this, input, group);\n    if (hasAxes)  buildAxes.call(this, input, group);\n    if (hasLegends) buildLegends.call(this, input, group);\n  }\n\n  // Wire up new children builders in reverse to minimize graph rewrites.\n  for (i=input.add.length-1; i>=0; --i) {\n    group = input.add[i];\n    for (j=this._children[group._id].length-1; j>=0; --j) {\n      c = this._children[group._id][j];\n      c.builder.connect();\n      pipeline = c.builder.pipeline();\n      def = c.builder._def;\n\n      // This new child needs to be built during this propagation cycle.\n      // We could add its builder as a listener off the _recursor node,\n      // but try to inline it if we can to minimize graph dispatches.\n      inline = (def.type !== Types.GROUP);\n      inline = inline && (this._graph.data(c.from) !== undefined);\n      inline = inline && (pipeline[pipeline.length-1].listeners().length === 1); // Reactive geom source\n      inline = inline && (def.from && !def.from.mark); // Reactive geom target\n      c.inline = inline;\n\n      if (inline) this._graph.evaluate(input, c.builder);\n      else this._recursor.addListener(c.builder);\n    }\n  }\n\n  function removeTemp(c) {\n    if (c.type == Types.MARK && !c.inline &&\n        builder._graph.data(c.from) !== undefined) {\n      builder._recursor.removeListener(c.builder);\n    }\n  }\n\n  function updateAxis(a) {\n    var scale = a.scale();\n    if (!input.scales[scale.scaleName]) return;\n    a.reset().def();\n  }\n\n  function updateLegend(l) {\n    var scale = l.size() || l.shape() || l.fill() || l.stroke() || l.opacity();\n    if (!input.scales[scale.scaleName]) return;\n    l.reset().def();\n  }\n\n  for (i=0, len=input.mod.length; i<len; ++i) {\n    group = input.mod[i];\n\n    // Remove temporary connection for marks that draw from a source\n    if (hasMarks) builder._children[group._id].forEach(removeTemp);\n\n    // Update axis data defs\n    if (hasAxes) group.axes.forEach(updateAxis);\n\n    // Update legend data defs\n    if (hasLegends) group.legends.forEach(updateLegend);\n  }\n\n  function disconnectChildren(c) {\n    builder._recursor.removeListener(c.builder);\n    c.builder.disconnect();\n  }\n\n  for (i=0, len=input.rem.length; i<len; ++i) {\n    group = input.rem[i];\n    // For deleted groups, disconnect their children\n    builder._children[group._id].forEach(disconnectChildren);\n    delete builder._children[group._id];\n  }\n\n  return input;\n}\n\nfunction scale(name, x) {\n  var group = this, s = null;\n  if (arguments.length === 2) return (group._scales[name] = x, x);\n  while (s == null) {\n    s = group._scales[name];\n    group = group.mark ? group.mark.group : group._parent;\n    if (!group) break;\n  }\n  return s;\n}\n\nfunction buildGroup(input, group) {\n  log.debug(input, [\"building group\", group._id]);\n\n  group._scales = group._scales || {};\n  group.scale = scale.bind(group);\n\n  group.items = group.items || [];\n  this._children[group._id] = this._children[group._id] || [];\n\n  group.axes = group.axes || [];\n  group.axisItems = group.axisItems || [];\n\n  group.legends = group.legends || [];\n  group.legendItems = group.legendItems || [];\n\n  // Index group by ID to enable safe scoped scale lookups.\n  this._graph.group(group._id, group);\n}\n\nfunction buildMarks(input, group) {\n  log.debug(input, [\"building children marks #\"+group._id]);\n  var marks = this._def.marks,\n      mark, from, inherit, i, len, b;\n\n  for (i=0, len=marks.length; i<len; ++i) {\n    mark = marks[i];\n    from = mark.from || {};\n    inherit = group.datum._facetID;\n    group.items[i] = {group: group, _scaleRefs: {}};\n    b = (mark.type === Types.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(this._graph, mark, group.items[i], this, group._id, inherit);\n    this._children[group._id].push({\n      builder: b,\n      from: from.data || (from.mark ? (\"vg_\" + group._id + \"_\" + from.mark) : inherit),\n      type: Types.MARK\n    });\n  }\n}\n\nfunction buildAxes(input, group) {\n  var axes = group.axes,\n      axisItems = group.axisItems,\n      builder = this;\n\n  parseAxes(this._graph, this._def.axes, axes, group);\n  axes.forEach(function(a, i) {\n    var scale = builder._def.axes[i].scale,\n        def = a.def(),\n        b = null;\n\n    axisItems[i] = {group: group, axis: a, layer: def.layer};\n    b = (def.type === Types.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(builder._graph, def, axisItems[i], builder)\n      .dependency(Deps.SCALES, scale);\n    builder._children[group._id].push({ builder: b, type: Types.AXIS, scale: scale });\n  });\n}\n\nfunction buildLegends(input, group) {\n  var legends = group.legends,\n      legendItems = group.legendItems,\n      builder = this;\n\n  parseLegends(this._graph, this._def.legends, legends, group);\n  legends.forEach(function(l, i) {\n    var scale = l.size() || l.shape() || l.fill() || l.stroke() || l.opacity(),\n        def = l.def(),\n        b = null;\n\n    legendItems[i] = {group: group, legend: l};\n    b = (def.type === Types.GROUP) ? new GroupBuilder() : new Builder();\n    b.init(builder._graph, def, legendItems[i], builder)\n      .dependency(Deps.SCALES, scale);\n    builder._children[group._id].push({ builder: b, type: Types.LEGEND, scale: scale });\n  });\n}\n\nmodule.exports = GroupBuilder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/GroupBuilder.js\n// module id = BB2X\n// module chunks = 0","var df = require('vega-dataflow'),\n    log = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction Filter(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {test: {type: 'expr'}});\n\n  this._skip = {};\n  return this.router(true);\n}\n\nvar prototype = (Filter.prototype = Object.create(Transform.prototype));\nprototype.constructor = Filter;\n\nprototype.transform = function(input) {\n  log.debug(input, ['filtering']);\n\n  var output = df.ChangeSet.create(input),\n      skip = this._skip,\n      test = this.param('test');\n\n  input.rem.forEach(function(x) {\n    if (skip[x._id] !== 1) output.rem.push(x);\n    else skip[x._id] = 0;\n  });\n\n  input.add.forEach(function(x) {\n    if (test(x)) output.add.push(x);\n    else skip[x._id] = 1;\n  });\n\n  input.mod.forEach(function(x) {\n    var b = test(x),\n        s = (skip[x._id] === 1);\n    if (b && s) {\n      skip[x._id] = 0;\n      output.add.push(x);\n    } else if (b && !s) {\n      output.mod.push(x);\n    } else if (!b && s) {\n      // do nothing, keep skip true\n    } else { // !b && !s\n      output.rem.push(x);\n      skip[x._id] = 1;\n    }\n  });\n\n  return output;\n};\n\nmodule.exports = Filter;\n\nFilter.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Filter transform\",\n  \"description\": \"Filters elements from a data set to remove unwanted items.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"filter\"]},\n    \"test\": {\n      \"type\": \"string\",\n      \"description\": \"A string containing an expression (in JavaScript syntax) for the filter predicate.\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\", \"test\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Filter.js\n// module id = BO8z\n// module chunks = 0","module.exports = {\n  aggregate:    require('./Aggregate'),\n  bin:          require('./Bin'),\n  cross:        require('./Cross'),\n  countpattern: require('./CountPattern'),\n  linkpath:     require('./LinkPath'),\n  facet:        require('./Facet'),\n  filter:       require('./Filter'),\n  fold:         require('./Fold'),\n  force:        require('./Force'),\n  formula:      require('./Formula'),\n  geo:          require('./Geo'),\n  geopath:      require('./GeoPath'),\n  hierarchy:    require('./Hierarchy'),\n  impute:       require('./Impute'),\n  lookup:       require('./Lookup'),\n  pie:          require('./Pie'),\n  rank:         require('./Rank'),\n  sort:         require('./Sort'),\n  stack:        require('./Stack'),\n  treeify:      require('./Treeify'),\n  treemap:      require('./Treemap'),\n  voronoi:      require('./Voronoi'),\n  wordcloud:    require('./Wordcloud')\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/index.js\n// module id = C8zq\n// module chunks = 0","var d3 = require('d3'),\n    $ = require('vega').util.mutator;\n\nmodule.exports = {\n  init: function(el, param, spec) {\n    return (rewrite(param, spec), handle(el, param));\n  },\n  bind: function(param, view) {\n    param.dom.forEach(function(el) { el.__vega__ = view; });\n    view.onSignal(param.dom[0].name, function(k, v) { param.set(v); });\n  }\n};\n\n// spec re-write\n\nfunction rewrite(param, spec) {\n  // add signal to top-level if not defined\n  var sg = spec.signals || (spec.signals = []);\n  for (var i=0; i<sg.length; ++i) {\n    if (sg[i].name === param.signal) break;\n  }\n  if (i === sg.length) {\n    sg.push({\n      name: param.signal,\n      init: param.value\n    });\n  }\n\n  // replace values for re-write entries\n  (param.rewrite || []).forEach(function(path) {\n    $(path)(spec, {signal: param.signal});\n  });\n}\n\n// HTML output handlers\n\nfunction handle(el, param) {\n  var p = el.append('div')\n    .attr('class', 'vega-param');\n\n  p.append('span')\n    .attr('class', 'vega-param-name')\n    .text(param.name || param.signal);\n\n  var input = form;\n  switch (param.type) {\n    case 'checkbox': input = checkbox; break;\n    case 'select':   input = select; break;\n    case 'radio':    input = radio; break;\n    case 'range':    input = range; break;\n  }\n\n  return input(p, param);\n}\n\nfunction form(el, param) {\n  var fm = el.append('input')\n    .on('input', update);\n\n  for (var key in param) {\n    if (key === 'signal' || key === 'rewrite') continue;\n    fm.attr(key, param[key]);\n  }\n  fm.attr('name', param.signal);\n\n  var node = fm.node();\n  return {\n    dom: [node],\n    set: function(value) { node.value = value; }\n  };\n}\n\nfunction checkbox(el, param) {\n  var cb = el.append('input')\n    .on('change', function() { update.call(this, this.checked); })\n    .attr('type', 'checkbox')\n    .attr('name', param.signal)\n    .attr('checked', param.value || null)\n    .node();\n\n  return {\n    dom: [cb],\n    set: function(value) { cb.checked = !!value || null; }\n  };\n}\n\nfunction select(el, param) {\n  var sl = el.append('select')\n    .attr('name', param.signal)\n    .on('change', function() {\n      update.call(this, this.options[this.selectedIndex].__data__);\n    });\n\n  sl.selectAll('option')\n    .data(param.options)\n   .enter().append('option')\n    .attr('value', vg.util.identity)\n    .attr('selected', function(x) { return x === param.value || null; })\n    .text(vg.util.identity);\n  \n  var node = sl.node();\n  return {\n    dom: [node],\n    set: function(value) {\n      var idx = param.options.indexOf(value);\n      node.selectedIndex = idx;\n    }\n  };\n}\n\nfunction radio(el, param) {\n  var rg = el.append('span')\n    .attr('class', 'vega-param-radio');\n\n  var nodes = param.options.map(function(option) {\n    var id = 'vega-option-' + param.signal + '-' + option;\n\n    var rb = rg.append('input')\n      .datum(option)\n      .on('change', update)\n      .attr('id', id)\n      .attr('type', 'radio')\n      .attr('name', param.signal)\n      .attr('value', option)\n      .attr('checked', option === param.value || null);\n\n    rg.append('label')\n      .attr('for', id)\n      .text(option);\n\n    return rb.node();\n  });\n\n  return {\n    dom: nodes,\n    set: function(value) {\n      for (var i=0; i<nodes.length; ++i) {\n        if (nodes[i].value === value) {\n          nodes[i].checked = true;\n        }\n      }\n    }\n  };\n}\n\nfunction range(el, param) {\n  var val = param.value !== undefined ? param.value :\n    ((+param.max) + (+param.min)) / 2;\n\n  var rn = el.append('input')\n    .on('input', function() {\n      lbl.text(this.value);\n      update.call(this, +this.value);\n    })\n    .attr('type', 'range')\n    .attr('name', param.signal)\n    .attr('value', val)\n    .attr('min', param.min)\n    .attr('max', param.max)\n    .attr('step', param.step || vg.util.bins({\n      min: param.min,\n      max: param.max,\n      maxbins: 100\n    }).step);\n\n  var lbl = el.append('label')\n    .attr('class', 'vega-range')\n    .text(val);\n\n  var node = rn.node();\n  return {\n    dom: [node],\n    set: function(value) {\n      node.value = value;\n      lbl.text(value);\n    }\n  };\n}\n\nfunction update(value) {\n  if (value === undefined) value = this.__data__ || d3.event.target.value;\n  this.__vega__.signal(this.name, value).update();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@jupyterlab/vega2-extension/~/vega-embed/src/parameter.js\n// module id = CBR6\n// module chunks = 0","var d3 = require('d3'),\n    dl = require('datalib'),\n    Gradient = require('vega-scenegraph').Gradient,\n    parseProperties = require('../parse/properties'),\n    parseMark = require('../parse/mark'),\n    util = require('../util');\n\nfunction lgnd(model) {\n  var size  = null,\n      shape = null,\n      fill  = null,\n      stroke  = null,\n      opacity = null,\n      spacing = null,\n      values  = null,\n      formatString = null,\n      formatType   = null,\n      title  = null,\n      config = model.config().legend,\n      orient = config.orient,\n      offset = config.offset,\n      padding = config.padding,\n      tickArguments = [5],\n      legendStyle = {},\n      symbolStyle = {},\n      gradientStyle = {},\n      titleStyle = {},\n      labelStyle = {},\n      m = { // Legend marks as references for updates\n        titles:  {},\n        symbols: {},\n        labels:  {},\n        gradient: {}\n      };\n\n  var legend = {},\n      legendDef = {};\n\n  function reset() { legendDef.type = null; }\n  function ingest(d, i) { return {data: d, index: i}; }\n\n  legend.def = function() {\n    var scale = size || shape || fill || stroke || opacity;\n\n    if (!legendDef.type) {\n      legendDef = (scale===fill || scale===stroke) && !discrete(scale.type) ?\n        quantDef(scale) : ordinalDef(scale);\n    }\n    legendDef.orient = orient;\n    legendDef.offset = offset;\n    legendDef.padding = padding;\n    legendDef.margin = config.margin;\n    return legendDef;\n  };\n\n  function discrete(type) {\n    return type==='ordinal' || type==='quantize' ||\n           type==='quantile' || type==='threshold';\n  }\n\n  function ordinalDef(scale) {\n    var def = o_legend_def(size, shape, fill, stroke, opacity);\n\n    // generate data\n    var data = (values == null ?\n      (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) :\n      values).map(ingest);\n\n    var fmt = util.getTickFormat(scale, data.length, formatType, formatString);\n\n    // determine spacing between legend entries\n    var fs, range, offset, pad=5, domain = d3.range(data.length);\n    if (size) {\n      range = data.map(function(x) { return Math.sqrt(size(x.data)); });\n      offset = d3.max(range);\n      range = range.reduce(function(a,b,i,z) {\n          if (i > 0) a[i] = a[i-1] + z[i-1]/2 + pad;\n          return (a[i] += b/2, a); }, [0]).map(Math.round);\n    } else {\n      offset = Math.round(Math.sqrt(config.symbolSize));\n      range = spacing ||\n        (fs = labelStyle.fontSize) && (fs.value + pad) ||\n        (config.labelFontSize + pad);\n      range = domain.map(function(d,i) {\n        return Math.round(offset/2 + i*range);\n      });\n    }\n\n    // account for padding and title size\n    var sz = padding, ts;\n    if (title) {\n      ts = titleStyle.fontSize;\n      sz += 5 + ((ts && ts.value) || config.titleFontSize);\n    }\n    for (var i=0, n=range.length; i<n; ++i) range[i] += sz;\n\n    // build scale for label layout\n    def.scales = def.scales || [{}];\n    dl.extend(def.scales[0], {\n      name: 'legend',\n      type: 'ordinal',\n      points: true,\n      domain: domain,\n      range: range\n    });\n\n    // update legend def\n    var tdata = (title ? [title] : []).map(ingest);\n    data.forEach(function(d) {\n      d.label = fmt(d.data);\n      d.offset = offset;\n    });\n    def.marks[0].from = function() { return tdata; };\n    def.marks[1].from = function() { return data; };\n    def.marks[2].from = def.marks[1].from;\n\n    return def;\n  }\n\n  function o_legend_def(size, shape, fill, stroke, opacity) {\n    // setup legend marks\n    var titles  = dl.extend(m.titles, legendTitle(config)),\n        symbols = dl.extend(m.symbols, legendSymbols(config)),\n        labels  = dl.extend(m.labels, vLegendLabels(config));\n\n    // extend legend marks\n    legendSymbolExtend(symbols, size, shape, fill, stroke, opacity);\n\n    // add / override custom style properties\n    dl.extend(titles.properties.update,  titleStyle);\n    dl.extend(symbols.properties.update, symbolStyle);\n    dl.extend(labels.properties.update,  labelStyle);\n\n    // padding from legend border\n    titles.properties.enter.x.value += padding;\n    titles.properties.enter.y.value += padding;\n    labels.properties.enter.x.offset += padding + 1;\n    symbols.properties.enter.x.offset = padding + 1;\n    labels.properties.update.x.offset += padding + 1;\n    symbols.properties.update.x.offset = padding + 1;\n\n    dl.extend(legendDef, {\n      type: 'group',\n      interactive: false,\n      properties: {\n        enter: parseProperties(model, 'group', legendStyle),\n        legendPosition: {\n          encode: legendPosition.bind(null, config),\n          signals: [], scales:[], data: [], fields: []\n        }\n      }\n    });\n\n    legendDef.marks = [titles, symbols, labels].map(function(m) { return parseMark(model, m); });\n    return legendDef;\n  }\n\n  function quantDef(scale) {\n    var def = q_legend_def(scale),\n        dom = scale.domain(),\n        data  = (values == null ? dom : values).map(ingest),\n        width = (gradientStyle.width && gradientStyle.width.value) || config.gradientWidth,\n        fmt = util.getTickFormat(scale, data.length, formatType, formatString);\n\n    // build scale for label layout\n    def.scales = def.scales || [{}];\n    var layoutSpec = dl.extend(def.scales[0], {\n      name: 'legend',\n      type: scale.type,\n      round: true,\n      zero: false,\n      domain: [dom[0], dom[dom.length-1]],\n      range: [padding, width+padding]\n    });\n    if (scale.type==='pow') layoutSpec.exponent = scale.exponent();\n\n    // update legend def\n    var tdata = (title ? [title] : []).map(ingest);\n    data.forEach(function(d,i) {\n      d.label = fmt(d.data);\n      d.align = i==(data.length-1) ? 'right' : i===0 ? 'left' : 'center';\n    });\n\n    def.marks[0].from = function() { return tdata; };\n    def.marks[1].from = function() { return [1]; };\n    def.marks[2].from = function() { return data; };\n    return def;\n  }\n\n  function q_legend_def(scale) {\n    // setup legend marks\n    var titles = dl.extend(m.titles, legendTitle(config)),\n        gradient = dl.extend(m.gradient, legendGradient(config)),\n        labels = dl.extend(m.labels, hLegendLabels(config)),\n        grad = new Gradient();\n\n    // setup color gradient\n    var dom = scale.domain(),\n        min = dom[0],\n        max = dom[dom.length-1],\n        f = scale.copy().domain([min, max]).range([0,1]);\n\n    var stops = (scale.type !== 'linear' && scale.ticks) ?\n      scale.ticks.call(scale, 15) : dom;\n    if (min !== stops[0]) stops.unshift(min);\n    if (max !== stops[stops.length-1]) stops.push(max);\n\n    for (var i=0, n=stops.length; i<n; ++i) {\n      grad.stop(f(stops[i]), scale(stops[i]));\n    }\n    gradient.properties.enter.fill = {value: grad};\n\n    // add / override custom style properties\n    dl.extend(titles.properties.update, titleStyle);\n    dl.extend(gradient.properties.update, gradientStyle);\n    dl.extend(labels.properties.update, labelStyle);\n\n    // account for gradient size\n    var gp = gradient.properties, gh = gradientStyle.height,\n        hh = (gh && gh.value) || gp.enter.height.value;\n    labels.properties.enter.y.value = hh;\n    labels.properties.update.y.value = hh;\n\n    // account for title size as needed\n    if (title) {\n      var tp = titles.properties, fs = titleStyle.fontSize,\n          sz = 4 + ((fs && fs.value) || tp.enter.fontSize.value);\n      gradient.properties.enter.y.value += sz;\n      labels.properties.enter.y.value += sz;\n      gradient.properties.update.y.value += sz;\n      labels.properties.update.y.value += sz;\n    }\n\n    // padding from legend border\n    titles.properties.enter.x.value += padding;\n    titles.properties.enter.y.value += padding;\n    gradient.properties.enter.x.value += padding;\n    gradient.properties.enter.y.value += padding;\n    labels.properties.enter.y.value += padding;\n    gradient.properties.update.x.value += padding;\n    gradient.properties.update.y.value += padding;\n    labels.properties.update.y.value += padding;\n\n    dl.extend(legendDef, {\n      type: 'group',\n      interactive: false,\n      properties: {\n        enter: parseProperties(model, 'group', legendStyle),\n        legendPosition: {\n          encode: legendPosition.bind(null, config),\n          signals: [], scales: [], data: [], fields: []\n        }\n      }\n    });\n\n    legendDef.marks = [titles, gradient, labels].map(function(m) { return parseMark(model, m); });\n    return legendDef;\n  }\n\n  legend.size = function(x) {\n    if (!arguments.length) return size;\n    if (size !== x) { size = x; reset(); }\n    return legend;\n  };\n\n  legend.shape = function(x) {\n    if (!arguments.length) return shape;\n    if (shape !== x) { shape = x; reset(); }\n    return legend;\n  };\n\n  legend.fill = function(x) {\n    if (!arguments.length) return fill;\n    if (fill !== x) { fill = x; reset(); }\n    return legend;\n  };\n\n  legend.stroke = function(x) {\n    if (!arguments.length) return stroke;\n    if (stroke !== x) { stroke = x; reset(); }\n    return legend;\n  };\n\n  legend.opacity = function(x) {\n    if (!arguments.length) return opacity;\n    if (opacity !== x) { opacity = x; reset(); }\n    return legend;\n  };\n\n  legend.title = function(x) {\n    if (!arguments.length) return title;\n    if (title !== x) { title = x; reset(); }\n    return legend;\n  };\n\n  legend.format = function(x) {\n    if (!arguments.length) return formatString;\n    if (formatString !== x) {\n      formatString = x;\n      reset();\n    }\n    return legend;\n  };\n\n  legend.formatType = function(x) {\n    if (!arguments.length) return formatType;\n    if (formatType !== x) {\n      formatType = x;\n      reset();\n    }\n    return legend;\n  };\n\n  legend.spacing = function(x) {\n    if (!arguments.length) return spacing;\n    if (spacing !== +x) { spacing = +x; reset(); }\n    return legend;\n  };\n\n  legend.orient = function(x) {\n    if (!arguments.length) return orient;\n    orient = x in LEGEND_ORIENT ? x + '' : config.orient;\n    return legend;\n  };\n\n  legend.offset = function(x) {\n    if (!arguments.length) return offset;\n    offset = +x;\n    return legend;\n  };\n\n  legend.values = function(x) {\n    if (!arguments.length) return values;\n    values = x;\n    return legend;\n  };\n\n  legend.legendProperties = function(x) {\n    if (!arguments.length) return legendStyle;\n    legendStyle = x;\n    return legend;\n  };\n\n  legend.symbolProperties = function(x) {\n    if (!arguments.length) return symbolStyle;\n    symbolStyle = x;\n    return legend;\n  };\n\n  legend.gradientProperties = function(x) {\n    if (!arguments.length) return gradientStyle;\n    gradientStyle = x;\n    return legend;\n  };\n\n  legend.labelProperties = function(x) {\n    if (!arguments.length) return labelStyle;\n    labelStyle = x;\n    return legend;\n  };\n\n  legend.titleProperties = function(x) {\n    if (!arguments.length) return titleStyle;\n    titleStyle = x;\n    return legend;\n  };\n\n  legend.reset = function() {\n    reset();\n    return legend;\n  };\n\n  return legend;\n}\n\nvar LEGEND_ORIENT = {\n  'left': 'x1',\n  'right': 'x2',\n  'top-left': 'x1',\n  'top-right': 'x2',\n  'bottom-left': 'x1',\n  'bottom-right': 'x2'\n};\n\nfunction legendPosition(config, item, group, trans, db, signals, predicates) {\n  var o = trans ? {} : item, i,\n      def = item.mark.def,\n      offset = def.offset,\n      orient = def.orient,\n      pad = def.padding * 2,\n      ao  = orient === 'left' ? 0 : group.width,\n      lw  = ~~item.bounds.width() + (item.width ? 0 : pad),\n      lh  = ~~item.bounds.height() + (item.height ? 0 : pad),\n      pos = group._legendPositions ||\n        (group._legendPositions = {right: 0.5, left: 0.5});\n\n  o.x = 0.5;\n  o.y = 0.5;\n  o.width = lw;\n  o.height = lh;\n\n  if (orient === 'left' || orient === 'right') {\n    o.y = pos[orient];\n    pos[orient] += lh + def.margin;\n\n    // Calculate axis offset.\n    var axes  = group.axes,\n        items = group.axisItems,\n        bound = LEGEND_ORIENT[orient];\n    for (i=0; i<axes.length; ++i) {\n      if (axes[i].orient() === orient) {\n        ao = Math.max(ao, Math.abs(items[i].bounds[bound]));\n      }\n    }\n  }\n\n  switch (orient) {\n    case 'left':\n      o.x -= ao + offset + lw;\n      break;\n    case 'right':\n      o.x += ao + offset;\n      break;\n    case 'top-left':\n      o.x += offset;\n      o.y += offset;\n      break;\n    case 'top-right':\n      o.x += group.width - lw - offset;\n      o.y += offset;\n      break;\n    case 'bottom-left':\n      o.x += offset;\n      o.y += group.height - lh - offset;\n      break;\n    case 'bottom-right':\n      o.x += group.width - lw - offset;\n      o.y += group.height - lh - offset;\n      break;\n  }\n\n  var baseline = config.baseline,\n      totalHeight = 0;\n  for (i=0; i<group.legendItems.length; i++) {\n    var currItem = group.legendItems[i];\n    totalHeight += currItem.bounds.height() + (item.height ? 0 : pad);\n  }\n\n  if (baseline === 'middle') {\n    o.y += offset + (group.height / 2) - (totalHeight / 2);\n  } else if (baseline === 'bottom') {\n    o.y += offset + group.height - totalHeight;\n  }\n\n  if (trans) trans.interpolate(item, o);\n  var enc = item.mark.def.properties.enter.encode;\n  enc.call(enc, item, group, trans, db, signals, predicates);\n  return true;\n}\n\nfunction legendSymbolExtend(mark, size, shape, fill, stroke, opacity) {\n  var e = mark.properties.enter,\n      u = mark.properties.update;\n  if (size)    e.size    = u.size    = {scale: size.scaleName,   field: 'data'};\n  if (shape)   e.shape   = u.shape   = {scale: shape.scaleName,  field: 'data'};\n  if (fill)    e.fill    = u.fill    = {scale: fill.scaleName,   field: 'data'};\n  if (stroke)  e.stroke  = u.stroke  = {scale: stroke.scaleName, field: 'data'};\n  if (opacity) u.opacity = {scale: opacity.scaleName, field: 'data'};\n}\n\nfunction legendTitle(config) {\n  return {\n    type: 'text',\n    interactive: false,\n    key: 'data',\n    properties: {\n      enter: {\n        x: {value: 0},\n        y: {value: 0},\n        fill: {value: config.titleColor},\n        font: {value: config.titleFont},\n        fontSize: {value: config.titleFontSize},\n        fontWeight: {value: config.titleFontWeight},\n        baseline: {value: 'top'},\n        text: {field: 'data'},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction legendSymbols(config) {\n  return {\n    type: 'symbol',\n    interactive: false,\n    key: 'data',\n    properties: {\n      enter: {\n        x: {field: 'offset', mult: 0.5},\n        y: {scale: 'legend', field: 'index'},\n        shape: {value: config.symbolShape},\n        size: {value: config.symbolSize},\n        stroke: {value: config.symbolColor},\n        strokeWidth: {value: config.symbolStrokeWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: {\n        x: {field: 'offset', mult: 0.5},\n        y: {scale: 'legend', field: 'index'},\n        opacity: {value: 1}\n      }\n    }\n  };\n}\n\nfunction vLegendLabels(config) {\n  return {\n    type: 'text',\n    interactive: false,\n    key: 'data',\n    properties: {\n      enter: {\n        x: {field: 'offset', offset: 5},\n        y: {scale: 'legend', field: 'index'},\n        fill: {value: config.labelColor},\n        font: {value: config.labelFont},\n        fontSize: {value: config.labelFontSize},\n        align: {value: config.labelAlign},\n        baseline: {value: config.labelBaseline},\n        text: {field: 'label'},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: {\n        opacity: {value: 1},\n        x: {field: 'offset', offset: 5},\n        y: {scale: 'legend', field: 'index'},\n      }\n    }\n  };\n}\n\nfunction legendGradient(config) {\n  return {\n    type: 'rect',\n    interactive: false,\n    properties: {\n      enter: {\n        x: {value: 0},\n        y: {value: 0},\n        width: {value: config.gradientWidth},\n        height: {value: config.gradientHeight},\n        stroke: {value: config.gradientStrokeColor},\n        strokeWidth: {value: config.gradientStrokeWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: {\n        x: {value: 0},\n        y: {value: 0},\n        opacity: {value: 1}\n      }\n    }\n  };\n}\n\nfunction hLegendLabels(config) {\n  return {\n    type: 'text',\n    interactive: false,\n    key: 'data',\n    properties: {\n      enter: {\n        x: {scale: 'legend', field: 'data'},\n        y: {value: 20},\n        dy: {value: 2},\n        fill: {value: config.labelColor},\n        font: {value: config.labelFont},\n        fontSize: {value: config.labelFontSize},\n        align: {field: 'align'},\n        baseline: {value: 'top'},\n        text: {field: 'label'},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: {\n        x: {scale: 'legend', field: 'data'},\n        y: {value: 20},\n        opacity: {value: 1}\n      }\n    }\n  };\n}\n\nmodule.exports = lgnd;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/legend.js\n// module id = CXWl\n// module chunks = 0","var dl = require('datalib'),\n    parse = require('../parse'),\n    Scale = require('../scene/Scale'),\n    config = require('./config');\n\nfunction compile(module, opt, schema) {\n  var s = module.schema;\n  if (!s) return;\n  if (s.refs) dl.extend(schema.refs, s.refs);\n  if (s.defs) dl.extend(schema.defs, s.defs);\n}\n\nmodule.exports = function(opt) {\n  var schema = null;\n  opt = opt || {};\n\n  // Compile if we're not loading the schema from a URL.\n  // Load from a URL to extend the existing base schema.\n  if (opt.url) {\n    schema = dl.json(dl.extend({url: opt.url}, config.load));\n  } else {\n    schema = {\n      \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n      \"title\": \"Vega Visualization Specification Language\",\n      \"defs\": {},\n      \"refs\": {},\n      \"$ref\": \"#/defs/spec\"\n    };\n\n    dl.keys(parse).forEach(function(k) { compile(parse[k], opt, schema); });\n\n    // Scales aren't in the parser, add schema manually\n    compile(Scale, opt, schema);\n  }\n\n  // Extend schema to support custom mark properties or property sets.\n  if (opt.properties) dl.keys(opt.properties).forEach(function(k) {\n    schema.defs.propset.properties[k] = {\"$ref\": \"#/refs/\"+opt.properties[k]+\"Value\"};\n  });\n\n  if (opt.propertySets) dl.keys(opt.propertySets).forEach(function(k) {\n    schema.defs.mark.properties.properties.properties[k] = {\"$ref\": \"#/defs/propset\"};\n  });\n\n  return schema;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/core/schema.js\n// module id = CiyH\n// module chunks = 0","var dl = require('datalib'),\n    transforms = require('../transforms/index');\n\nfunction parseTransforms(model, def) {\n  var transform = transforms[def.type],\n      tx;\n\n  if (!transform) throw new Error('\"' + def.type + '\" is not a valid transformation');\n\n  tx = new transform(model);\n  // We want to rename output fields before setting any other properties,\n  // as subsequent properties may require output to be set (e.g. group by).\n  if(def.output) tx.output(def.output);\n\n  dl.keys(def).forEach(function(k) {\n    if(k === 'type' || k === 'output') return;\n    tx.param(k, def[k]);\n  });\n\n  return tx;\n}\n\nmodule.exports = parseTransforms;\n\nvar keys = dl.keys(transforms)\n  .filter(function(k) { return transforms[k].schema; });\n\nvar defs = keys.reduce(function(acc, k) {\n  return (acc[k+'Transform'] = transforms[k].schema, acc);\n}, {});\n\nparseTransforms.schema = {\n  \"defs\": dl.extend(defs, {\n    \"transform\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"oneOf\": keys.map(function(k) {\n          return {\"$ref\": \"#/defs/\"+k+\"Transform\"};\n        })\n      }\n    }\n  })\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/transforms.js\n// module id = DUWk\n// module chunks = 0","function size(item) {\n  return item.fontSize != null ? item.fontSize : 11;\n}\n\nmodule.exports = {\n  size: size,\n  value: function(s) {\n    return s != null ? String(s) : '';\n  },\n  font: function(item, quote) {\n    var font = item.font;\n    if (quote && font) {\n      font = String(font).replace(/\\\"/g, '\\'');\n    }\n    return '' +\n      (item.fontStyle ? item.fontStyle + ' ' : '') +\n      (item.fontVariant ? item.fontVariant + ' ' : '') +\n      (item.fontWeight ? item.fontWeight + ' ' : '') +\n      size(item) + 'px ' +\n      (font || 'sans-serif');\n  },\n  offset: function(item) {\n    // perform our own font baseline calculation\n    // why? not all browsers support SVG 1.1 'alignment-baseline' :(\n    var baseline = item.baseline,\n        h = size(item);\n    return Math.round(\n      baseline === 'top'    ?  0.93*h :\n      baseline === 'middle' ?  0.30*h :\n      baseline === 'bottom' ? -0.21*h : 0\n    );\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/util/text.js\n// module id = DbaP\n// module chunks = 0","module.exports = function(codegen) {\n\n  function fncall(name, args, cast, type) {\n    var obj = codegen(args[0]);\n    if (cast) {\n      obj = cast + '(' + obj + ')';\n      if (cast.lastIndexOf('new ', 0) === 0) obj = '(' + obj + ')';\n    }\n    return obj + '.' + name + (type < 0 ? '' : type === 0 ?\n      '()' :\n      '(' + args.slice(1).map(codegen).join(',') + ')');\n  }\n\n  function fn(name, cast, type) {\n    return function(args) {\n      return fncall(name, args, cast, type);\n    };\n  }\n\n  var DATE = 'new Date',\n      STRING = 'String',\n      REGEXP = 'RegExp';\n\n  return {\n    // MATH functions\n    'isNaN':    'isNaN',\n    'isFinite': 'isFinite',\n    'abs':      'Math.abs',\n    'acos':     'Math.acos',\n    'asin':     'Math.asin',\n    'atan':     'Math.atan',\n    'atan2':    'Math.atan2',\n    'ceil':     'Math.ceil',\n    'cos':      'Math.cos',\n    'exp':      'Math.exp',\n    'floor':    'Math.floor',\n    'log':      'Math.log',\n    'max':      'Math.max',\n    'min':      'Math.min',\n    'pow':      'Math.pow',\n    'random':   'Math.random',\n    'round':    'Math.round',\n    'sin':      'Math.sin',\n    'sqrt':     'Math.sqrt',\n    'tan':      'Math.tan',\n\n    'clamp': function(args) {\n      if (args.length < 3)\n        throw new Error('Missing arguments to clamp function.');\n      if (args.length > 3)\n        throw new Error('Too many arguments to clamp function.');\n      var a = args.map(codegen);\n      return 'Math.max('+a[1]+', Math.min('+a[2]+','+a[0]+'))';\n    },\n\n    // DATE functions\n    'now':             'Date.now',\n    'utc':             'Date.UTC',\n    'datetime':        DATE,\n    'date':            fn('getDate', DATE, 0),\n    'day':             fn('getDay', DATE, 0),\n    'year':            fn('getFullYear', DATE, 0),\n    'month':           fn('getMonth', DATE, 0),\n    'hours':           fn('getHours', DATE, 0),\n    'minutes':         fn('getMinutes', DATE, 0),\n    'seconds':         fn('getSeconds', DATE, 0),\n    'milliseconds':    fn('getMilliseconds', DATE, 0),\n    'time':            fn('getTime', DATE, 0),\n    'timezoneoffset':  fn('getTimezoneOffset', DATE, 0),\n    'utcdate':         fn('getUTCDate', DATE, 0),\n    'utcday':          fn('getUTCDay', DATE, 0),\n    'utcyear':         fn('getUTCFullYear', DATE, 0),\n    'utcmonth':        fn('getUTCMonth', DATE, 0),\n    'utchours':        fn('getUTCHours', DATE, 0),\n    'utcminutes':      fn('getUTCMinutes', DATE, 0),\n    'utcseconds':      fn('getUTCSeconds', DATE, 0),\n    'utcmilliseconds': fn('getUTCMilliseconds', DATE, 0),\n\n    // shared sequence functions\n    'length':      fn('length', null, -1),\n    'indexof':     fn('indexOf', null),\n    'lastindexof': fn('lastIndexOf', null),\n\n    // STRING functions\n    'parseFloat':  'parseFloat',\n    'parseInt':    'parseInt',\n    'upper':       fn('toUpperCase', STRING, 0),\n    'lower':       fn('toLowerCase', STRING, 0),\n    'slice':       fn('slice', STRING),\n    'substring':   fn('substring', STRING),\n    'replace':     fn('replace', STRING),\n\n    // REGEXP functions\n    'regexp':  REGEXP,\n    'test':    fn('test', REGEXP),\n\n    // Control Flow functions\n    'if': function(args) {\n        if (args.length < 3)\n          throw new Error('Missing arguments to if function.');\n        if (args.length > 3)\n          throw new Error('Too many arguments to if function.');\n        var a = args.map(codegen);\n        return '('+a[0]+'?'+a[1]+':'+a[2]+')';\n      }\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-expression/src/functions.js\n// module id = EmQ7\n// module chunks = 0","var BoundsContext = require('./BoundsContext'),\n    Bounds = require('./Bounds'),\n    canvas = require('./canvas'),\n    svg = require('./svg'),\n    text = require('./text'),\n    paths = require('../path'),\n    parse = paths.parse,\n    drawPath = paths.render,\n    areaPath = svg.path.area,\n    linePath = svg.path.line,\n    halfpi = Math.PI / 2,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(30 * Math.PI / 180),\n    g2D = null,\n    bc = BoundsContext();\n\nfunction context() {\n  return g2D || (g2D = canvas.instance(1,1).getContext('2d'));\n}\n\nfunction strokeBounds(o, bounds) {\n  if (o.stroke && o.opacity !== 0 && o.stokeOpacity !== 0) {\n    bounds.expand(o.strokeWidth != null ? o.strokeWidth : 1);\n  }\n  return bounds;\n}\n\nfunction pathBounds(o, path, bounds, x, y) {\n  if (path == null) {\n    bounds.set(0, 0, 0, 0);\n  } else {\n    drawPath(bc.bounds(bounds), path, x, y);\n    strokeBounds(o, bounds);\n  }\n  return bounds;\n}\n\nfunction path(o, bounds) {\n  var p = o.path ? o.pathCache || (o.pathCache = parse(o.path)) : null;\n  return pathBounds(o, p, bounds, o.x, o.y);\n}\n\nfunction area(mark, bounds) {\n  if (mark.items.length === 0) return bounds;\n  var items = mark.items,\n      item = items[0],\n      p = item.pathCache || (item.pathCache = parse(areaPath(items)));\n  return pathBounds(item, p, bounds);\n}\n\nfunction line(mark, bounds) {\n  if (mark.items.length === 0) return bounds;\n  var items = mark.items,\n      item = items[0],\n      p = item.pathCache || (item.pathCache = parse(linePath(items)));\n  return pathBounds(item, p, bounds);\n}\n\nfunction rect(o, bounds) {\n  var x, y;\n  return strokeBounds(o, bounds.set(\n    x = o.x || 0,\n    y = o.y || 0,\n    (x + o.width) || 0,\n    (y + o.height) || 0\n  ));\n}\n\nfunction image(o, bounds) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      w = o.width || 0,\n      h = o.height || 0;\n  x = x - (o.align === 'center' ? w/2 : (o.align === 'right' ? w : 0));\n  y = y - (o.baseline === 'middle' ? h/2 : (o.baseline === 'bottom' ? h : 0));\n  return bounds.set(x, y, x+w, y+h);\n}\n\nfunction rule(o, bounds) {\n  var x1, y1;\n  return strokeBounds(o, bounds.set(\n    x1 = o.x || 0,\n    y1 = o.y || 0,\n    o.x2 != null ? o.x2 : x1,\n    o.y2 != null ? o.y2 : y1\n  ));\n}\n\nfunction arc(o, bounds) {\n  var cx = o.x || 0,\n      cy = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - halfpi,\n      ea = (o.endAngle || 0) - halfpi,\n      xmin = Infinity, xmax = -Infinity,\n      ymin = Infinity, ymax = -Infinity,\n      a, i, n, x, y, ix, iy, ox, oy;\n\n  var angles = [sa, ea],\n      s = sa - (sa % halfpi);\n  for (i=0; i<4 && s<ea; ++i, s+=halfpi) {\n    angles.push(s);\n  }\n\n  for (i=0, n=angles.length; i<n; ++i) {\n    a = angles[i];\n    x = Math.cos(a); ix = ir*x; ox = or*x;\n    y = Math.sin(a); iy = ir*y; oy = or*y;\n    xmin = Math.min(xmin, ix, ox);\n    xmax = Math.max(xmax, ix, ox);\n    ymin = Math.min(ymin, iy, oy);\n    ymax = Math.max(ymax, iy, oy);\n  }\n\n  return strokeBounds(o, bounds.set(\n    cx + xmin,\n    cy + ymin,\n    cx + xmax,\n    cy + ymax\n  ));\n}\n\nfunction symbol(o, bounds) {\n  var size = o.size != null ? o.size : 100,\n      x = o.x || 0,\n      y = o.y || 0,\n      r, t, rx, ry;\n\n  switch (o.shape) {\n    case 'cross':\n      t = 3 * Math.sqrt(size / 5) / 2;\n      bounds.set(x-t, y-t, x+t, y+t);\n      break;\n\n    case 'diamond':\n      ry = Math.sqrt(size / (2 * tan30));\n      rx = ry * tan30;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case 'square':\n      t = Math.sqrt(size);\n      r = t / 2;\n      bounds.set(x-r, y-r, x+r, y+r);\n      break;\n\n    case 'triangle-down':\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    case 'triangle-up':\n      rx = Math.sqrt(size / sqrt3);\n      ry = rx * sqrt3 / 2;\n      bounds.set(x-rx, y-ry, x+rx, y+ry);\n      break;\n\n    default:\n      r = Math.sqrt(size/Math.PI);\n      bounds.set(x-r, y-r, x+r, y+r);\n  }\n\n  return strokeBounds(o, bounds);\n}\n\nfunction textMark(o, bounds, noRotate) {\n  var g = context(),\n      h = text.size(o),\n      a = o.align,\n      r = o.radius || 0,\n      x = (o.x || 0),\n      y = (o.y || 0),\n      dx = (o.dx || 0),\n      dy = (o.dy || 0) + text.offset(o) - Math.round(0.8*h), // use 4/5 offset\n      w, t;\n\n  if (r) {\n    t = (o.theta || 0) - Math.PI/2;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  // horizontal alignment\n  g.font = text.font(o);\n  w = g.measureText(text.value(o.text)).width;\n  if (a === 'center') {\n    dx -= (w / 2);\n  } else if (a === 'right') {\n    dx -= w;\n  } else {\n    // left by default, do nothing\n  }\n\n  bounds.set(dx+=x, dy+=y, dx+w, dy+h);\n  if (o.angle && !noRotate) {\n    bounds.rotate(o.angle*Math.PI/180, x, y);\n  }\n  return bounds.expand(noRotate ? 0 : 1);\n}\n\nfunction group(g, bounds, includeLegends) {\n  var axes = g.axisItems || [],\n      items = g.items || [],\n      legends = g.legendItems || [],\n      j, m;\n\n  if (!g.clip) {\n    for (j=0, m=axes.length; j<m; ++j) {\n      bounds.union(axes[j].bounds);\n    }\n    for (j=0, m=items.length; j<m; ++j) {\n      if (items[j].bounds) bounds.union(items[j].bounds);\n    }\n    if (includeLegends) {\n      for (j=0, m=legends.length; j<m; ++j) {\n        bounds.union(legends[j].bounds);\n      }\n    }\n  }\n  if (g.clip || g.width || g.height) {\n    strokeBounds(g, bounds\n      .add(0, 0)\n      .add(g.width || 0, g.height || 0));\n  }\n  return bounds.translate(g.x || 0, g.y || 0);\n}\n\nvar methods = {\n  group:  group,\n  symbol: symbol,\n  image:  image,\n  rect:   rect,\n  rule:   rule,\n  arc:    arc,\n  text:   textMark,\n  path:   path,\n  area:   area,\n  line:   line\n};\nmethods.area.nest = true;\nmethods.line.nest = true;\n\nfunction itemBounds(item, func, opt) {\n  var type = item.mark.marktype;\n  func = func || methods[type];\n  if (func.nest) item = item.mark;\n\n  var curr = item.bounds,\n      prev = item['bounds:prev'] || (item['bounds:prev'] = new Bounds());\n\n  if (curr) {\n    prev.clear().union(curr);\n    curr.clear();\n  } else {\n    item.bounds = new Bounds();\n  }\n  func(item, item.bounds, opt);\n  if (!curr) prev.clear().union(item.bounds);\n  return item.bounds;\n}\n\nvar DUMMY_ITEM = {mark: null};\n\nfunction markBounds(mark, bounds, opt) {\n  var type  = mark.marktype,\n      func  = methods[type],\n      items = mark.items,\n      hasi  = items && items.length,\n      i, n, o, b;\n\n  if (func.nest) {\n    o = hasi ? items[0]\n      : (DUMMY_ITEM.mark = mark, DUMMY_ITEM); // no items, so fake it\n    b = itemBounds(o, func, opt);\n    bounds = bounds && bounds.union(b) || b;\n    return bounds;\n  }\n\n  bounds = bounds || mark.bounds && mark.bounds.clear() || new Bounds();\n  if (hasi) {  \n    for (i=0, n=items.length; i<n; ++i) {\n      bounds.union(itemBounds(items[i], func, opt));\n    }\n  }\n  return (mark.bounds = bounds);\n}\n\nmodule.exports = {\n  mark:  markBounds,\n  item:  itemBounds,\n  text:  textMark,\n  group: group\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/util/bound.js\n// module id = F3Ub\n// module chunks = 0","\"use strict\";\nvar config_1 = require('./config');\nvar encoding_1 = require('./encoding');\nvar mark_1 = require('./mark');\nvar stack_1 = require('./stack');\nvar channel_1 = require('./channel');\nvar vlEncoding = require('./encoding');\nvar util_1 = require('./util');\nfunction isFacetSpec(spec) {\n    return spec['facet'] !== undefined;\n}\nexports.isFacetSpec = isFacetSpec;\nfunction isExtendedUnitSpec(spec) {\n    if (isSomeUnitSpec(spec)) {\n        var hasRow = encoding_1.has(spec.encoding, channel_1.ROW);\n        var hasColumn = encoding_1.has(spec.encoding, channel_1.COLUMN);\n        return hasRow || hasColumn;\n    }\n    return false;\n}\nexports.isExtendedUnitSpec = isExtendedUnitSpec;\nfunction isUnitSpec(spec) {\n    if (isSomeUnitSpec(spec)) {\n        return !isExtendedUnitSpec(spec);\n    }\n    return false;\n}\nexports.isUnitSpec = isUnitSpec;\nfunction isSomeUnitSpec(spec) {\n    return spec['mark'] !== undefined;\n}\nexports.isSomeUnitSpec = isSomeUnitSpec;\nfunction isLayerSpec(spec) {\n    return spec['layers'] !== undefined;\n}\nexports.isLayerSpec = isLayerSpec;\nfunction normalize(spec) {\n    if (isExtendedUnitSpec(spec)) {\n        return normalizeExtendedUnitSpec(spec);\n    }\n    if (isUnitSpec(spec)) {\n        return normalizeUnitSpec(spec);\n    }\n    return spec;\n}\nexports.normalize = normalize;\nfunction normalizeExtendedUnitSpec(spec) {\n    var hasRow = encoding_1.has(spec.encoding, channel_1.ROW);\n    var hasColumn = encoding_1.has(spec.encoding, channel_1.COLUMN);\n    var encoding = util_1.duplicate(spec.encoding);\n    delete encoding.column;\n    delete encoding.row;\n    return util_1.extend(spec.name ? { name: spec.name } : {}, spec.description ? { description: spec.description } : {}, { data: spec.data }, spec.transform ? { transform: spec.transform } : {}, {\n        facet: util_1.extend(hasRow ? { row: spec.encoding.row } : {}, hasColumn ? { column: spec.encoding.column } : {}),\n        spec: normalizeUnitSpec({\n            mark: spec.mark,\n            encoding: encoding\n        })\n    }, spec.config ? { config: spec.config } : {});\n}\nexports.normalizeExtendedUnitSpec = normalizeExtendedUnitSpec;\nfunction normalizeUnitSpec(spec) {\n    var config = spec.config;\n    var overlayConfig = config && config.overlay;\n    var overlayWithLine = overlayConfig && spec.mark === mark_1.AREA &&\n        util_1.contains([config_1.AreaOverlay.LINEPOINT, config_1.AreaOverlay.LINE], overlayConfig.area);\n    var overlayWithPoint = overlayConfig && ((overlayConfig.line && spec.mark === mark_1.LINE) ||\n        (overlayConfig.area === config_1.AreaOverlay.LINEPOINT && spec.mark === mark_1.AREA));\n    if (spec.mark === mark_1.ERRORBAR) {\n        return normalizeErrorBarUnitSpec(spec);\n    }\n    if (encoding_1.isRanged(spec.encoding)) {\n        return normalizeRangedUnitSpec(spec);\n    }\n    if (isStacked(spec)) {\n        return spec;\n    }\n    if (overlayWithPoint || overlayWithLine) {\n        return normalizeOverlay(spec, overlayWithPoint, overlayWithLine);\n    }\n    return spec;\n}\nexports.normalizeUnitSpec = normalizeUnitSpec;\nfunction normalizeRangedUnitSpec(spec) {\n    if (spec.encoding) {\n        var hasX = encoding_1.has(spec.encoding, channel_1.X);\n        var hasY = encoding_1.has(spec.encoding, channel_1.Y);\n        var hasX2 = encoding_1.has(spec.encoding, channel_1.X2);\n        var hasY2 = encoding_1.has(spec.encoding, channel_1.Y2);\n        if ((hasX2 && !hasX) || (hasY2 && !hasY)) {\n            var normalizedSpec = util_1.duplicate(spec);\n            if (hasX2 && !hasX) {\n                normalizedSpec.encoding.x = normalizedSpec.encoding.x2;\n                delete normalizedSpec.encoding.x2;\n            }\n            if (hasY2 && !hasY) {\n                normalizedSpec.encoding.y = normalizedSpec.encoding.y2;\n                delete normalizedSpec.encoding.y2;\n            }\n            return normalizedSpec;\n        }\n    }\n    return spec;\n}\nexports.normalizeRangedUnitSpec = normalizeRangedUnitSpec;\nfunction normalizeErrorBarUnitSpec(spec) {\n    var layerSpec = util_1.extend(spec.name ? { name: spec.name } : {}, spec.description ? { description: spec.description } : {}, spec.data ? { data: spec.data } : {}, spec.transform ? { transform: spec.transform } : {}, spec.config ? { config: spec.config } : {}, { layers: [] });\n    if (!spec.encoding) {\n        return layerSpec;\n    }\n    if (spec.mark === mark_1.ERRORBAR) {\n        var ruleSpec = {\n            mark: mark_1.RULE,\n            encoding: util_1.extend(spec.encoding.x ? { x: util_1.duplicate(spec.encoding.x) } : {}, spec.encoding.y ? { y: util_1.duplicate(spec.encoding.y) } : {}, spec.encoding.x2 ? { x2: util_1.duplicate(spec.encoding.x2) } : {}, spec.encoding.y2 ? { y2: util_1.duplicate(spec.encoding.y2) } : {}, {})\n        };\n        var lowerTickSpec = {\n            mark: mark_1.TICK,\n            encoding: util_1.extend(spec.encoding.x ? { x: util_1.duplicate(spec.encoding.x) } : {}, spec.encoding.y ? { y: util_1.duplicate(spec.encoding.y) } : {}, spec.encoding.size ? { size: util_1.duplicate(spec.encoding.size) } : {}, {})\n        };\n        var upperTickSpec = {\n            mark: mark_1.TICK,\n            encoding: util_1.extend({\n                x: spec.encoding.x2 ? util_1.duplicate(spec.encoding.x2) : util_1.duplicate(spec.encoding.x),\n                y: spec.encoding.y2 ? util_1.duplicate(spec.encoding.y2) : util_1.duplicate(spec.encoding.y)\n            }, spec.encoding.size ? { size: util_1.duplicate(spec.encoding.size) } : {})\n        };\n        layerSpec.layers.push(normalizeUnitSpec(ruleSpec));\n        layerSpec.layers.push(normalizeUnitSpec(lowerTickSpec));\n        layerSpec.layers.push(normalizeUnitSpec(upperTickSpec));\n    }\n    return layerSpec;\n}\nexports.normalizeErrorBarUnitSpec = normalizeErrorBarUnitSpec;\nfunction normalizeOverlay(spec, overlayWithPoint, overlayWithLine) {\n    var outerProps = ['name', 'description', 'data', 'transform'];\n    var baseSpec = util_1.omit(spec, outerProps.concat('config'));\n    var baseConfig = util_1.duplicate(spec.config);\n    delete baseConfig.overlay;\n    var layerSpec = util_1.extend(util_1.pick(spec, outerProps), { layers: [baseSpec] }, util_1.keys(baseConfig).length > 0 ? { config: baseConfig } : {});\n    if (overlayWithLine) {\n        var lineSpec = util_1.duplicate(baseSpec);\n        lineSpec.mark = mark_1.LINE;\n        var markConfig = util_1.extend({}, config_1.defaultOverlayConfig.lineStyle, spec.config.overlay.lineStyle);\n        if (util_1.keys(markConfig).length > 0) {\n            lineSpec.config = { mark: markConfig };\n        }\n        layerSpec.layers.push(lineSpec);\n    }\n    if (overlayWithPoint) {\n        var pointSpec = util_1.duplicate(baseSpec);\n        pointSpec.mark = mark_1.POINT;\n        var markConfig = util_1.extend({}, config_1.defaultOverlayConfig.pointStyle, spec.config.overlay.pointStyle);\n        ;\n        if (util_1.keys(markConfig).length > 0) {\n            pointSpec.config = { mark: markConfig };\n        }\n        layerSpec.layers.push(pointSpec);\n    }\n    return layerSpec;\n}\nexports.normalizeOverlay = normalizeOverlay;\nfunction alwaysNoOcclusion(spec) {\n    return vlEncoding.isAggregate(spec.encoding);\n}\nexports.alwaysNoOcclusion = alwaysNoOcclusion;\nfunction fieldDefs(spec) {\n    return vlEncoding.fieldDefs(spec.encoding);\n}\nexports.fieldDefs = fieldDefs;\n;\nfunction getCleanSpec(spec) {\n    return spec;\n}\nexports.getCleanSpec = getCleanSpec;\nfunction isStacked(spec) {\n    return stack_1.stack(spec.mark, spec.encoding, spec.config) !== null;\n}\nexports.isStacked = isStacked;\nfunction transpose(spec) {\n    var oldenc = spec.encoding;\n    var encoding = util_1.duplicate(spec.encoding);\n    encoding.x = oldenc.y;\n    encoding.y = oldenc.x;\n    encoding.row = oldenc.column;\n    encoding.column = oldenc.row;\n    spec.encoding = encoding;\n    return spec;\n}\nexports.transpose = transpose;\n//# sourceMappingURL=spec.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/spec.js\n// module id = F9eC\n// module chunks = 0","function drawPathOne(path, g, o, items) {\n  if (path(g, items)) return;\n\n  var opac = o.opacity == null ? 1 : o.opacity;\n  if (opac===0) return;\n\n  if (o.fill && fill(g, o, opac)) { g.fill(); }\n  if (o.stroke && stroke(g, o, opac)) { g.stroke(); }\n}\n\nfunction drawPathAll(path, g, scene, bounds) {\n  var i, len, item;\n  for (i=0, len=scene.items.length; i<len; ++i) {\n    item = scene.items[i];\n    if (!bounds || bounds.intersects(item.bounds)) {\n      drawPathOne(path, g, item, item);\n    }\n  }\n}\n\nfunction drawAll(pathFunc) {\n  return function(g, scene, bounds) {\n    drawPathAll(pathFunc, g, scene, bounds);\n  };\n}\n\nfunction drawOne(pathFunc) {\n  return function(g, scene, bounds) {\n    if (!scene.items.length) return;\n    if (!bounds || bounds.intersects(scene.bounds)) {\n      drawPathOne(pathFunc, g, scene.items[0], scene.items);\n    }\n  };\n}\n\nvar trueFunc = function() { return true; };\n\nfunction pick(test) {\n  if (!test) test = trueFunc;\n\n  return function(g, scene, x, y, gx, gy) {\n    if (!scene.items.length) return null;\n\n    var o, b, i;\n\n    if (g.pixelratio != null && g.pixelratio !== 1) {\n      x *= g.pixelratio;\n      y *= g.pixelratio;\n    }\n\n    for (i=scene.items.length; --i >= 0;) {\n      o = scene.items[i]; b = o.bounds;\n      // first hit test against bounding box\n      if ((b && !b.contains(gx, gy)) || !b) continue;\n      // if in bounding box, perform more careful test\n      if (test(g, o, x, y, gx, gy)) return o;\n    }\n    return null;\n  };\n}\n\nfunction testPath(path, filled) {\n  return function(g, o, x, y) {\n    var item = Array.isArray(o) ? o[0] : o,\n        fill = (filled == null) ? item.fill : filled,\n        stroke = item.stroke && g.isPointInStroke, lw, lc;\n\n    if (stroke) {\n      lw = item.strokeWidth;\n      lc = item.strokeCap;\n      g.lineWidth = lw != null ? lw : 1;\n      g.lineCap   = lc != null ? lc : 'butt';\n    }\n\n    return path(g, o) ? false :\n      (fill && g.isPointInPath(x, y)) ||\n      (stroke && g.isPointInStroke(x, y));\n  };\n}\n\nfunction pickPath(path) {\n  return pick(testPath(path));\n}\n\nfunction fill(g, o, opacity) {\n  opacity *= (o.fillOpacity==null ? 1 : o.fillOpacity);\n  if (opacity > 0) {\n    g.globalAlpha = opacity;\n    g.fillStyle = color(g, o, o.fill);\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction stroke(g, o, opacity) {\n  var lw = (lw = o.strokeWidth) != null ? lw : 1, lc;\n  if (lw <= 0) return false;\n\n  opacity *= (o.strokeOpacity==null ? 1 : o.strokeOpacity);\n  if (opacity > 0) {\n    g.globalAlpha = opacity;\n    g.strokeStyle = color(g, o, o.stroke);\n    g.lineWidth = lw;\n    g.lineCap = (lc = o.strokeCap) != null ? lc : 'butt';\n    g.vgLineDash(o.strokeDash || null);\n    g.vgLineDashOffset(o.strokeDashOffset || 0);\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction color(g, o, value) {\n  return (value.id) ?\n    gradient(g, value, o.bounds) :\n    value;\n}\n\nfunction gradient(g, p, b) {\n  var w = b.width(),\n      h = b.height(),\n      x1 = b.x1 + p.x1 * w,\n      y1 = b.y1 + p.y1 * h,\n      x2 = b.x1 + p.x2 * w,\n      y2 = b.y1 + p.y2 * h,\n      grad = g.createLinearGradient(x1, y1, x2, y2),\n      stop = p.stops,\n      i, n;\n\n  for (i=0, n=stop.length; i<n; ++i) {\n    grad.addColorStop(stop[i].offset, stop[i].color);\n  }\n  return grad;\n}\n\nmodule.exports = {\n  drawOne:  drawOne,\n  drawAll:  drawAll,\n  pick:     pick,\n  pickPath: pickPath,\n  testPath: testPath,\n  stroke:   stroke,\n  fill:     fill,\n  color:    color,\n  gradient: gradient\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/render/canvas/marks/util.js\n// module id = FF9f\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('./channel');\nfunction autoMaxBins(channel) {\n    switch (channel) {\n        case channel_1.ROW:\n        case channel_1.COLUMN:\n        case channel_1.SIZE:\n        case channel_1.SHAPE:\n            return 6;\n        default:\n            return 10;\n    }\n}\nexports.autoMaxBins = autoMaxBins;\n//# sourceMappingURL=bin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/bin.js\n// module id = FmT5\n// module chunks = 0","var gradient_id = 0;\n\nfunction Gradient(type) {\n  this.id = 'gradient_' + (gradient_id++);\n  this.type = type || 'linear';\n  this.stops = [];\n  this.x1 = 0;\n  this.x2 = 1;\n  this.y1 = 0;\n  this.y2 = 0;\n}\n\nvar prototype = Gradient.prototype;\n\nprototype.stop = function(offset, color) {\n  this.stops.push({\n    offset: offset,\n    color: color\n  });\n  return this;\n};\n\nmodule.exports = Gradient;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/util/Gradient.js\n// module id = Fv98\n// module chunks = 0","\"use strict\";\n(function (ScaleType) {\n    ScaleType[ScaleType[\"LINEAR\"] = 'linear'] = \"LINEAR\";\n    ScaleType[ScaleType[\"LOG\"] = 'log'] = \"LOG\";\n    ScaleType[ScaleType[\"POW\"] = 'pow'] = \"POW\";\n    ScaleType[ScaleType[\"SQRT\"] = 'sqrt'] = \"SQRT\";\n    ScaleType[ScaleType[\"QUANTILE\"] = 'quantile'] = \"QUANTILE\";\n    ScaleType[ScaleType[\"QUANTIZE\"] = 'quantize'] = \"QUANTIZE\";\n    ScaleType[ScaleType[\"ORDINAL\"] = 'ordinal'] = \"ORDINAL\";\n    ScaleType[ScaleType[\"TIME\"] = 'time'] = \"TIME\";\n    ScaleType[ScaleType[\"UTC\"] = 'utc'] = \"UTC\";\n})(exports.ScaleType || (exports.ScaleType = {}));\nvar ScaleType = exports.ScaleType;\n(function (NiceTime) {\n    NiceTime[NiceTime[\"SECOND\"] = 'second'] = \"SECOND\";\n    NiceTime[NiceTime[\"MINUTE\"] = 'minute'] = \"MINUTE\";\n    NiceTime[NiceTime[\"HOUR\"] = 'hour'] = \"HOUR\";\n    NiceTime[NiceTime[\"DAY\"] = 'day'] = \"DAY\";\n    NiceTime[NiceTime[\"WEEK\"] = 'week'] = \"WEEK\";\n    NiceTime[NiceTime[\"MONTH\"] = 'month'] = \"MONTH\";\n    NiceTime[NiceTime[\"YEAR\"] = 'year'] = \"YEAR\";\n})(exports.NiceTime || (exports.NiceTime = {}));\nvar NiceTime = exports.NiceTime;\nexports.defaultScaleConfig = {\n    round: true,\n    textBandWidth: 90,\n    bandSize: 21,\n    padding: 1,\n    useRawDomain: false,\n    opacity: [0.3, 0.8],\n    nominalColorRange: 'category10',\n    sequentialColorRange: ['#AFC6A3', '#09622A'],\n    shapeRange: 'shapes',\n    fontSizeRange: [8, 40],\n    ruleSizeRange: [1, 5],\n    tickSizeRange: [1, 20]\n};\nexports.defaultFacetScaleConfig = {\n    round: true,\n    padding: 16\n};\n//# sourceMappingURL=scale.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/scale.js\n// module id = Fw/k\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar common_1 = require('../common');\nvar fielddef_1 = require('../../fielddef');\nvar type_1 = require('../../type');\nvar text;\n(function (text_1) {\n    function markType() {\n        return 'text';\n    }\n    text_1.markType = markType;\n    function background(model) {\n        return {\n            x: { value: 0 },\n            y: { value: 0 },\n            width: { field: { group: 'width' } },\n            height: { field: { group: 'height' } },\n            fill: {\n                scale: model.scaleName(channel_1.COLOR),\n                field: model.field(channel_1.COLOR, model.fieldDef(channel_1.COLOR).type === type_1.ORDINAL ? { prefn: 'rank_' } : {})\n            }\n        };\n    }\n    text_1.background = background;\n    function properties(model) {\n        var p = {};\n        common_1.applyMarkConfig(p, model, ['angle', 'align', 'baseline', 'dx', 'dy', 'font', 'fontWeight',\n            'fontStyle', 'radius', 'theta', 'text']);\n        var config = model.config();\n        var textFieldDef = model.fieldDef(channel_1.TEXT);\n        p.x = x(model.encoding().x, model.scaleName(channel_1.X), config, textFieldDef);\n        p.y = y(model.encoding().y, model.scaleName(channel_1.Y), config);\n        p.fontSize = size(model.encoding().size, model.scaleName(channel_1.SIZE), config);\n        p.text = text(model.encoding().text, model.scaleName(channel_1.TEXT), config);\n        if (model.config().mark.applyColorToBackground && !model.has(channel_1.X) && !model.has(channel_1.Y)) {\n            p.fill = { value: 'black' };\n            var opacity = model.config().mark.opacity;\n            if (opacity) {\n                p.opacity = { value: opacity };\n            }\n            ;\n        }\n        else {\n            common_1.applyColorAndOpacity(p, model);\n        }\n        return p;\n    }\n    text_1.properties = properties;\n    function x(xFieldDef, scaleName, config, textFieldDef) {\n        if (xFieldDef) {\n            if (xFieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(xFieldDef, { binSuffix: '_mid' })\n                };\n            }\n        }\n        if (textFieldDef && textFieldDef.type === type_1.QUANTITATIVE) {\n            return { field: { group: 'width' }, offset: -5 };\n        }\n        else {\n            return { value: config.scale.textBandWidth / 2 };\n        }\n    }\n    function y(yFieldDef, scaleName, config) {\n        if (yFieldDef) {\n            if (yFieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(yFieldDef, { binSuffix: '_mid' })\n                };\n            }\n        }\n        return { value: config.scale.bandSize / 2 };\n    }\n    function size(sizeFieldDef, scaleName, config) {\n        if (sizeFieldDef) {\n            if (sizeFieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(sizeFieldDef)\n                };\n            }\n            if (sizeFieldDef.value) {\n                return { value: sizeFieldDef.value };\n            }\n        }\n        return { value: config.mark.fontSize };\n    }\n    function text(textFieldDef, scaleName, config) {\n        if (textFieldDef) {\n            if (textFieldDef.field) {\n                if (type_1.QUANTITATIVE === textFieldDef.type) {\n                    var format = common_1.numberFormat(textFieldDef, config.mark.format, config);\n                    var filter = 'number' + (format ? ':\\'' + format + '\\'' : '');\n                    return {\n                        template: '{{' + fielddef_1.field(textFieldDef, { datum: true }) + ' | ' + filter + '}}'\n                    };\n                }\n                else if (type_1.TEMPORAL === textFieldDef.type) {\n                    return {\n                        template: common_1.timeTemplate(fielddef_1.field(textFieldDef, { datum: true }), textFieldDef.timeUnit, config.mark.format, config.mark.shortTimeLabels, config)\n                    };\n                }\n                else {\n                    return { field: textFieldDef.field };\n                }\n            }\n            else if (textFieldDef.value) {\n                return { value: textFieldDef.value };\n            }\n        }\n        return { value: config.mark.text };\n    }\n})(text = exports.text || (exports.text = {}));\n//# sourceMappingURL=text.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/mark/text.js\n// module id = G+HP\n// module chunks = 0","var load = require('datalib/src/import/load');\n\nfunction ImageLoader(loadConfig) {\n  this._pending = 0;\n  this._config = loadConfig || ImageLoader.Config; \n}\n\n// Overridable global default load configuration\nImageLoader.Config = null;\n\nvar prototype = ImageLoader.prototype;\n\nprototype.pending = function() {\n  return this._pending;\n};\n\nprototype.params = function(uri) {\n  var p = {url: uri}, k;\n  for (k in this._config) { p[k] = this._config[k]; }\n  return p;\n};\n\nprototype.imageURL = function(uri) {\n  return load.sanitizeUrl(this.params(uri));\n};\n\nfunction browser(uri, callback) {\n  var url = load.sanitizeUrl(this.params(uri));\n  if (!url) { // error\n    if (callback) callback(uri, null);\n    return null;\n  }\n\n  var loader = this,\n      image = new Image();\n\n  loader._pending += 1;\n\n  image.onload = function() {\n    loader._pending -= 1;\n    image.loaded = true;\n    if (callback) callback(null, image);\n  };\n  image.src = url;\n\n  return image;\n}\n\nfunction server(uri, callback) {\n  var loader = this,\n      image = new (require('canvas').Image)();\n\n  loader._pending += 1;\n\n  load(this.params(uri), function(err, data) {\n    loader._pending -= 1;\n    if (err) {\n      if (callback) callback(err, null);\n      return null;\n    }\n    image.src = data;\n    image.loaded = true;\n    if (callback) callback(null, image);\n  });\n\n  return image;\n}\n\nprototype.loadImage = function(uri, callback) {\n  return load.useXHR ?\n    browser.call(this, uri, callback) :\n    server.call(this, uri, callback);\n};\n\nmodule.exports = ImageLoader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/util/ImageLoader.js\n// module id = GMts\n// module chunks = 0","var dl = require('datalib'),\n    d3 = require('d3'),\n    d3_cloud = require('d3-cloud'),\n    canvas = require('vega-scenegraph').canvas,\n    Tuple = require('vega-dataflow/src/Tuple'),\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Wordcloud(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    size: {type: 'array<value>', default: require('./screen').size},\n    text: {type: 'field', default: 'data'},\n    rotate: {type: 'field|value', default: 0},\n    font: {type: 'field|value', default: {value: 'sans-serif'}},\n    fontSize: {type: 'field|value', default: 14},\n    fontStyle: {type: 'field|value', default: {value: 'normal'}},\n    fontWeight: {type: 'field|value', default: {value: 'normal'}},\n    fontScale: {type: 'array<value>', default: [10, 50]},\n    padding: {type: 'value', default: 1},\n    spiral: {type: 'value', default: 'archimedean'}\n  });\n\n  this._layout = d3_cloud().canvas(canvas.instance);\n\n  this._output = {\n    'x':          'layout_x',\n    'y':          'layout_y',\n    'font':       'layout_font',\n    'fontSize':   'layout_fontSize',\n    'fontStyle':  'layout_fontStyle',\n    'fontWeight': 'layout_fontWeight',\n    'rotate':     'layout_rotate',\n  };\n\n  return this.mutates(true);\n}\n\nvar prototype = (Wordcloud.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Wordcloud;\n\nfunction get(p) {\n  return (p && p.accessor) || p;\n}\n\nfunction wrap(tuple) {\n  var x = Object.create(tuple);\n  x._tuple = tuple;\n  return x;\n}\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['wordcloud']);\n\n  // get variables\n  var layout = this._layout,\n      output = this._output,\n      fontSize = this.param('fontSize'),\n      range = fontSize.accessor && this.param('fontScale'),\n      size, scale;\n  fontSize = fontSize.accessor || d3.functor(fontSize);\n\n  // create font size scaling function as needed\n  if (range.length) {\n    scale = d3.scale.sqrt()\n      .domain(dl.extent(data, size=fontSize))\n      .range(range);\n    fontSize = function(x) { return scale(size(x)); };\n  }\n\n  // configure layout\n  layout\n    .size(this.param('size'))\n    .text(get(this.param('text')))\n    .padding(this.param('padding'))\n    .spiral(this.param('spiral'))\n    .rotate(get(this.param('rotate')))\n    .font(get(this.param('font')))\n    .fontStyle(get(this.param('fontStyle')))\n    .fontWeight(get(this.param('fontWeight')))\n    .fontSize(fontSize)\n    .words(data.map(wrap)) // wrap to avoid tuple writes\n    .on('end', function(words) {\n      var size = layout.size(),\n          dx = size[0] >> 1,\n          dy = size[1] >> 1,\n          w, t, i, len;\n\n      for (i=0, len=words.length; i<len; ++i) {\n        w = words[i];\n        t = w._tuple;\n        Tuple.set(t, output.x, w.x + dx);\n        Tuple.set(t, output.y, w.y + dy);\n        Tuple.set(t, output.font, w.font);\n        Tuple.set(t, output.fontSize, w.size);\n        Tuple.set(t, output.fontStyle, w.style);\n        Tuple.set(t, output.fontWeight, w.weight);\n        Tuple.set(t, output.rotate, w.rotate);\n      }\n    })\n    .start();\n\n  // return changeset\n  for (var key in output) input.fields[output[key]] = 1;\n  return input;\n};\n\nmodule.exports = Wordcloud;\n\nvar Parameter = require('./Parameter');\nWordcloud.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Wordcloud transform\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"wordcloud\"]},\n    \"size\": {\n      \"description\": \"The dimensions of the wordcloud layout\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n          \"minItems\": 2,\n          \"maxItems\": 2\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": [900, 500]\n    },\n    \"font\": {\n      \"description\": \"The font face to use for a word.\",\n      \"oneOf\": [{\"type\": \"string\"}, Parameter.schema, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"sans-serif\"\n    },\n    \"fontStyle\": {\n      \"description\": \"The font style to use for a word.\",\n      \"oneOf\": [{\"type\": \"string\"}, Parameter.schema, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"normal\"\n    },\n    \"fontWeight\": {\n      \"description\": \"The font weight to use for a word.\",\n      \"oneOf\": [{\"type\": \"string\"}, Parameter.schema, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"normal\"\n    },\n    \"fontSize\": {\n      \"description\": \"The font size to use for a word.\",\n      \"oneOf\": [{\"type\": \"number\"}, Parameter.schema, {\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 14\n    },\n    \"fontScale\": {\n      \"description\": \"The minimum and maximum scaled font sizes, or null to prevent scaling.\",\n      \"oneOf\": [\n        { \"type\": \"null\" },\n        {\n          \"type\": \"array\",\n          \"minItems\": 2,\n          \"maxItems\": 2,\n          \"items\": {\"oneOf\": [{\"type\":\"number\"}, {\"$ref\": \"#/refs/signal\"}]}\n        }\n      ],\n      \"default\": [10, 50]\n    },\n    \"rotate\": {\n      \"description\": \"The field or number to set the roration angle (in degrees).\",\n      \"oneOf\": [\n        {\"type\": \"number\"}, {\"type\": \"string\"},\n        Parameter.schema, {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": 0\n    },\n    \"text\": {\n      \"description\": \"The field containing the text to use for each word.\",\n      \"oneOf\": [{\"type\": \"string\"}, Parameter.schema, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 'data'\n    },\n    \"spiral\": {\n      \"description\": \"The type of spiral used for positioning words, either 'archimedean' or 'rectangular'.\",\n      \"oneOf\": [{\"enum\": [\"archimedean\", \"rectangular\"]}, Parameter.schema, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"archimedean\"\n    },\n    \"padding\": {\n      \"description\": \"The padding around each word.\",\n      \"oneOf\": [{\"type\": \"number\"}, Parameter.schema, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 1\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"x\": {\"type\": \"string\", \"default\": \"layout_x\"},\n        \"y\": {\"type\": \"string\", \"default\": \"layout_y\"},\n        \"font\": {\"type\": \"string\", \"default\": \"layout_font\"},\n        \"fontSize\": {\"type\": \"string\", \"default\": \"layout_fontSize\"},\n        \"fontStyle\": {\"type\": \"string\", \"default\": \"layout_fontStyle\"},\n        \"fontWeight\": {\"type\": \"string\", \"default\": \"layout_fontWeight\"},\n        \"rotate\": {\"type\": \"string\", \"default\": \"layout_rotate\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Wordcloud.js\n// module id = GXXi\n// module chunks = 0","var util = require('./util'),\n    d3_time = require('d3-time'),\n    d3_timeF = require('d3-time-format'),\n    d3_numberF = require('d3-format'),\n    numberF = d3_numberF, // defaults to EN-US\n    timeF = d3_timeF,     // defaults to EN-US\n    tmpDate = new Date(2000, 0, 1),\n    monthFull, monthAbbr, dayFull, dayAbbr;\n\n\nmodule.exports = {\n  // Update number formatter to use provided locale configuration.\n  // For more see https://github.com/d3/d3-format\n  numberLocale: numberLocale,\n  number:       function(f) { return numberF.format(f); },\n  numberPrefix: function(f, v) { return numberF.formatPrefix(f, v); },\n\n  // Update time formatter to use provided locale configuration.\n  // For more see https://github.com/d3/d3-time-format\n  timeLocale:   timeLocale,\n  time:         function(f) { return timeF.format(f); },\n  utc:          function(f) { return timeF.utcFormat(f); },\n\n  // Set number and time locale simultaneously.\n  locale:       function(l) { numberLocale(l); timeLocale(l); },\n\n  // automatic formatting functions\n  auto: {\n    number:   autoNumberFormat,\n    linear:   linearNumberFormat,\n    time:     function() { return timeAutoFormat(); },\n    utc:      function() { return utcAutoFormat(); }\n  },\n\n  month:      monthFormat,      // format month name from integer code\n  day:        dayFormat,        // format week day name from integer code\n  quarter:    quarterFormat,    // format quarter name from timestamp\n  utcQuarter: utcQuarterFormat  // format quarter name from utc timestamp\n};\n\n// -- Locales ----\n\n// transform 'en-US' style locale string to match d3-format v0.4+ convention\nfunction localeRef(l) {\n  return l.length > 4 && 'locale' + (\n    l[0].toUpperCase() + l[1].toLowerCase() +\n    l[3].toUpperCase() + l[4].toLowerCase()\n  );\n}\n\nfunction numberLocale(l) {\n  var f = util.isString(l) ? d3_numberF[localeRef(l)] : d3_numberF.locale(l);\n  if (f == null) throw Error('Unrecognized locale: ' + l);\n  numberF = f;\n}\n\nfunction timeLocale(l) {\n  var f = util.isString(l) ? d3_timeF[localeRef(l)] : d3_timeF.locale(l);\n  if (f == null) throw Error('Unrecognized locale: ' + l);\n  timeF = f;\n  monthFull = monthAbbr = dayFull = dayAbbr = null;\n}\n\n// -- Number Formatting ----\n\nvar e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction linearRange(domain, count) {\n  if (!domain.length) domain = [0];\n  if (count == null) count = 10;\n\n  var start = domain[0],\n      stop = domain[domain.length - 1];\n\n  if (stop < start) { error = stop; stop = start; start = error; }\n\n  var span = (stop - start) || (count = 1, start || stop || 1),\n      step = Math.pow(10, Math.floor(Math.log(span / count) / Math.LN10)),\n      error = span / count / step;\n\n  // Filter ticks to get closer to the desired count.\n  if (error >= e10) step *= 10;\n  else if (error >= e5) step *= 5;\n  else if (error >= e2) step *= 2;\n\n  // Round start and stop values to step interval.\n  return [\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  ];\n}\n\nfunction trimZero(f, decimal) {\n  return function(x) {\n    var s = f(x),\n        n = s.indexOf(decimal);\n    if (n < 0) return s;\n\n    var idx = rightmostDigit(s, n),\n        end = idx < s.length ? s.slice(idx) : '';\n\n    while (--idx > n) {\n      if (s[idx] !== '0') { ++idx; break; }\n    }\n    return s.slice(0, idx) + end;\n  };\n}\n\nfunction rightmostDigit(s, n) {\n  var i = s.lastIndexOf('e'), c;\n  if (i > 0) return i;\n  for (i=s.length; --i > n;) {\n    c = s.charCodeAt(i);\n    if (c >= 48 && c <= 57) return i+1; // is digit\n  }\n}\n\nfunction autoNumberFormat(f) {\n  var decimal = numberF.format('.1f')(1)[1]; // get decimal char\n  if (f == null) f = ',';\n  f = d3_numberF.formatSpecifier(f);\n  if (f.precision == null) f.precision = 12;\n  switch (f.type) {\n    case '%': f.precision -= 2; break;\n    case 'e': f.precision -= 1; break;\n  }\n  return trimZero(numberF.format(f), decimal);\n}\n\nfunction linearNumberFormat(domain, count, f) {\n  var range = linearRange(domain, count);\n\n  if (f == null) f = ',f';\n\n  switch (f = d3_numberF.formatSpecifier(f), f.type) {\n    case 's': {\n      var value = Math.max(Math.abs(range[0]), Math.abs(range[1]));\n      if (f.precision == null) f.precision = d3_numberF.precisionPrefix(range[2], value);\n      return numberF.formatPrefix(f, value);\n    }\n    case '':\n    case 'e':\n    case 'g':\n    case 'p':\n    case 'r': {\n      if (f.precision == null) f.precision = d3_numberF.precisionRound(range[2], Math.max(Math.abs(range[0]), Math.abs(range[1]))) - (f.type === 'e');\n      break;\n    }\n    case 'f':\n    case '%': {\n      if (f.precision == null) f.precision = d3_numberF.precisionFixed(range[2]) - 2 * (f.type === '%');\n      break;\n    }\n  }\n  return numberF.format(f);\n}\n\n// -- Datetime Formatting ----\n\nfunction timeAutoFormat() {\n  var f = timeF.format,\n      formatMillisecond = f('.%L'),\n      formatSecond = f(':%S'),\n      formatMinute = f('%I:%M'),\n      formatHour = f('%I %p'),\n      formatDay = f('%a %d'),\n      formatWeek = f('%b %d'),\n      formatMonth = f('%B'),\n      formatYear = f('%Y');\n\n  return function(date) {\n    var d = +date;\n    return (d3_time.second(date) < d ? formatMillisecond\n        : d3_time.minute(date) < d ? formatSecond\n        : d3_time.hour(date) < d ? formatMinute\n        : d3_time.day(date) < d ? formatHour\n        : d3_time.month(date) < d ?\n          (d3_time.week(date) < d ? formatDay : formatWeek)\n        : d3_time.year(date) < d ? formatMonth\n        : formatYear)(date);\n  };\n}\n\nfunction utcAutoFormat() {\n  var f = timeF.utcFormat,\n      formatMillisecond = f('.%L'),\n      formatSecond = f(':%S'),\n      formatMinute = f('%I:%M'),\n      formatHour = f('%I %p'),\n      formatDay = f('%a %d'),\n      formatWeek = f('%b %d'),\n      formatMonth = f('%B'),\n      formatYear = f('%Y');\n\n  return function(date) {\n    var d = +date;\n    return (d3_time.utcSecond(date) < d ? formatMillisecond\n        : d3_time.utcMinute(date) < d ? formatSecond\n        : d3_time.utcHour(date) < d ? formatMinute\n        : d3_time.utcDay(date) < d ? formatHour\n        : d3_time.utcMonth(date) < d ?\n          (d3_time.utcWeek(date) < d ? formatDay : formatWeek)\n        : d3_time.utcYear(date) < d ? formatMonth\n        : formatYear)(date);\n  };\n}\n\nfunction monthFormat(month, abbreviate) {\n  var f = abbreviate ?\n    (monthAbbr || (monthAbbr = timeF.format('%b'))) :\n    (monthFull || (monthFull = timeF.format('%B')));\n  return (tmpDate.setMonth(month), f(tmpDate));\n}\n\nfunction dayFormat(day, abbreviate) {\n  var f = abbreviate ?\n    (dayAbbr || (dayAbbr = timeF.format('%a'))) :\n    (dayFull || (dayFull = timeF.format('%A')));\n  return (tmpDate.setMonth(0), tmpDate.setDate(2 + day), f(tmpDate));\n}\n\nfunction quarterFormat(date) {\n  return Math.floor(date.getMonth() / 3) + 1;\n}\n\nfunction utcQuarterFormat(date) {\n  return Math.floor(date.getUTCMonth() / 3) + 1;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/format.js\n// module id = GXhC\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar fielddef_1 = require('../../fielddef');\nvar common_1 = require('../common');\nvar line;\n(function (line) {\n    function markType() {\n        return 'line';\n    }\n    line.markType = markType;\n    function properties(model) {\n        var p = {};\n        var config = model.config();\n        p.x = x(model.encoding().x, model.scaleName(channel_1.X), config);\n        p.y = y(model.encoding().y, model.scaleName(channel_1.Y), config);\n        var _size = size(model.encoding().size, config);\n        if (_size) {\n            p.strokeWidth = _size;\n        }\n        common_1.applyColorAndOpacity(p, model);\n        common_1.applyMarkConfig(p, model, ['interpolate', 'tension']);\n        return p;\n    }\n    line.properties = properties;\n    function x(fieldDef, scaleName, config) {\n        if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef, { binSuffix: '_mid' })\n                };\n            }\n        }\n        return { value: 0 };\n    }\n    function y(fieldDef, scaleName, config) {\n        if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef, { binSuffix: '_mid' })\n                };\n            }\n        }\n        return { field: { group: 'height' } };\n    }\n    function size(fieldDef, config) {\n        if (fieldDef && fieldDef.value !== undefined) {\n            return { value: fieldDef.value };\n        }\n        return { value: config.mark.lineSize };\n    }\n    function labels(model) {\n        return undefined;\n    }\n    line.labels = labels;\n})(line = exports.line || (exports.line = {}));\n//# sourceMappingURL=line.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/mark/line.js\n// module id = HES2\n// module chunks = 0","\"use strict\";\nvar axis_1 = require('../axis');\nvar channel_1 = require('../channel');\nvar fielddef_1 = require('../fielddef');\nvar type_1 = require('../type');\nvar util_1 = require('../util');\nvar common_1 = require('./common');\nfunction parseAxisComponent(model, axisChannels) {\n    return axisChannels.reduce(function (axis, channel) {\n        if (model.axis(channel)) {\n            axis[channel] = parseAxis(channel, model);\n        }\n        return axis;\n    }, {});\n}\nexports.parseAxisComponent = parseAxisComponent;\nfunction parseInnerAxis(channel, model) {\n    var isCol = channel === channel_1.COLUMN, isRow = channel === channel_1.ROW, type = isCol ? 'x' : isRow ? 'y' : channel;\n    var def = {\n        type: type,\n        scale: model.scaleName(channel),\n        grid: true,\n        tickSize: 0,\n        properties: {\n            labels: {\n                text: { value: '' }\n            },\n            axis: {\n                stroke: { value: 'transparent' }\n            }\n        }\n    };\n    var axis = model.axis(channel);\n    ['layer', 'ticks', 'values', 'subdivide'].forEach(function (property) {\n        var method;\n        var value = (method = exports[property]) ?\n            method(model, channel, def) :\n            axis[property];\n        if (value !== undefined) {\n            def[property] = value;\n        }\n    });\n    var props = model.axis(channel).properties || {};\n    ['grid'].forEach(function (group) {\n        var value = properties[group] ?\n            properties[group](model, channel, props[group] || {}, def) :\n            props[group];\n        if (value !== undefined && util_1.keys(value).length > 0) {\n            def.properties = def.properties || {};\n            def.properties[group] = value;\n        }\n    });\n    return def;\n}\nexports.parseInnerAxis = parseInnerAxis;\nfunction parseAxis(channel, model) {\n    var isCol = channel === channel_1.COLUMN, isRow = channel === channel_1.ROW, type = isCol ? 'x' : isRow ? 'y' : channel;\n    var axis = model.axis(channel);\n    var def = {\n        type: type,\n        scale: model.scaleName(channel)\n    };\n    [\n        'format', 'grid', 'layer', 'offset', 'orient', 'tickSize', 'ticks', 'tickSizeEnd', 'title', 'titleOffset',\n        'tickPadding', 'tickSize', 'tickSizeMajor', 'tickSizeMinor', 'values', 'subdivide'\n    ].forEach(function (property) {\n        var method;\n        var value = (method = exports[property]) ?\n            method(model, channel, def) :\n            axis[property];\n        if (value !== undefined) {\n            def[property] = value;\n        }\n    });\n    var props = model.axis(channel).properties || {};\n    [\n        'axis', 'labels',\n        'grid', 'title', 'ticks', 'majorTicks', 'minorTicks'\n    ].forEach(function (group) {\n        var value = properties[group] ?\n            properties[group](model, channel, props[group] || {}, def) :\n            props[group];\n        if (value !== undefined && util_1.keys(value).length > 0) {\n            def.properties = def.properties || {};\n            def.properties[group] = value;\n        }\n    });\n    return def;\n}\nexports.parseAxis = parseAxis;\nfunction format(model, channel) {\n    return common_1.numberFormat(model.fieldDef(channel), model.axis(channel).format, model.config());\n}\nexports.format = format;\nfunction offset(model, channel) {\n    return model.axis(channel).offset;\n}\nexports.offset = offset;\nfunction gridShow(model, channel) {\n    var grid = model.axis(channel).grid;\n    if (grid !== undefined) {\n        return grid;\n    }\n    return !model.isOrdinalScale(channel) && !model.fieldDef(channel).bin;\n}\nexports.gridShow = gridShow;\nfunction grid(model, channel) {\n    if (channel === channel_1.ROW || channel === channel_1.COLUMN) {\n        return undefined;\n    }\n    return gridShow(model, channel) && ((channel === channel_1.Y || channel === channel_1.X) && !(model.parent() && model.parent().isFacet()));\n}\nexports.grid = grid;\nfunction layer(model, channel, def) {\n    var layer = model.axis(channel).layer;\n    if (layer !== undefined) {\n        return layer;\n    }\n    if (def.grid) {\n        return 'back';\n    }\n    return undefined;\n}\nexports.layer = layer;\n;\nfunction orient(model, channel) {\n    var orient = model.axis(channel).orient;\n    if (orient) {\n        return orient;\n    }\n    else if (channel === channel_1.COLUMN) {\n        return axis_1.AxisOrient.TOP;\n    }\n    return undefined;\n}\nexports.orient = orient;\nfunction ticks(model, channel) {\n    var ticks = model.axis(channel).ticks;\n    if (ticks !== undefined) {\n        return ticks;\n    }\n    if (channel === channel_1.X && !model.fieldDef(channel).bin) {\n        return 5;\n    }\n    return undefined;\n}\nexports.ticks = ticks;\nfunction tickSize(model, channel) {\n    var tickSize = model.axis(channel).tickSize;\n    if (tickSize !== undefined) {\n        return tickSize;\n    }\n    return undefined;\n}\nexports.tickSize = tickSize;\nfunction tickSizeEnd(model, channel) {\n    var tickSizeEnd = model.axis(channel).tickSizeEnd;\n    if (tickSizeEnd !== undefined) {\n        return tickSizeEnd;\n    }\n    return undefined;\n}\nexports.tickSizeEnd = tickSizeEnd;\nfunction title(model, channel) {\n    var axis = model.axis(channel);\n    if (axis.title !== undefined) {\n        return axis.title;\n    }\n    var fieldTitle = fielddef_1.title(model.fieldDef(channel), model.config());\n    var maxLength;\n    if (axis.titleMaxLength) {\n        maxLength = axis.titleMaxLength;\n    }\n    else if (channel === channel_1.X && !model.isOrdinalScale(channel_1.X)) {\n        var unitModel = model;\n        maxLength = unitModel.config().cell.width / model.axis(channel_1.X).characterWidth;\n    }\n    else if (channel === channel_1.Y && !model.isOrdinalScale(channel_1.Y)) {\n        var unitModel = model;\n        maxLength = unitModel.config().cell.height / model.axis(channel_1.Y).characterWidth;\n    }\n    return maxLength ? util_1.truncate(fieldTitle, maxLength) : fieldTitle;\n}\nexports.title = title;\nfunction titleOffset(model, channel) {\n    var titleOffset = model.axis(channel).titleOffset;\n    if (titleOffset !== undefined) {\n        return titleOffset;\n    }\n    return undefined;\n}\nexports.titleOffset = titleOffset;\nvar properties;\n(function (properties) {\n    function axis(model, channel, axisPropsSpec) {\n        var axis = model.axis(channel);\n        return util_1.extend(axis.axisColor !== undefined ?\n            { stroke: { value: axis.axisColor } } :\n            {}, axis.axisWidth !== undefined ?\n            { strokeWidth: { value: axis.axisWidth } } :\n            {}, axisPropsSpec || {});\n    }\n    properties.axis = axis;\n    function grid(model, channel, gridPropsSpec) {\n        var axis = model.axis(channel);\n        return util_1.extend(axis.gridColor !== undefined ? { stroke: { value: axis.gridColor } } : {}, axis.gridOpacity !== undefined ? { strokeOpacity: { value: axis.gridOpacity } } : {}, axis.gridWidth !== undefined ? { strokeWidth: { value: axis.gridWidth } } : {}, axis.gridDash !== undefined ? { strokeDashOffset: { value: axis.gridDash } } : {}, gridPropsSpec || {});\n    }\n    properties.grid = grid;\n    function labels(model, channel, labelsSpec, def) {\n        var fieldDef = model.fieldDef(channel);\n        var axis = model.axis(channel);\n        var config = model.config();\n        if (!axis.labels) {\n            return util_1.extend({\n                text: ''\n            }, labelsSpec);\n        }\n        if (util_1.contains([type_1.NOMINAL, type_1.ORDINAL], fieldDef.type) && axis.labelMaxLength) {\n            labelsSpec = util_1.extend({\n                text: {\n                    template: '{{ datum.data | truncate:' + axis.labelMaxLength + ' }}'\n                }\n            }, labelsSpec || {});\n        }\n        else if (fieldDef.type === type_1.TEMPORAL) {\n            labelsSpec = util_1.extend({\n                text: {\n                    template: common_1.timeTemplate('datum.data', fieldDef.timeUnit, axis.format, axis.shortTimeLabels, config)\n                }\n            }, labelsSpec);\n        }\n        if (axis.labelAngle !== undefined) {\n            labelsSpec.angle = { value: axis.labelAngle };\n        }\n        else {\n            if (channel === channel_1.X && (fielddef_1.isDimension(fieldDef) || fieldDef.type === type_1.TEMPORAL)) {\n                labelsSpec.angle = { value: 270 };\n            }\n        }\n        if (axis.labelAlign !== undefined) {\n            labelsSpec.align = { value: axis.labelAlign };\n        }\n        else {\n            if (labelsSpec.angle) {\n                if (labelsSpec.angle.value === 270) {\n                    labelsSpec.align = {\n                        value: def.orient === 'top' ? 'left' :\n                            def.type === 'x' ? 'right' :\n                                'center'\n                    };\n                }\n                else if (labelsSpec.angle.value === 90) {\n                    labelsSpec.align = { value: 'center' };\n                }\n            }\n        }\n        if (axis.labelBaseline !== undefined) {\n            labelsSpec.baseline = { value: axis.labelBaseline };\n        }\n        else {\n            if (labelsSpec.angle) {\n                if (labelsSpec.angle.value === 270) {\n                    labelsSpec.baseline = { value: def.type === 'x' ? 'middle' : 'bottom' };\n                }\n                else if (labelsSpec.angle.value === 90) {\n                    labelsSpec.baseline = { value: 'bottom' };\n                }\n            }\n        }\n        if (axis.tickLabelColor !== undefined) {\n            labelsSpec.stroke = { value: axis.tickLabelColor };\n        }\n        if (axis.tickLabelFont !== undefined) {\n            labelsSpec.font = { value: axis.tickLabelFont };\n        }\n        if (axis.tickLabelFontSize !== undefined) {\n            labelsSpec.fontSize = { value: axis.tickLabelFontSize };\n        }\n        return util_1.keys(labelsSpec).length === 0 ? undefined : labelsSpec;\n    }\n    properties.labels = labels;\n    function ticks(model, channel, ticksPropsSpec) {\n        var axis = model.axis(channel);\n        return util_1.extend(axis.tickColor !== undefined ? { stroke: { value: axis.tickColor } } : {}, axis.tickWidth !== undefined ? { strokeWidth: { value: axis.tickWidth } } : {}, ticksPropsSpec || {});\n    }\n    properties.ticks = ticks;\n    function title(model, channel, titlePropsSpec) {\n        var axis = model.axis(channel);\n        return util_1.extend(axis.titleColor !== undefined ? { stroke: { value: axis.titleColor } } : {}, axis.titleFont !== undefined ? { font: { value: axis.titleFont } } : {}, axis.titleFontSize !== undefined ? { fontSize: { value: axis.titleFontSize } } : {}, axis.titleFontWeight !== undefined ? { fontWeight: { value: axis.titleFontWeight } } : {}, titlePropsSpec || {});\n    }\n    properties.title = title;\n})(properties = exports.properties || (exports.properties = {}));\n//# sourceMappingURL=axis.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/axis.js\n// module id = HeGT\n// module chunks = 0","var d3 = require('d3'),\n    vg = require('vega'),\n    vl = require('vega-lite'),\n    parameter = require('./parameter'),\n    post = require('./post');\n\nvar config = {\n  // URL for loading specs into editor\n  editor_url: 'http://vega.github.io/vega-editor/',\n\n  // HTML to inject within view source head element\n  source_header: '',\n\n  // HTML to inject before view source closing body tag\n  source_footer: ''\n};\n\nvar MODES = {\n  'vega':      'vega',\n  'vega-lite': 'vega-lite'\n};\n\nvar PREPROCESSOR = {\n  'vega':      function(vgjson) { return vgjson; },\n  'vega-lite': function(vljson) { return vl.compile(vljson).spec; }\n};\n\nfunction load(url, arg, prop, el, callback) {\n  vg.util.load({url: url}, function(err, data) {\n    var opt;\n    if (err || !data) {\n      console.error(err || ('No data found at ' + url));\n    } else {\n      // marshal embedding spec and restart\n      if (!arg) { // Loading embed spec from URL\n        opt = JSON.parse(data);\n      } else {  // Loading vg/vl spec or config from URL\n        opt = vg.util.extend({}, arg);\n        opt[prop] = prop === 'source' ? data : JSON.parse(data);\n      }\n      embed(el, opt, callback);\n    }\n  });\n}\n\n// Embed a Vega visualization component in a web page.\n// el: DOM element in which to place component (DOM node or CSS selector)\n// opt: Embedding specification (parsed JSON or URL string)\n// callback: invoked with the generated Vega View instance\nfunction embed(el, opt, callback) {\n  var cb = callback || function(){},\n      params = [], source, spec, mode, config;\n\n  try {\n    // Load the visualization specification.\n    if (vg.util.isString(opt)) {\n      return load(opt, null, null, el, callback);\n    } else if (opt.source) {\n      source = opt.source;\n      spec = JSON.parse(source);\n    } else if (opt.spec) {\n      spec = opt.spec;\n      source = JSON.stringify(spec, null, 2);\n    } else if (opt.url) {\n      return load(opt.url, opt, 'source', el, callback);\n    } else {\n      spec = opt;\n      source = JSON.stringify(spec, null, 2);\n      opt = {spec: spec, actions: false};\n    }\n    mode = MODES[opt.mode] || MODES.vega;\n    spec = PREPROCESSOR[mode](spec);\n\n    // Load Vega theme/configuration.\n    if (vg.util.isString(opt.config)) {\n      return load(opt.config, opt, 'config', el, callback);\n    } else if (opt.config) {\n      config = opt.config;\n    }\n\n    // ensure container div has class 'vega-embed'\n    var div = d3.select(el)\n      .classed('vega-embed', true)\n      .html(''); // clear container\n\n    // handle parameters\n    if (opt.parameters) {\n      var elp = opt.parameter_el ? d3.select(opt.parameter_el) : div;\n      var pdiv = elp.append('div')\n        .attr('class', 'vega-params');\n      params = opt.parameters.map(function(p) {\n        return parameter.init(pdiv, p, spec);\n      });\n    }\n  } catch (err) { cb(err); }\n\n  vg.parse.spec(spec, config, function(error, chart) {\n    if (error) { cb(error); return; }\n    try {\n      var renderer = opt.renderer || 'canvas',\n          actions  = opt.actions || {};\n\n      var view = chart({\n        el: el,\n        data: opt.data || undefined,\n        renderer: renderer\n      });\n\n      if (opt.actions !== false) {\n        // add child div to house action links\n        var ctrl = div.append('div')\n          .attr('class', 'vega-actions');\n\n        // add 'Export' action\n        if (actions.export !== false) {\n          var ext = (renderer==='canvas' ? 'png' : 'svg');\n          ctrl.append('a')\n            .text('Export as ' + ext.toUpperCase())\n            .attr('href', '#')\n            .attr('target', '_blank')\n            .attr('download', (spec.name || 'vega') + '.' + ext)\n            .on('mousedown', function() {\n              this.href = view.toImageURL(ext);\n              d3.event.preventDefault();\n            });\n        }\n\n        // add 'View Source' action\n        if (actions.source !== false) {\n          ctrl.append('a')\n            .text('View Source')\n            .attr('href', '#')\n            .on('click', function() {\n              viewSource(source);\n              d3.event.preventDefault();\n            });\n        }\n\n        // add 'Open in Vega Editor' action\n        if (actions.editor !== false) {\n          ctrl.append('a')\n            .text('Open in Vega Editor')\n            .attr('href', '#')\n            .on('click', function() {\n              post(window, embed.config.editor_url, {spec: source, mode: mode});\n              d3.event.preventDefault();\n            });\n        }\n      }\n\n      // bind all parameter elements\n      params.forEach(function(p) { parameter.bind(p, view); });\n\n      // initialize and return visualization\n      view.update();\n      cb(null, {view: view, spec: spec});\n    } catch (err) { cb(err); }\n  });\n}\n\nfunction viewSource(source) {\n  var header = '<html><head>' + config.source_header + '</head>' + '<body><pre><code class=\"json\">';\n  var footer = '</code></pre>' + config.source_footer + '</body></html>';\n  var win = window.open('');\n  win.document.write(header + source + footer);\n  win.document.title = 'Vega JSON Source';\n}\n\n// make config externally visible\nembed.config = config;\n\nmodule.exports = embed;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@jupyterlab/vega2-extension/~/vega-embed/src/embed.js\n// module id = IRQj\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar axis_1 = require('../axis');\nvar channel_1 = require('../channel');\nvar config_1 = require('../config');\nvar data_1 = require('../data');\nvar encoding_1 = require('../encoding');\nvar fielddef_1 = require('../fielddef');\nvar scale_1 = require('../scale');\nvar type_1 = require('../type');\nvar util_1 = require('../util');\nvar axis_2 = require('./axis');\nvar common_1 = require('./common');\nvar data_2 = require('./data/data');\nvar layout_1 = require('./layout');\nvar model_1 = require('./model');\nvar scale_2 = require('./scale');\nvar FacetModel = (function (_super) {\n    __extends(FacetModel, _super);\n    function FacetModel(spec, parent, parentGivenName) {\n        _super.call(this, spec, parent, parentGivenName);\n        var config = this._config = this._initConfig(spec.config, parent);\n        var child = this._child = common_1.buildModel(spec.spec, this, this.name('child'));\n        var facet = this._facet = this._initFacet(spec.facet);\n        this._scale = this._initScale(facet, config, child);\n        this._axis = this._initAxis(facet, config, child);\n    }\n    FacetModel.prototype._initConfig = function (specConfig, parent) {\n        return util_1.mergeDeep(util_1.duplicate(config_1.defaultConfig), specConfig, parent ? parent.config() : {});\n    };\n    FacetModel.prototype._initFacet = function (facet) {\n        facet = util_1.duplicate(facet);\n        var model = this;\n        encoding_1.channelMappingForEach(this.channels(), facet, function (fieldDef, channel) {\n            if (!fielddef_1.isDimension(fieldDef)) {\n                model.addWarning(channel + ' encoding should be ordinal.');\n            }\n            if (fieldDef.type) {\n                fieldDef.type = type_1.getFullName(fieldDef.type);\n            }\n        });\n        return facet;\n    };\n    FacetModel.prototype._initScale = function (facet, config, child) {\n        return [channel_1.ROW, channel_1.COLUMN].reduce(function (_scale, channel) {\n            if (facet[channel]) {\n                var scaleSpec = facet[channel].scale || {};\n                _scale[channel] = util_1.extend({\n                    type: scale_1.ScaleType.ORDINAL,\n                    round: config.facet.scale.round,\n                    padding: (channel === channel_1.ROW && child.has(channel_1.Y)) || (channel === channel_1.COLUMN && child.has(channel_1.X)) ?\n                        config.facet.scale.padding : 0\n                }, scaleSpec);\n            }\n            return _scale;\n        }, {});\n    };\n    FacetModel.prototype._initAxis = function (facet, config, child) {\n        return [channel_1.ROW, channel_1.COLUMN].reduce(function (_axis, channel) {\n            if (facet[channel]) {\n                var axisSpec = facet[channel].axis;\n                if (axisSpec !== false) {\n                    var modelAxis = _axis[channel] = util_1.extend({}, config.facet.axis, axisSpec === true ? {} : axisSpec || {});\n                    if (channel === channel_1.ROW) {\n                        var yAxis = child.axis(channel_1.Y);\n                        if (yAxis && yAxis.orient !== axis_1.AxisOrient.RIGHT && !modelAxis.orient) {\n                            modelAxis.orient = axis_1.AxisOrient.RIGHT;\n                        }\n                        if (child.has(channel_1.X) && !modelAxis.labelAngle) {\n                            modelAxis.labelAngle = modelAxis.orient === axis_1.AxisOrient.RIGHT ? 90 : 270;\n                        }\n                    }\n                }\n            }\n            return _axis;\n        }, {});\n    };\n    FacetModel.prototype.facet = function () {\n        return this._facet;\n    };\n    FacetModel.prototype.has = function (channel) {\n        return !!this._facet[channel];\n    };\n    FacetModel.prototype.child = function () {\n        return this._child;\n    };\n    FacetModel.prototype.hasSummary = function () {\n        var summary = this.component.data.summary;\n        for (var i = 0; i < summary.length; i++) {\n            if (util_1.keys(summary[i].measures).length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    FacetModel.prototype.dataTable = function () {\n        return (this.hasSummary() ? data_1.SUMMARY : data_1.SOURCE) + '';\n    };\n    FacetModel.prototype.fieldDef = function (channel) {\n        return this.facet()[channel];\n    };\n    FacetModel.prototype.stack = function () {\n        return null;\n    };\n    FacetModel.prototype.parseData = function () {\n        this.child().parseData();\n        this.component.data = data_2.parseFacetData(this);\n    };\n    FacetModel.prototype.parseSelectionData = function () {\n    };\n    FacetModel.prototype.parseLayoutData = function () {\n        this.child().parseLayoutData();\n        this.component.layout = layout_1.parseFacetLayout(this);\n    };\n    FacetModel.prototype.parseScale = function () {\n        var child = this.child();\n        var model = this;\n        child.parseScale();\n        var scaleComponent = this.component.scale = scale_2.parseScaleComponent(this);\n        util_1.keys(child.component.scale).forEach(function (channel) {\n            if (true) {\n                scaleComponent[channel] = child.component.scale[channel];\n                util_1.vals(scaleComponent[channel]).forEach(function (scale) {\n                    var scaleNameWithoutPrefix = scale.name.substr(child.name('').length);\n                    var newName = model.scaleName(scaleNameWithoutPrefix);\n                    child.renameScale(scale.name, newName);\n                    scale.name = newName;\n                });\n                delete child.component.scale[channel];\n            }\n        });\n    };\n    FacetModel.prototype.parseMark = function () {\n        this.child().parseMark();\n        this.component.mark = util_1.extend({\n            name: this.name('cell'),\n            type: 'group',\n            from: util_1.extend(this.dataTable() ? { data: this.dataTable() } : {}, {\n                transform: [{\n                        type: 'facet',\n                        groupby: [].concat(this.has(channel_1.ROW) ? [this.field(channel_1.ROW)] : [], this.has(channel_1.COLUMN) ? [this.field(channel_1.COLUMN)] : [])\n                    }]\n            }),\n            properties: {\n                update: getFacetGroupProperties(this)\n            }\n        }, this.child().assembleGroup());\n    };\n    FacetModel.prototype.parseAxis = function () {\n        this.child().parseAxis();\n        this.component.axis = axis_2.parseAxisComponent(this, [channel_1.ROW, channel_1.COLUMN]);\n    };\n    FacetModel.prototype.parseAxisGroup = function () {\n        var xAxisGroup = parseAxisGroup(this, channel_1.X);\n        var yAxisGroup = parseAxisGroup(this, channel_1.Y);\n        this.component.axisGroup = util_1.extend(xAxisGroup ? { x: xAxisGroup } : {}, yAxisGroup ? { y: yAxisGroup } : {});\n    };\n    FacetModel.prototype.parseGridGroup = function () {\n        var child = this.child();\n        this.component.gridGroup = util_1.extend(!child.has(channel_1.X) && this.has(channel_1.COLUMN) ? { column: getColumnGridGroups(this) } : {}, !child.has(channel_1.Y) && this.has(channel_1.ROW) ? { row: getRowGridGroups(this) } : {});\n    };\n    FacetModel.prototype.parseLegend = function () {\n        this.child().parseLegend();\n        this.component.legend = this._child.component.legend;\n        this._child.component.legend = {};\n    };\n    FacetModel.prototype.assembleParentGroupProperties = function () {\n        return null;\n    };\n    FacetModel.prototype.assembleData = function (data) {\n        data_2.assembleData(this, data);\n        return this._child.assembleData(data);\n    };\n    FacetModel.prototype.assembleLayout = function (layoutData) {\n        this._child.assembleLayout(layoutData);\n        return layout_1.assembleLayout(this, layoutData);\n    };\n    FacetModel.prototype.assembleMarks = function () {\n        return [].concat(util_1.vals(this.component.axisGroup), util_1.flatten(util_1.vals(this.component.gridGroup)), this.component.mark);\n    };\n    FacetModel.prototype.channels = function () {\n        return [channel_1.ROW, channel_1.COLUMN];\n    };\n    FacetModel.prototype.mapping = function () {\n        return this.facet();\n    };\n    FacetModel.prototype.isFacet = function () {\n        return true;\n    };\n    return FacetModel;\n}(model_1.Model));\nexports.FacetModel = FacetModel;\nfunction getFacetGroupProperties(model) {\n    var child = model.child();\n    var mergedCellConfig = util_1.extend({}, child.config().cell, child.config().facet.cell);\n    return util_1.extend({\n        x: model.has(channel_1.COLUMN) ? {\n            scale: model.scaleName(channel_1.COLUMN),\n            field: model.field(channel_1.COLUMN),\n            offset: model.scale(channel_1.COLUMN).padding / 2\n        } : { value: model.config().facet.scale.padding / 2 },\n        y: model.has(channel_1.ROW) ? {\n            scale: model.scaleName(channel_1.ROW),\n            field: model.field(channel_1.ROW),\n            offset: model.scale(channel_1.ROW).padding / 2\n        } : { value: model.config().facet.scale.padding / 2 },\n        width: { field: { parent: model.child().sizeName('width') } },\n        height: { field: { parent: model.child().sizeName('height') } }\n    }, child.assembleParentGroupProperties(mergedCellConfig));\n}\nfunction parseAxisGroup(model, channel) {\n    var axisGroup = null;\n    var child = model.child();\n    if (child.has(channel)) {\n        if (child.axis(channel)) {\n            if (true) {\n                axisGroup = channel === channel_1.X ? getXAxesGroup(model) : getYAxesGroup(model);\n                if (child.axis(channel) && axis_2.gridShow(child, channel)) {\n                    child.component.axis[channel] = axis_2.parseInnerAxis(channel, child);\n                }\n                else {\n                    delete child.component.axis[channel];\n                }\n            }\n            else {\n            }\n        }\n    }\n    return axisGroup;\n}\nfunction getXAxesGroup(model) {\n    var hasCol = model.has(channel_1.COLUMN);\n    return util_1.extend({\n        name: model.name('x-axes'),\n        type: 'group'\n    }, hasCol ? {\n        from: {\n            data: model.dataTable(),\n            transform: [{\n                    type: 'aggregate',\n                    groupby: [model.field(channel_1.COLUMN)],\n                    summarize: { '*': ['count'] }\n                }]\n        }\n    } : {}, {\n        properties: {\n            update: {\n                width: { field: { parent: model.child().sizeName('width') } },\n                height: {\n                    field: { group: 'height' }\n                },\n                x: hasCol ? {\n                    scale: model.scaleName(channel_1.COLUMN),\n                    field: model.field(channel_1.COLUMN),\n                    offset: model.scale(channel_1.COLUMN).padding / 2\n                } : {\n                    value: model.config().facet.scale.padding / 2\n                }\n            }\n        },\n        axes: [axis_2.parseAxis(channel_1.X, model.child())]\n    });\n}\nfunction getYAxesGroup(model) {\n    var hasRow = model.has(channel_1.ROW);\n    return util_1.extend({\n        name: model.name('y-axes'),\n        type: 'group'\n    }, hasRow ? {\n        from: {\n            data: model.dataTable(),\n            transform: [{\n                    type: 'aggregate',\n                    groupby: [model.field(channel_1.ROW)],\n                    summarize: { '*': ['count'] }\n                }]\n        }\n    } : {}, {\n        properties: {\n            update: {\n                width: {\n                    field: { group: 'width' }\n                },\n                height: { field: { parent: model.child().sizeName('height') } },\n                y: hasRow ? {\n                    scale: model.scaleName(channel_1.ROW),\n                    field: model.field(channel_1.ROW),\n                    offset: model.scale(channel_1.ROW).padding / 2\n                } : {\n                    value: model.config().facet.scale.padding / 2\n                }\n            }\n        },\n        axes: [axis_2.parseAxis(channel_1.Y, model.child())]\n    });\n}\nfunction getRowGridGroups(model) {\n    var facetGridConfig = model.config().facet.grid;\n    var rowGrid = {\n        name: model.name('row-grid'),\n        type: 'rule',\n        from: {\n            data: model.dataTable(),\n            transform: [{ type: 'facet', groupby: [model.field(channel_1.ROW)] }]\n        },\n        properties: {\n            update: {\n                y: {\n                    scale: model.scaleName(channel_1.ROW),\n                    field: model.field(channel_1.ROW)\n                },\n                x: { value: 0, offset: -facetGridConfig.offset },\n                x2: { field: { group: 'width' }, offset: facetGridConfig.offset },\n                stroke: { value: facetGridConfig.color },\n                strokeOpacity: { value: facetGridConfig.opacity },\n                strokeWidth: { value: 0.5 }\n            }\n        }\n    };\n    return [rowGrid, {\n            name: model.name('row-grid-end'),\n            type: 'rule',\n            properties: {\n                update: {\n                    y: { field: { group: 'height' } },\n                    x: { value: 0, offset: -facetGridConfig.offset },\n                    x2: { field: { group: 'width' }, offset: facetGridConfig.offset },\n                    stroke: { value: facetGridConfig.color },\n                    strokeOpacity: { value: facetGridConfig.opacity },\n                    strokeWidth: { value: 0.5 }\n                }\n            }\n        }];\n}\nfunction getColumnGridGroups(model) {\n    var facetGridConfig = model.config().facet.grid;\n    var columnGrid = {\n        name: model.name('column-grid'),\n        type: 'rule',\n        from: {\n            data: model.dataTable(),\n            transform: [{ type: 'facet', groupby: [model.field(channel_1.COLUMN)] }]\n        },\n        properties: {\n            update: {\n                x: {\n                    scale: model.scaleName(channel_1.COLUMN),\n                    field: model.field(channel_1.COLUMN)\n                },\n                y: { value: 0, offset: -facetGridConfig.offset },\n                y2: { field: { group: 'height' }, offset: facetGridConfig.offset },\n                stroke: { value: facetGridConfig.color },\n                strokeOpacity: { value: facetGridConfig.opacity },\n                strokeWidth: { value: 0.5 }\n            }\n        }\n    };\n    return [columnGrid, {\n            name: model.name('column-grid-end'),\n            type: 'rule',\n            properties: {\n                update: {\n                    x: { field: { group: 'width' } },\n                    y: { value: 0, offset: -facetGridConfig.offset },\n                    y2: { field: { group: 'height' }, offset: facetGridConfig.offset },\n                    stroke: { value: facetGridConfig.color },\n                    strokeOpacity: { value: facetGridConfig.opacity },\n                    strokeWidth: { value: 0.5 }\n                }\n            }\n        }];\n}\n//# sourceMappingURL=facet.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/facet.js\n// module id = ISRz\n// module chunks = 0","var ts = Date.now();\n\nfunction write(msg) {\n  console.log('[Vega Log]', msg);\n}\n\nfunction error(msg) {\n  console.error('[Vega Err]', msg);\n}\n\nfunction debug(input, args) {\n  if (!debug.enable) return;\n  var log = Function.prototype.bind.call(console.log, console);\n  var state = {\n    prevTime:  Date.now() - ts,\n    stamp: input.stamp\n  };\n\n  if (input.add) {\n    state.add = input.add.length;\n    state.mod = input.mod.length;\n    state.rem = input.rem.length;\n    state.reflow = !!input.reflow;\n  }\n\n  log.apply(console, (args.push(JSON.stringify(state)), args));\n  ts = Date.now();\n}\n\nmodule.exports = {\n  log:   write,\n  error: error,\n  debug: (debug.enable = false, debug)\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-logging/index.js\n// module id = J731\n// module chunks = 0","module.exports = {\n  arc:    require('./arc'),\n  area:   require('./area'),\n  group:  require('./group'),\n  image:  require('./image'),\n  line:   require('./line'),\n  path:   require('./path'),\n  rect:   require('./rect'),\n  rule:   require('./rule'),\n  symbol: require('./symbol'),\n  text:   require('./text')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/render/canvas/marks/index.js\n// module id = KKvq\n// module chunks = 0","module.exports = {\n  parse:  require('./parse'),\n  render: require('./render')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/path/index.js\n// module id = LhY1\n// module chunks = 0","var d3 = require('d3'),\n    bound = require('vega-scenegraph').bound,\n    Tuple = require('vega-dataflow').Tuple,\n    Status = require('./Builder').STATUS;\n\nfunction Transition(duration, ease) {\n  this.duration = duration || 500;\n  this.ease = ease && d3.ease(ease) || d3.ease('cubic-in-out');\n  this.updates = {next: null};\n}\n\nvar prototype = Transition.prototype;\n\nvar skip = {\n  'text': 1,\n  'url':  1\n};\n\nprototype.interpolate = function(item, values) {\n  var key, curr, next, interp, list = null;\n\n  for (key in values) {\n    curr = item[key];\n    next = values[key];\n    if (curr !== next) {\n      if (skip[key] || curr === undefined) {\n        // skip interpolation for specific keys or undefined start values\n        Tuple.set(item, key, next);\n      } else if (typeof curr === 'number' && !isFinite(curr)) {\n        // for NaN or infinite numeric values, skip to final value\n        Tuple.set(item, key, next);\n      } else {\n        // otherwise lookup interpolator\n        interp = d3.interpolate(curr, next);\n        interp.property = key;\n        (list || (list=[])).push(interp);\n      }\n    }\n  }\n\n  if (list === null && item.status === Status.EXIT) {\n    list = []; // ensure exiting items are included\n  }\n\n  if (list != null) {\n    list.item = item;\n    list.ease = item.mark.ease || this.ease;\n    list.next = this.updates.next;\n    this.updates.next = list;\n  }\n  return this;\n};\n\nprototype.start = function(callback) {\n  var t = this, prev = t.updates, curr = prev.next;\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    if (curr.item.status === Status.EXIT) {\n      // Only mark item as exited when it is removed.\n      curr.item.status = Status.UPDATE;\n      curr.remove = true;\n    }\n  }\n  t.callback = callback;\n  d3.timer(function(elapsed) { return step.call(t, elapsed); });\n};\n\nfunction step(elapsed) {\n  var list = this.updates, prev = list, curr = prev.next,\n      duration = this.duration,\n      item, delay, f, e, i, n, stop = true;\n\n  for (; curr!=null; prev=curr, curr=prev.next) {\n    item = curr.item;\n    delay = item.delay || 0;\n\n    f = (elapsed - delay) / duration;\n    if (f < 0) { stop = false; continue; }\n    if (f > 1) f = 1;\n    e = curr.ease(f);\n\n    for (i=0, n=curr.length; i<n; ++i) {\n      item[curr[i].property] = curr[i](e);\n    }\n    item.touch();\n    bound.item(item);\n\n    if (f === 1) {\n      if (curr.remove) {\n        item.status = Status.EXIT;\n        item.remove();\n      }\n      prev.next = curr.next;\n      curr = prev;\n    } else {\n      stop = false;\n    }\n  }\n\n  this.callback();\n  return stop;\n}\n\nmodule.exports = Transition;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/Transition.js\n// module id = Lp/H\n// module chunks = 0","var util = require('./util'),\n    parse = require('../../../path/parse'),\n    render = require('../../../path/render'),\n    areaPath = require('../../../util/svg').path.area;\n\nfunction path(g, items) {\n  var o = items[0],\n      p = o.pathCache || (o.pathCache = parse(areaPath(items)));\n  render(g, p);\n}\n\nfunction pick(g, scene, x, y, gx, gy) {\n  var items = scene.items,\n      b = scene.bounds;\n\n  if (!items || !items.length || b && !b.contains(gx, gy)) {\n    return null;\n  }\n\n  if (g.pixelratio != null && g.pixelratio !== 1) {\n    x *= g.pixelratio;\n    y *= g.pixelratio;\n  }\n  return hit(g, items, x, y) ? items[0] : null;\n}\n\nvar hit = util.testPath(path);\n\nmodule.exports = {\n  draw: util.drawOne(path),\n  pick: pick,\n  nested: true\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/render/canvas/marks/area.js\n// module id = LqIm\n// module chunks = 0","module.exports = {\n  size:   [{signal: 'width'}, {signal: 'height'}],\n  mid:    [{expr: 'width/2'}, {expr: 'height/2'}],\n  extent: [\n    {expr: '[-padding.left, -padding.top]'},\n    {expr: '[width+padding.right, height+padding.bottom]'}\n  ]\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/screen.js\n// module id = MRce\n// module chunks = 0","var df = require('vega-dataflow'),\n    Tuple = df.Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction Fold(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    fields: {type: 'array<field>'}\n  });\n\n  this._output = {key: 'key', value: 'value'};\n  this._cache = {};\n\n  return this.router(true).produces(true);\n}\n\nvar prototype = (Fold.prototype = Object.create(Transform.prototype));\nprototype.constructor = Fold;\n\nprototype._reset = function(input, output) {\n  for (var id in this._cache) {\n    output.rem.push.apply(output.rem, this._cache[id]);\n  }\n  this._cache = {};\n};\n\nprototype._tuple = function(x, i, len) {\n  var list = this._cache[x._id] || (this._cache[x._id] = Array(len));\n  return list[i] ? Tuple.rederive(x, list[i]) : (list[i] = Tuple.derive(x));\n};\n\nprototype._fn = function(data, on, out) {\n  var i, j, n, m, d, t;\n  for (i=0, n=data.length; i<n; ++i) {\n    d = data[i];\n    for (j=0, m=on.field.length; j<m; ++j) {\n      t = this._tuple(d, j, m);\n      Tuple.set(t, this._output.key, on.field[j]);\n      Tuple.set(t, this._output.value, on.accessor[j](d));\n      out.push(t);\n    }\n  }\n};\n\nprototype.transform = function(input, reset) {\n  log.debug(input, ['folding']);\n\n  var fold = this,\n      on = this.param('fields'),\n      output = df.ChangeSet.create(input);\n\n  if (reset) this._reset(input, output);\n\n  this._fn(input.add, on, output.add);\n  this._fn(input.mod, on, reset ? output.add : output.mod);\n  input.rem.forEach(function(x) {\n    output.rem.push.apply(output.rem, fold._cache[x._id]);\n    fold._cache[x._id] = null;\n  });\n\n  // If we're only propagating values, don't mark key/value as updated.\n  if (input.add.length || input.rem.length ||\n      on.field.some(function(f) { return !!input.fields[f]; })) {\n    output.fields[this._output.key] = 1;\n    output.fields[this._output.value] = 1;\n  }\n  return output;\n};\n\nmodule.exports = Fold;\n\nFold.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Fold transform\",\n  \"description\": \"Collapse (\\\"fold\\\") one or more data properties into two properties.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"fold\"]},\n    \"fields\": {\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"description\": \"An array of field references indicating the data properties to fold.\",\n          \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]},\n          \"minItems\": 1,\n          \"uniqueItems\": true\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ]\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"key\": {\"type\": \"string\", \"default\": \"key\"},\n        \"value\": {\"type\": \"string\", \"default\": \"value\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\", \"fields\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Fold.js\n// module id = MZ+b\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../channel');\nvar fielddef_1 = require('../fielddef');\nvar sort_1 = require('../sort');\nvar type_1 = require('../type');\nvar util_1 = require('../util');\nvar facet_1 = require('./facet');\nvar layer_1 = require('./layer');\nvar timeunit_1 = require('../timeunit');\nvar unit_1 = require('./unit');\nvar spec_1 = require('../spec');\nfunction buildModel(spec, parent, parentGivenName) {\n    if (spec_1.isFacetSpec(spec)) {\n        return new facet_1.FacetModel(spec, parent, parentGivenName);\n    }\n    if (spec_1.isLayerSpec(spec)) {\n        return new layer_1.LayerModel(spec, parent, parentGivenName);\n    }\n    if (spec_1.isUnitSpec(spec)) {\n        return new unit_1.UnitModel(spec, parent, parentGivenName);\n    }\n    console.error('Invalid spec.');\n    return null;\n}\nexports.buildModel = buildModel;\nexports.STROKE_CONFIG = ['stroke', 'strokeWidth',\n    'strokeDash', 'strokeDashOffset', 'strokeOpacity', 'opacity'];\nexports.FILL_CONFIG = ['fill', 'fillOpacity',\n    'opacity'];\nexports.FILL_STROKE_CONFIG = util_1.union(exports.STROKE_CONFIG, exports.FILL_CONFIG);\nfunction applyColorAndOpacity(p, model) {\n    var filled = model.config().mark.filled;\n    var colorFieldDef = model.fieldDef(channel_1.COLOR);\n    var opacityFieldDef = model.fieldDef(channel_1.OPACITY);\n    if (filled) {\n        applyMarkConfig(p, model, exports.FILL_CONFIG);\n    }\n    else {\n        applyMarkConfig(p, model, exports.STROKE_CONFIG);\n    }\n    var colorValue;\n    var opacityValue;\n    if (model.has(channel_1.COLOR)) {\n        colorValue = {\n            scale: model.scaleName(channel_1.COLOR),\n            field: model.field(channel_1.COLOR, colorFieldDef.type === type_1.ORDINAL ? { prefn: 'rank_' } : {})\n        };\n    }\n    else if (colorFieldDef && colorFieldDef.value) {\n        colorValue = { value: colorFieldDef.value };\n    }\n    if (model.has(channel_1.OPACITY)) {\n        opacityValue = {\n            scale: model.scaleName(channel_1.OPACITY),\n            field: model.field(channel_1.OPACITY, opacityFieldDef.type === type_1.ORDINAL ? { prefn: 'rank_' } : {})\n        };\n    }\n    else if (opacityFieldDef && opacityFieldDef.value) {\n        opacityValue = { value: opacityFieldDef.value };\n    }\n    if (colorValue !== undefined) {\n        if (filled) {\n            p.fill = colorValue;\n        }\n        else {\n            p.stroke = colorValue;\n        }\n    }\n    else {\n        p[filled ? 'fill' : 'stroke'] = p[filled ? 'fill' : 'stroke'] ||\n            { value: model.config().mark.color };\n    }\n    if (opacityValue !== undefined) {\n        p.opacity = opacityValue;\n    }\n}\nexports.applyColorAndOpacity = applyColorAndOpacity;\nfunction applyConfig(properties, config, propsList) {\n    propsList.forEach(function (property) {\n        var value = config[property];\n        if (value !== undefined) {\n            properties[property] = { value: value };\n        }\n    });\n    return properties;\n}\nexports.applyConfig = applyConfig;\nfunction applyMarkConfig(marksProperties, model, propsList) {\n    return applyConfig(marksProperties, model.config().mark, propsList);\n}\nexports.applyMarkConfig = applyMarkConfig;\nfunction numberFormat(fieldDef, format, config) {\n    if (fieldDef.type === type_1.QUANTITATIVE && !fieldDef.bin) {\n        return format || config.numberFormat;\n    }\n    return undefined;\n}\nexports.numberFormat = numberFormat;\nfunction sortField(orderChannelDef) {\n    return (orderChannelDef.sort === sort_1.SortOrder.DESCENDING ? '-' : '') +\n        fielddef_1.field(orderChannelDef, { binSuffix: '_mid' });\n}\nexports.sortField = sortField;\nfunction timeTemplate(templateField, timeUnit, format, shortTimeLabels, config) {\n    if (!timeUnit || format) {\n        var _format = format || config.timeFormat;\n        return '{{' + templateField + ' | time:\\'' + _format + '\\'}}';\n    }\n    else {\n        return timeunit_1.template(timeUnit, templateField, shortTimeLabels);\n    }\n}\nexports.timeTemplate = timeTemplate;\n//# sourceMappingURL=common.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/common.js\n// module id = MtYt\n// module chunks = 0","var DOM = require('../../util/dom'),\n    Handler = require('../Handler');\n\nfunction SVGHandler() {\n  Handler.call(this);\n}\n\nvar base = Handler.prototype;\nvar prototype = (SVGHandler.prototype = Object.create(base));\nprototype.constructor = SVGHandler;\n\nprototype.initialize = function(el, pad, obj) {\n  this._svg = DOM.find(el, 'svg');\n  return base.initialize.call(this, el, pad, obj);\n};\n\nprototype.svg = function() {\n  return this._svg;\n};\n\n// wrap an event listener for the SVG DOM\nprototype.listener = function(handler) {\n  var that = this;\n  return function(evt) {\n    var target = evt.target,\n        item = target.__data__;\n    evt.vegaType = evt.type;\n    item = Array.isArray(item) ? item[0] : item;\n    handler.call(that._obj, evt, item);\n  };\n};\n\n// add an event handler\nprototype.on = function(type, handler) {\n  var name = this.eventName(type),\n      svg = this._svg,\n      h = this._handlers,\n      x = {\n        type:     type,\n        handler:  handler,\n        listener: this.listener(handler)\n      };\n\n  (h[name] || (h[name] = [])).push(x);\n  svg.addEventListener(name, x.listener);\n  return this;\n};\n\n// remove an event handler\nprototype.off = function(type, handler) {\n  var name = this.eventName(type),\n      svg = this._svg,\n      h = this._handlers[name], i;\n  if (!h) return;\n  for (i=h.length; --i>=0;) {\n    if (h[i].type === type && !handler || h[i].handler === handler) {\n      svg.removeEventListener(name, h[i].listener);\n      h.splice(i, 1);\n    }\n  }\n  return this;\n};\n\nmodule.exports = SVGHandler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/render/svg/SVGHandler.js\n// module id = N4b/\n// module chunks = 0","var d3 = require('d3'),\n    dl = require('datalib'),\n    df = require('vega-dataflow'),\n    log = require('vega-logging'),\n    Node = df.Node, // jshint ignore:line\n    Deps = df.Dependencies,\n    Aggregate = require('../transforms/Aggregate');\n\nvar Properties = {\n  width: 1,\n  height: 1\n};\n\nvar Types = {\n  LINEAR: 'linear',\n  ORDINAL: 'ordinal',\n  LOG: 'log',\n  POWER: 'pow',\n  SQRT: 'sqrt',\n  TIME: 'time',\n  TIME_UTC: 'utc',\n  QUANTILE: 'quantile',\n  QUANTIZE: 'quantize',\n  THRESHOLD: 'threshold'\n};\n\nvar DataRef = {\n  DOMAIN: 'domain',\n  RANGE: 'range',\n\n  COUNT: 'count',\n  GROUPBY: 'groupby',\n  MIN: 'min',\n  MAX: 'max',\n  VALUE: 'value',\n\n  ASC: 'asc',\n  DESC: 'desc'\n};\n\nfunction Scale(graph, def, parent) {\n  this._def     = def;\n  this._parent  = parent;\n  this._updated = false;\n  return Node.prototype.init.call(this, graph).reflows(true);\n}\n\nvar proto = (Scale.prototype = new Node());\n\nproto.evaluate = function(input) {\n  var self = this,\n      fn = function(group) { scale.call(self, group); };\n\n  this._updated = false;\n  input.add.forEach(fn);\n  input.mod.forEach(fn);\n\n  // Scales are at the end of an encoding pipeline, so they should forward a\n  // reflow pulse. Thus, if multiple scales update in the parent group, we don't\n  // reevaluate child marks multiple times.\n  if (this._updated) {\n    input.scales[this._def.name] = 1;\n    log.debug(input, [\"scale\", this._def.name]);\n  }\n  return df.ChangeSet.create(input, true);\n};\n\n// All of a scale's dependencies are registered during propagation as we parse\n// dataRefs. So a scale must be responsible for connecting itself to dependents.\nproto.dependency = function(type, deps) {\n  if (arguments.length == 2) {\n    var method = (type === Deps.DATA ? 'data' : 'signal');\n    deps = dl.array(deps);\n    for (var i=0, len=deps.length; i<len; ++i) {\n      this._graph[method](deps[i]).addListener(this._parent);\n    }\n  }\n\n  return Node.prototype.dependency.call(this, type, deps);\n};\n\nfunction scale(group) {\n  var name = this._def.name,\n      prev = name + ':prev',\n      s = instance.call(this, group.scale(name)),\n      m = s.type===Types.ORDINAL ? ordinal : quantitative,\n      rng = range.call(this, group);\n\n  m.call(this, s, rng, group);\n\n  group.scale(name, s);\n  group.scale(prev, group.scale(prev) || s);\n\n  return s;\n}\n\nfunction instance(scale) {\n  var config = this._graph.config(),\n      type = this._def.type || Types.LINEAR;\n  if (!scale || type !== scale.type) {\n    var ctor = config.scale[type] || d3.scale[type];\n    if (!ctor) throw Error('Unrecognized scale type: ' + type);\n    (scale = ctor()).type = scale.type || type;\n    scale.scaleName = this._def.name;\n    scale._prev = {};\n  }\n  return scale;\n}\n\nfunction ordinal(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      dataDrivenRange = false,\n      pad = signal.call(this, def.padding) || 0,\n      outer  = def.outerPadding == null ? pad : signal.call(this, def.outerPadding),\n      points = def.points && signal.call(this, def.points),\n      round  = signal.call(this, def.round) || def.round == null,\n      domain, str, spatial=true;\n\n  // range pre-processing for data-driven ranges\n  if (dl.isObject(def.range) && !dl.isArray(def.range)) {\n    dataDrivenRange = true;\n    rng = dataRef.call(this, DataRef.RANGE, def.range, scale, group);\n  }\n\n  // domain\n  domain = dataRef.call(this, DataRef.DOMAIN, def.domain, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  }\n\n  // range\n  if (!dl.equal(prev.range, rng)) {\n    // width-defined range\n    if (def.bandSize) {\n      var bw = signal.call(this, def.bandSize),\n          len = domain.length,\n          space = def.points ? (pad*bw) : (pad*bw*(len-1) + 2*outer),\n          start;\n      if (rng[0] > rng[1]) {\n        start = rng[1] || 0;\n        rng = [start + (bw * len + space), start];\n      } else {\n        start = rng[0] || 0;\n        rng = [start, start + (bw * len + space)];\n      }\n\n      if (def.reverse) rng = rng.reverse();\n    }\n\n    str = typeof rng[0] === 'string';\n    if (str || rng.length > 2 || rng.length===1 || dataDrivenRange) {\n      scale.range(rng); // color or shape values\n      spatial = false;\n    } else if (points && round) {\n      scale.rangeRoundPoints(rng, pad);\n    } else if (points) {\n      scale.rangePoints(rng, pad);\n    } else if (round) {\n      scale.rangeRoundBands(rng, pad, outer);\n    } else {\n      scale.rangeBands(rng, pad, outer);\n    }\n\n    prev.range = rng;\n    this._updated = true;\n  }\n\n  if (!scale.invert && spatial) invertOrdinal(scale);\n}\n\n// \"Polyfill\" ordinal scale inversion. Currently, only ordinal scales\n// with ordered numeric ranges are supported.\nvar bisect = d3.bisector(dl.numcmp).right,\n    findAsc = function(a, x) { return bisect(a,x) - 1; },\n    findDsc = d3.bisector(function(a,b) { return -1 * dl.numcmp(a,b); }).left;\n\nfunction invertOrdinal(scale) {\n  scale.invert = function(x, y) {\n    var rng = scale.range(),\n        asc = rng[0] < rng[1],\n        find = asc ? findAsc : findDsc;\n\n    if (arguments.length === 1) {\n      if (!dl.isNumber(x)) {\n        throw Error('Ordinal scale inversion is only supported for numeric input ('+x+').');\n      }\n      return scale.domain()[find(rng, x)];\n\n    } else if (arguments.length === 2) {  // Invert extents\n      if (!dl.isNumber(x) || !dl.isNumber(y)) {\n        throw Error('Extents to ordinal invert are not numbers ('+x+', '+y+').');\n      }\n\n      var domain = scale.domain(),\n          a = find(rng, x),\n          b = find(rng, y),\n          n = rng.length - 1, r;\n      if (b < a) { r = a; a = b; b = a; } // ensure a <= b\n      if (a < 0) a = 0;\n      if (b > n) b = n;\n\n      return (asc ? dl.range(a, b+1) : dl.range(b, a-1, -1))\n        .map(function(i) { return domain[i]; });\n    }\n  };\n}\n\nfunction quantitative(scale, rng, group) {\n  var def = this._def,\n      prev = scale._prev,\n      round = signal.call(this, def.round),\n      exponent = signal.call(this, def.exponent),\n      clamp = signal.call(this, def.clamp),\n      nice = signal.call(this, def.nice),\n      domain, interval;\n\n  // domain\n  domain = (def.type === Types.QUANTILE) ?\n    dataRef.call(this, DataRef.DOMAIN, def.domain, scale, group) :\n    domainMinMax.call(this, scale, group);\n  if (domain && !dl.equal(prev.domain, domain)) {\n    scale.domain(domain);\n    prev.domain = domain;\n    this._updated = true;\n  }\n\n  // range\n  // vertical scales should flip by default, so use XOR here\n  if (signal.call(this, def.range) === 'height') rng = rng.reverse();\n  if (rng && !dl.equal(prev.range, rng)) {\n    scale[round && scale.rangeRound ? 'rangeRound' : 'range'](rng);\n    prev.range = rng;\n    this._updated = true;\n  }\n\n  if (exponent && def.type===Types.POWER) scale.exponent(exponent);\n  if (clamp) scale.clamp(true);\n  if (nice) {\n    if (def.type === Types.TIME) {\n      interval = d3.time[nice];\n      if (!interval) log.error('Unrecognized interval: ' + interval);\n      scale.nice(interval);\n    } else {\n      scale.nice();\n    }\n  }\n}\n\nfunction isUniques(scale) {\n  return scale.type === Types.ORDINAL || scale.type === Types.QUANTILE;\n}\n\nfunction getRefs(def) {\n  return def.fields || dl.array(def);\n}\n\nfunction inherits(refs) {\n  return refs.some(function(r) {\n    if (!r.data) return true;\n    return r.data && dl.array(r.field).some(function(f) {\n      return f.parent;\n    });\n  });\n}\n\nfunction getFields(ref, group) {\n  return dl.array(ref.field).map(function(f) {\n    return f.parent ?\n      dl.accessor(f.parent)(group.datum) :\n      f; // String or {'signal'}\n  });\n}\n\n// Scale datarefs can be computed over multiple schema types.\n// This function determines the type of aggregator created, and\n// what data is sent to it: values, tuples, or multi-tuples that must\n// be standardized into a consistent schema.\nfunction aggrType(def, scale) {\n  var refs = getRefs(def);\n\n  // If we're operating over only a single domain, send full tuples\n  // through for efficiency (fewer accessor creations/calls)\n  if (refs.length == 1 && dl.array(refs[0].field).length == 1) {\n    return Aggregate.TYPES.TUPLE;\n  }\n\n  // With quantitative scales, we only care about min/max.\n  if (!isUniques(scale)) return Aggregate.TYPES.VALUE;\n\n  // If we don't sort, then we can send values directly to aggrs as well\n  if (!dl.isObject(def.sort)) return Aggregate.TYPES.VALUE;\n\n  return Aggregate.TYPES.MULTI;\n}\n\nfunction getCache(which, def, scale, group) {\n  var refs = getRefs(def),\n      inherit = inherits(refs),\n      atype = aggrType(def, scale),\n      uniques = isUniques(scale),\n      sort = def.sort,\n      ck = '_'+which,\n      fields = getFields(refs[0], group);\n\n  if (scale[ck] || this[ck]) return scale[ck] || this[ck];\n\n  var cache = new Aggregate(this._graph).type(atype),\n      groupby, summarize;\n\n  // If a scale's dataref doesn't inherit data from the group, we can\n  // store the dataref aggregator at the Scale (dataflow node) level.\n  if (inherit) {\n    scale[ck] = cache;\n  } else {\n    this[ck]  = cache;\n  }\n\n  if (uniques) {\n    if (atype === Aggregate.TYPES.VALUE) {\n      groupby = [{ name: DataRef.GROUPBY, get: dl.identity }];\n      summarize = {'*': DataRef.COUNT};\n    } else if (atype === Aggregate.TYPES.TUPLE) {\n      groupby = [{ name: DataRef.GROUPBY, get: dl.$(fields[0]) }];\n      summarize = dl.isObject(sort) ? [{\n        field: DataRef.VALUE,\n        get:  dl.$(sort.field),\n        ops: [sort.op]\n      }] : {'*': DataRef.COUNT};\n    } else {  // atype === Aggregate.TYPES.MULTI\n      groupby   = DataRef.GROUPBY;\n      summarize = [{ field: DataRef.VALUE, ops: [sort.op] }];\n    }\n  } else {\n    groupby = [];\n    summarize = [{\n      field: DataRef.VALUE,\n      get: (atype == Aggregate.TYPES.TUPLE) ? dl.$(fields[0]) : dl.identity,\n      ops: [DataRef.MIN, DataRef.MAX],\n      as:  [DataRef.MIN, DataRef.MAX]\n    }];\n  }\n\n  cache.param('groupby', groupby)\n    .param('summarize', summarize);\n\n  return (cache._lastUpdate = -1, cache);\n}\n\nfunction dataRef(which, def, scale, group) {\n  if (def == null) { return []; }\n  if (dl.isArray(def)) return def.map(signal.bind(this));\n\n  var self = this, graph = this._graph,\n      refs = getRefs(def),\n      inherit = inherits(refs),\n      atype = aggrType(def, scale),\n      cache = getCache.apply(this, arguments),\n      sort  = def.sort,\n      uniques = isUniques(scale),\n      i, rlen, j, flen, ref, fields, field, data, from, cmp;\n\n  function addDep(s) {\n    self.dependency(Deps.SIGNALS, s);\n  }\n\n  if (inherit || (!inherit && cache._lastUpdate < this._stamp)) {\n    for (i=0, rlen=refs.length; i<rlen; ++i) {\n      ref = refs[i];\n      from = ref.data || group.datum._facetID;\n      data = graph.data(from).last();\n\n      if (data.stamp <= this._stamp) continue;\n\n      fields = getFields(ref, group);\n      for (j=0, flen=fields.length; j<flen; ++j) {\n        field = fields[j];\n\n        if (atype === Aggregate.TYPES.VALUE) {\n          cache.accessors(null, field);\n        } else if (atype === Aggregate.TYPES.MULTI) {\n          cache.accessors(field, ref.sort || sort.field);\n        } // Else (Tuple-case) is handled by the aggregator accessors by default\n\n        cache.evaluate(data);\n      }\n\n      this.dependency(Deps.DATA, from);\n      cache.dependency(Deps.SIGNALS).forEach(addDep);\n    }\n\n    cache._lastUpdate = this._stamp;\n\n    data = cache.aggr().result();\n    if (uniques) {\n      if (dl.isObject(sort)) {\n        cmp = sort.op + '_' + DataRef.VALUE;\n        cmp = dl.comparator(cmp);\n      } else if (sort === true) {\n        cmp = dl.comparator(DataRef.GROUPBY);\n      }\n\n      if (cmp) data = data.sort(cmp);\n      cache._values = data.map(function(d) { return d[DataRef.GROUPBY]; });\n    } else {\n      data = data[0];\n      cache._values = !dl.isValid(data) ? [] : [data[DataRef.MIN], data[DataRef.MAX]];\n    }\n  }\n\n  return cache._values;\n}\n\nfunction signal(v) {\n  if (!v || !v.signal) return v;\n  var s = v.signal, ref;\n  this.dependency(Deps.SIGNALS, (ref = dl.field(s))[0]);\n  return this._graph.signalRef(ref);\n}\n\nfunction domainMinMax(scale, group) {\n  var def = this._def,\n      domain = [null, null], s, z;\n\n  if (def.domain !== undefined) {\n    domain = (!dl.isObject(def.domain)) ? domain :\n      dataRef.call(this, DataRef.DOMAIN, def.domain, scale, group);\n  }\n\n  z = domain.length - 1;\n  if (def.domainMin !== undefined) {\n    if (dl.isObject(def.domainMin)) {\n      if (def.domainMin.signal) {\n        domain[0] = dl.isValid(s=signal.call(this, def.domainMin)) ? s : domain[0];\n      } else {\n        domain[0] = dataRef.call(this, DataRef.DOMAIN+DataRef.MIN, def.domainMin, scale, group)[0];\n      }\n    } else {\n      domain[0] = def.domainMin;\n    }\n  }\n  if (def.domainMax !== undefined) {\n    if (dl.isObject(def.domainMax)) {\n      if (def.domainMax.signal) {\n        domain[z] = dl.isValid(s=signal.call(this, def.domainMax)) ? s : domain[z];\n      } else {\n        domain[z] = dataRef.call(this, DataRef.DOMAIN+DataRef.MAX, def.domainMax, scale, group)[1];\n      }\n    } else {\n      domain[z] = def.domainMax;\n    }\n  }\n  if (def.type !== Types.LOG && def.type !== Types.TIME && def.type !== Types.TIME_UTC && (def.zero || def.zero===undefined)) {\n    domain[0] = Math.min(0, domain[0]);\n    domain[z] = Math.max(0, domain[z]);\n  }\n  return domain;\n}\n\nfunction range(group) {\n  var def = this._def,\n      config = this._graph.config(),\n      rangeVal = signal.call(this, def.range),\n      rng = [null, null];\n\n  if (rangeVal !== undefined) {\n    if (typeof rangeVal === 'string') {\n      if (Properties[rangeVal]) {\n        rng = [0, group[rangeVal]];\n      } else if (config.range[rangeVal]) {\n        rng = config.range[rangeVal];\n      } else {\n        log.error('Unrecogized range: ' + rangeVal);\n        return rng;\n      }\n    } else if (dl.isArray(rangeVal)) {\n      rng = dl.duplicate(rangeVal).map(signal.bind(this));\n    } else if (dl.isObject(rangeVal)) {\n      return null; // early exit\n    } else {\n      rng = [0, rangeVal];\n    }\n  }\n  if (def.rangeMin !== undefined) {\n    rng[0] = def.rangeMin.signal ?\n      signal.call(this, def.rangeMin) :\n      def.rangeMin;\n  }\n  if (def.rangeMax !== undefined) {\n    rng[rng.length-1] = def.rangeMax.signal ?\n      signal.call(this, def.rangeMax) :\n      def.rangeMax;\n  }\n\n  if (def.reverse !== undefined) {\n    var rev = signal.call(this, def.reverse);\n    if (dl.isObject(rev)) {\n      rev = dl.accessor(rev.field)(group.datum);\n    }\n    if (rev) rng = rng.reverse();\n  }\n\n  var start = rng[0], end = rng[rng.length-1];\n  if (start === null && end !== null || start !== null && end === null) {\n    log.error('Range is underspecified. Please ensure either the ' +\n      '\"range\" property or both \"rangeMin\" and \"rangeMax\" are specified.');\n  }\n\n  return rng;\n}\n\nmodule.exports = Scale;\n\nvar rangeDef = [\n  {\"enum\": [\"width\", \"height\", \"shapes\", \"category10\", \"category20\", \"category20b\", \"category20c\"]},\n  {\n    \"type\": \"array\",\n    \"items\": {\"oneOf\": [{\"type\":\"string\"}, {\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]}\n  },\n  {\"$ref\": \"#/refs/signal\"}\n];\n\nScale.schema = {\n  \"refs\": {\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"data\": {\n          \"oneOf\": [\n            {\"type\": \"string\"},\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"fields\": {\n                  \"type\": \"array\",\n                  \"items\": {\"$ref\": \"#/refs/data\"}\n                }\n              },\n              \"required\": [\"fields\"]\n            }\n          ]\n        },\n        \"field\": {\n          \"oneOf\": [\n            {\"type\": \"string\"},\n            {\n              \"type\": \"array\",\n              \"items\": {\"type\": \"string\"}\n            },\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"parent\": {\"type\": \"string\"}\n              },\n              \"required\": [\"parent\"]\n            },\n            {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"parent\": {\"type\": \"string\"}\n                },\n                \"required\": [\"parent\"]\n              }\n            }\n          ]\n        },\n        \"sort\": {\n          \"oneOf\": [{\"type\": \"boolean\"}, {\n            \"type\": \"object\",\n            \"properties\": {\n              \"field\": {\"type\": \"string\"},\n              \"op\": {\"enum\": require('../transforms/Aggregate').VALID_OPS}\n            }\n          }]\n        }\n      },\n      \"additionalProperties\": false\n    }\n  },\n\n  \"defs\": {\n    \"scale\": {\n      \"title\": \"Scale function\",\n      \"type\": \"object\",\n\n      \"allOf\": [{\n        \"properties\": {\n          \"name\": {\"type\": \"string\"},\n\n          \"type\": {\n            \"enum\": [Types.LINEAR, Types.ORDINAL, Types.TIME, Types.TIME_UTC, Types.LOG,\n              Types.POWER, Types.SQRT, Types.QUANTILE, Types.QUANTIZE, Types.THRESHOLD],\n            \"default\": Types.LINEAR\n          },\n\n          \"domain\": {\n            \"oneOf\": [\n              {\n                \"type\": \"array\",\n                \"items\": {\n                  \"oneOf\": [\n                    {\"type\":\"string\"},\n                    {\"type\": \"number\"},\n                    {\"$ref\": \"#/refs/signal\"}\n                  ]\n                }\n              },\n              {\"$ref\": \"#/refs/data\"},\n              {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"fields\": {\n                    \"type\": \"array\",\n                    \"items\": {\"$ref\": \"#/refs/data\"}\n                  }\n                },\n                \"required\": [\"fields\"],\n              }\n            ]\n          },\n\n          \"domainMin\": {\n            \"oneOf\": [\n              {\"type\": \"number\"},\n              {\"$ref\": \"#/refs/data\"},\n              {\"$ref\": \"#/refs/signal\"}\n            ]\n          },\n\n          \"domainMax\": {\n            \"oneOf\": [\n              {\"type\": \"number\"},\n              {\"$ref\": \"#/refs/data\"},\n              {\"$ref\": \"#/refs/signal\"}\n            ]\n          },\n\n          \"rangeMin\": {\n            \"oneOf\": [\n              {\"type\":\"string\"},\n              {\"type\": \"number\"},\n              {\"$ref\": \"#/refs/signal\"}\n            ]\n          },\n\n          \"rangeMax\": {\n            \"oneOf\": [\n              {\"type\":\"string\"},\n              {\"type\": \"number\"},\n              {\"$ref\": \"#/refs/signal\"}\n            ]\n          },\n\n          \"reverse\": {\n            \"oneOf\": [\n              {\"type\": \"boolean\"},\n              {\"$ref\": \"#/refs/data\"}\n            ],\n          },\n          \"round\": {\"type\": \"boolean\"}\n        },\n\n        \"required\": [\"name\"]\n      }, {\n        \"oneOf\": [{\n          \"properties\": {\n            \"type\": {\"enum\": [Types.ORDINAL]},\n\n            \"range\": {\n              \"oneOf\": rangeDef.concat({\"$ref\": \"#/refs/data\"})\n            },\n\n            \"points\": {\"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}]},\n            \"padding\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n            \"outerPadding\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n            \"bandSize\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]}\n          },\n          \"required\": [\"type\"]\n        }, {\n          \"properties\": {\n            \"type\": {\"enum\": [Types.TIME, Types.TIME_UTC]},\n            \"range\": {\"oneOf\": rangeDef},\n            \"clamp\": {\"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}]},\n            \"nice\": {\"oneOf\": [{\"enum\": [\"second\", \"minute\", \"hour\",\n              \"day\", \"week\", \"month\", \"year\"]}, {\"$ref\": \"#/refs/signal\"}]}\n          },\n          \"required\": [\"type\"]\n        }, {\n          \"anyOf\": [{\n            \"properties\": {\n              \"type\": {\"enum\": [Types.LINEAR, Types.LOG, Types.POWER, Types.SQRT,\n                Types.QUANTILE, Types.QUANTIZE, Types.THRESHOLD], \"default\": Types.LINEAR},\n              \"range\": {\"oneOf\": rangeDef},\n              \"clamp\": {\"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}]},\n              \"nice\": {\"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}]},\n              \"zero\": {\"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}]}\n            }\n          }, {\n            \"properties\": {\n              \"type\": {\"enum\": [Types.POWER]},\n              \"exponent\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]}\n            },\n            \"required\": [\"type\"]\n          }]\n        }]\n      }]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/Scale.js\n// module id = NNYs\n// module chunks = 0","var log = require('vega-logging'),\n    Tuple = require('./Tuple'),\n    Base = require('./Node').prototype,\n    ChangeSet = require('./ChangeSet');\n\nfunction Collector(graph) {\n  Base.init.call(this, graph);\n  this._data = [];\n  this.router(true).collector(true);\n}\n\nvar prototype = (Collector.prototype = Object.create(Base));\nprototype.constructor = Collector;\n\nprototype.data = function() {\n  return this._data;\n};\n\nprototype.evaluate = function(input) {\n  log.debug(input, [\"collecting\"]);\n\n  // Create a new output changeset to prevent pollution when the Graph\n  // merges reflow and regular changesets.\n  var output = ChangeSet.create(input);\n\n  if (input.rem.length) {\n    this._data = Tuple.idFilter(this._data, input.rem);\n    output.rem = input.rem.slice(0);\n  }\n\n  if (input.add.length) {\n    this._data = this._data.concat(input.add);\n    output.add = input.add.slice(0);\n  }\n\n  if (input.mod.length) {\n    output.mod = input.mod.slice(0);\n  }\n\n  if (input.sort) {\n    this._data.sort(input.sort);\n  }\n\n  if (input.reflow) {\n    output.mod = output.mod.concat(\n      Tuple.idFilter(this._data, output.add, output.mod, output.rem));\n    output.reflow = false;\n  }\n\n  return output;\n};\n\nmodule.exports = Collector;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-dataflow/src/Collector.js\n// module id = NQGN\n// module chunks = 0","module.exports = {\"name\":\"datalib\",\"version\":\"1.8.0\",\"description\":\"JavaScript utilites for loading, summarizing and working with data.\",\"keywords\":[\"data\",\"table\",\"statistics\",\"parse\",\"csv\",\"tsv\",\"json\",\"utility\"],\"repository\":{\"type\":\"git\",\"url\":\"http://github.com/vega/datalib.git\"},\"author\":{\"name\":\"Jeffrey Heer\",\"url\":\"http://idl.cs.washington.edu\"},\"contributors\":[{\"name\":\"Michael Correll\",\"url\":\"http://pages.cs.wisc.edu/~mcorrell/\"},{\"name\":\"Ryan Russell\",\"url\":\"https://github.com/RussellSprouts\"}],\"license\":\"BSD-3-Clause\",\"dependencies\":{\"d3-dsv\":\"0.1\",\"d3-format\":\"0.4\",\"d3-time\":\"0.1\",\"d3-time-format\":\"0.2\",\"topojson\":\"^1.6.19\",\"request\":\"^2.67.0\",\"sync-request\":\"^2.1.0\"},\"devDependencies\":{\"browserify\":\"^12.0.1\",\"chai\":\"^3.4.1\",\"istanbul\":\"latest\",\"jshint\":\"^2.9.1-rc1\",\"mocha\":\"^2.3.4\",\"uglify-js\":\"^2.6.1\"},\"main\":\"src/index.js\",\"scripts\":{\"deploy\":\"npm run test && scripts/deploy.sh\",\"lint\":\"jshint src/\",\"test\":\"npm run lint && TZ=America/Los_Angeles mocha --recursive test/\",\"cover\":\"TZ=America/Los_Angeles istanbul cover _mocha -- --recursive test/\",\"build\":\"browserify src/index.js -d -s dl -o datalib.js\",\"postbuild\":\"uglifyjs datalib.js -c -m -o datalib.min.js\"},\"browser\":{\"buffer\":false,\"fs\":false,\"http\":false,\"request\":false,\"sync-request\":false,\"url\":false}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/package.json\n// module id = NdEd\n// module chunks = 0","// Word cloud layout by Jason Davies, https://www.jasondavies.com/wordcloud/\n// Algorithm due to Jonathan Feinberg, http://static.mrfeinberg.com/bv_ch03.pdf\n\nvar dispatch = require(\"d3-dispatch\").dispatch;\n\nvar cloudRadians = Math.PI / 180,\n    cw = 1 << 11 >> 5,\n    ch = 1 << 11;\n\nmodule.exports = function() {\n  var size = [256, 256],\n      text = cloudText,\n      font = cloudFont,\n      fontSize = cloudFontSize,\n      fontStyle = cloudFontNormal,\n      fontWeight = cloudFontNormal,\n      rotate = cloudRotate,\n      padding = cloudPadding,\n      spiral = archimedeanSpiral,\n      words = [],\n      timeInterval = Infinity,\n      event = dispatch(\"word\", \"end\"),\n      timer = null,\n      random = Math.random,\n      cloud = {},\n      canvas = cloudCanvas;\n\n  cloud.canvas = function(_) {\n    return arguments.length ? (canvas = functor(_), cloud) : canvas;\n  };\n\n  cloud.start = function() {\n    var contextAndRatio = getContext(canvas()),\n        board = zeroArray((size[0] >> 5) * size[1]),\n        bounds = null,\n        n = words.length,\n        i = -1,\n        tags = [],\n        data = words.map(function(d, i) {\n          d.text = text.call(this, d, i);\n          d.font = font.call(this, d, i);\n          d.style = fontStyle.call(this, d, i);\n          d.weight = fontWeight.call(this, d, i);\n          d.rotate = rotate.call(this, d, i);\n          d.size = ~~fontSize.call(this, d, i);\n          d.padding = padding.call(this, d, i);\n          return d;\n        }).sort(function(a, b) { return b.size - a.size; });\n\n    if (timer) clearInterval(timer);\n    timer = setInterval(step, 0);\n    step();\n\n    return cloud;\n\n    function step() {\n      var start = Date.now();\n      while (Date.now() - start < timeInterval && ++i < n && timer) {\n        var d = data[i];\n        d.x = (size[0] * (random() + .5)) >> 1;\n        d.y = (size[1] * (random() + .5)) >> 1;\n        cloudSprite(contextAndRatio, d, data, i);\n        if (d.hasText && place(board, d, bounds)) {\n          tags.push(d);\n          event.call(\"word\", cloud, d);\n          if (bounds) cloudBounds(bounds, d);\n          else bounds = [{x: d.x + d.x0, y: d.y + d.y0}, {x: d.x + d.x1, y: d.y + d.y1}];\n          // Temporary hack\n          d.x -= size[0] >> 1;\n          d.y -= size[1] >> 1;\n        }\n      }\n      if (i >= n) {\n        cloud.stop();\n        event.call(\"end\", cloud, tags, bounds);\n      }\n    }\n  }\n\n  cloud.stop = function() {\n    if (timer) {\n      clearInterval(timer);\n      timer = null;\n    }\n    return cloud;\n  };\n\n  function getContext(canvas) {\n    canvas.width = canvas.height = 1;\n    var ratio = Math.sqrt(canvas.getContext(\"2d\").getImageData(0, 0, 1, 1).data.length >> 2);\n    canvas.width = (cw << 5) / ratio;\n    canvas.height = ch / ratio;\n\n    var context = canvas.getContext(\"2d\");\n    context.fillStyle = context.strokeStyle = \"red\";\n    context.textAlign = \"center\";\n\n    return {context: context, ratio: ratio};\n  }\n\n  function place(board, tag, bounds) {\n    var perimeter = [{x: 0, y: 0}, {x: size[0], y: size[1]}],\n        startX = tag.x,\n        startY = tag.y,\n        maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]),\n        s = spiral(size),\n        dt = random() < .5 ? 1 : -1,\n        t = -dt,\n        dxdy,\n        dx,\n        dy;\n\n    while (dxdy = s(t += dt)) {\n      dx = ~~dxdy[0];\n      dy = ~~dxdy[1];\n\n      if (Math.min(Math.abs(dx), Math.abs(dy)) >= maxDelta) break;\n\n      tag.x = startX + dx;\n      tag.y = startY + dy;\n\n      if (tag.x + tag.x0 < 0 || tag.y + tag.y0 < 0 ||\n          tag.x + tag.x1 > size[0] || tag.y + tag.y1 > size[1]) continue;\n      // TODO only check for collisions within current bounds.\n      if (!bounds || !cloudCollide(tag, board, size[0])) {\n        if (!bounds || collideRects(tag, bounds)) {\n          var sprite = tag.sprite,\n              w = tag.width >> 5,\n              sw = size[0] >> 5,\n              lx = tag.x - (w << 4),\n              sx = lx & 0x7f,\n              msx = 32 - sx,\n              h = tag.y1 - tag.y0,\n              x = (tag.y + tag.y0) * sw + (lx >> 5),\n              last;\n          for (var j = 0; j < h; j++) {\n            last = 0;\n            for (var i = 0; i <= w; i++) {\n              board[x + i] |= (last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);\n            }\n            x += sw;\n          }\n          delete tag.sprite;\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  cloud.timeInterval = function(_) {\n    return arguments.length ? (timeInterval = _ == null ? Infinity : _, cloud) : timeInterval;\n  };\n\n  cloud.words = function(_) {\n    return arguments.length ? (words = _, cloud) : words;\n  };\n\n  cloud.size = function(_) {\n    return arguments.length ? (size = [+_[0], +_[1]], cloud) : size;\n  };\n\n  cloud.font = function(_) {\n    return arguments.length ? (font = functor(_), cloud) : font;\n  };\n\n  cloud.fontStyle = function(_) {\n    return arguments.length ? (fontStyle = functor(_), cloud) : fontStyle;\n  };\n\n  cloud.fontWeight = function(_) {\n    return arguments.length ? (fontWeight = functor(_), cloud) : fontWeight;\n  };\n\n  cloud.rotate = function(_) {\n    return arguments.length ? (rotate = functor(_), cloud) : rotate;\n  };\n\n  cloud.text = function(_) {\n    return arguments.length ? (text = functor(_), cloud) : text;\n  };\n\n  cloud.spiral = function(_) {\n    return arguments.length ? (spiral = spirals[_] || _, cloud) : spiral;\n  };\n\n  cloud.fontSize = function(_) {\n    return arguments.length ? (fontSize = functor(_), cloud) : fontSize;\n  };\n\n  cloud.padding = function(_) {\n    return arguments.length ? (padding = functor(_), cloud) : padding;\n  };\n\n  cloud.random = function(_) {\n    return arguments.length ? (random = _, cloud) : random;\n  };\n\n  cloud.on = function() {\n    var value = event.on.apply(event, arguments);\n    return value === event ? cloud : value;\n  };\n\n  return cloud;\n};\n\nfunction cloudText(d) {\n  return d.text;\n}\n\nfunction cloudFont() {\n  return \"serif\";\n}\n\nfunction cloudFontNormal() {\n  return \"normal\";\n}\n\nfunction cloudFontSize(d) {\n  return Math.sqrt(d.value);\n}\n\nfunction cloudRotate() {\n  return (~~(Math.random() * 6) - 3) * 30;\n}\n\nfunction cloudPadding() {\n  return 1;\n}\n\n// Fetches a monochrome sprite bitmap for the specified text.\n// Load in batches for speed.\nfunction cloudSprite(contextAndRatio, d, data, di) {\n  if (d.sprite) return;\n  var c = contextAndRatio.context,\n      ratio = contextAndRatio.ratio;\n\n  c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);\n  var x = 0,\n      y = 0,\n      maxh = 0,\n      n = data.length;\n  --di;\n  while (++di < n) {\n    d = data[di];\n    c.save();\n    c.font = d.style + \" \" + d.weight + \" \" + ~~((d.size + 1) / ratio) + \"px \" + d.font;\n    var w = c.measureText(d.text + \"m\").width * ratio,\n        h = d.size << 1;\n    if (d.rotate) {\n      var sr = Math.sin(d.rotate * cloudRadians),\n          cr = Math.cos(d.rotate * cloudRadians),\n          wcr = w * cr,\n          wsr = w * sr,\n          hcr = h * cr,\n          hsr = h * sr;\n      w = (Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f) >> 5 << 5;\n      h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\n    } else {\n      w = (w + 0x1f) >> 5 << 5;\n    }\n    if (h > maxh) maxh = h;\n    if (x + w >= (cw << 5)) {\n      x = 0;\n      y += maxh;\n      maxh = 0;\n    }\n    if (y + h >= ch) break;\n    c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);\n    if (d.rotate) c.rotate(d.rotate * cloudRadians);\n    c.fillText(d.text, 0, 0);\n    if (d.padding) c.lineWidth = 2 * d.padding, c.strokeText(d.text, 0, 0);\n    c.restore();\n    d.width = w;\n    d.height = h;\n    d.xoff = x;\n    d.yoff = y;\n    d.x1 = w >> 1;\n    d.y1 = h >> 1;\n    d.x0 = -d.x1;\n    d.y0 = -d.y1;\n    d.hasText = true;\n    x += w;\n  }\n  var pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data,\n      sprite = [];\n  while (--di >= 0) {\n    d = data[di];\n    if (!d.hasText) continue;\n    var w = d.width,\n        w32 = w >> 5,\n        h = d.y1 - d.y0;\n    // Zero the buffer\n    for (var i = 0; i < h * w32; i++) sprite[i] = 0;\n    x = d.xoff;\n    if (x == null) return;\n    y = d.yoff;\n    var seen = 0,\n        seenRow = -1;\n    for (var j = 0; j < h; j++) {\n      for (var i = 0; i < w; i++) {\n        var k = w32 * j + (i >> 5),\n            m = pixels[((y + j) * (cw << 5) + (x + i)) << 2] ? 1 << (31 - (i % 32)) : 0;\n        sprite[k] |= m;\n        seen |= m;\n      }\n      if (seen) seenRow = j;\n      else {\n        d.y0++;\n        h--;\n        j--;\n        y++;\n      }\n    }\n    d.y1 = d.y0 + seenRow;\n    d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);\n  }\n}\n\n// Use mask-based collision detection.\nfunction cloudCollide(tag, board, sw) {\n  sw >>= 5;\n  var sprite = tag.sprite,\n      w = tag.width >> 5,\n      lx = tag.x - (w << 4),\n      sx = lx & 0x7f,\n      msx = 32 - sx,\n      h = tag.y1 - tag.y0,\n      x = (tag.y + tag.y0) * sw + (lx >> 5),\n      last;\n  for (var j = 0; j < h; j++) {\n    last = 0;\n    for (var i = 0; i <= w; i++) {\n      if (((last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0))\n          & board[x + i]) return true;\n    }\n    x += sw;\n  }\n  return false;\n}\n\nfunction cloudBounds(bounds, d) {\n  var b0 = bounds[0],\n      b1 = bounds[1];\n  if (d.x + d.x0 < b0.x) b0.x = d.x + d.x0;\n  if (d.y + d.y0 < b0.y) b0.y = d.y + d.y0;\n  if (d.x + d.x1 > b1.x) b1.x = d.x + d.x1;\n  if (d.y + d.y1 > b1.y) b1.y = d.y + d.y1;\n}\n\nfunction collideRects(a, b) {\n  return a.x + a.x1 > b[0].x && a.x + a.x0 < b[1].x && a.y + a.y1 > b[0].y && a.y + a.y0 < b[1].y;\n}\n\nfunction archimedeanSpiral(size) {\n  var e = size[0] / size[1];\n  return function(t) {\n    return [e * (t *= .1) * Math.cos(t), t * Math.sin(t)];\n  };\n}\n\nfunction rectangularSpiral(size) {\n  var dy = 4,\n      dx = dy * size[0] / size[1],\n      x = 0,\n      y = 0;\n  return function(t) {\n    var sign = t < 0 ? -1 : 1;\n    // See triangular numbers: T_n = n * (n + 1) / 2.\n    switch ((Math.sqrt(1 + 4 * sign * t) - sign) & 3) {\n      case 0:  x += dx; break;\n      case 1:  y += dy; break;\n      case 2:  x -= dx; break;\n      default: y -= dy; break;\n    }\n    return [x, y];\n  };\n}\n\n// TODO reuse arrays?\nfunction zeroArray(n) {\n  var a = [],\n      i = -1;\n  while (++i < n) a[i] = 0;\n  return a;\n}\n\nfunction cloudCanvas() {\n  return document.createElement(\"canvas\");\n}\n\nfunction functor(d) {\n  return typeof d === \"function\" ? d : function() { return d; };\n}\n\nvar spirals = {\n  archimedean: archimedeanSpiral,\n  rectangular: rectangularSpiral\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-cloud/index.js\n// module id = NobO\n// module chunks = 0","var dl = require('datalib');\n\nfunction parsePadding(pad) {\n  return pad == null ? 'auto' :\n    dl.isObject(pad) ? pad :\n    dl.isNumber(pad) ? {top:pad, left:pad, right:pad, bottom:pad} :\n    pad === 'strict' ? pad : 'auto';\n}\n\nmodule.exports = parsePadding;\nparsePadding.schema = {\n  \"defs\": {\n    \"padding\": {\n      \"oneOf\": [{\n        \"enum\": [\"strict\", \"auto\"]\n      }, {\n        \"type\": \"number\"\n      }, {\n        \"type\": \"object\",\n        \"properties\": {\n          \"top\": {\"type\": \"number\"},\n          \"bottom\": {\"type\": \"number\"},\n          \"left\": {\"type\": \"number\"},\n          \"right\": {\"type\": \"number\"}\n        },\n        \"additionalProperties\": false\n      }]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/padding.js\n// module id = O3lN\n// module chunks = 0","var dl = require('datalib'),\n    log = require('vega-logging'),\n    parseTransforms = require('./transforms'),\n    parseModify = require('./modify');\n\nfunction parseData(model, spec, callback) {\n  var config = model.config(),\n      count = 0;\n\n  function onError(error, d) {\n    log.error('PARSE DATA FAILED: ' + d.name + ' ' + error);\n    count = -1;\n    callback(error);\n  }\n\n  function onLoad(d) {\n    return function(error, data) {\n      if (error) {\n        onError(error, d);\n      } else if (count > 0) {\n        try {\n          model.data(d.name).values(dl.read(data, d.format));\n          if (--count === 0) callback();\n        } catch (err) {\n          onError(err, d);\n        }\n      }\n    };\n  }\n\n  // process each data set definition\n  (spec || []).forEach(function(d) {\n    if (d.url) {\n      count += 1;\n      dl.load(dl.extend({url: d.url}, config.load), onLoad(d));\n    }\n    try {\n      parseData.datasource(model, d);\n    } catch (err) {\n      onError(err, d);\n    }\n  });\n\n  if (count === 0) setTimeout(callback, 1);\n  return spec;\n}\n\nparseData.datasource = function(model, d) {\n  var transform = (d.transform || []).map(function(t) {\n        return parseTransforms(model, t);\n      }),\n      mod = (d.modify || []).map(function(m) {\n        return parseModify(model, m, d);\n      }),\n      ds = model.data(d.name, mod.concat(transform));\n\n  if (d.values) {\n    ds.values(dl.read(d.values, d.format));\n  } else if (d.source) {\n    // Derived ds will be pulsed by its src rather than the model.\n    ds.source(d.source).addListener(ds);\n    model.removeListener(ds.pipeline()[0]);\n  }\n\n  return ds;\n};\n\nmodule.exports = parseData;\n\nvar parseDef = {\n  \"oneOf\": [\n    {\"enum\": [\"auto\"]},\n    {\n      \"type\": \"object\",\n      \"additionalProperties\": {\n        \"enum\": [\"number\", \"boolean\", \"date\", \"string\"]\n      }\n    }\n  ]\n};\n\nparseData.schema = {\n  \"defs\": {\n    \"data\": {\n      \"title\": \"Input data set definition\",\n      \"type\": \"object\",\n\n      \"allOf\": [{\n        \"properties\": {\n          \"name\": {\"type\": \"string\"},\n          \"transform\": {\"$ref\": \"#/defs/transform\"},\n          \"modify\": {\"$ref\": \"#/defs/modify\"},\n          \"format\": {\n            \"type\": \"object\",\n            \"oneOf\": [{\n              \"properties\": {\n                \"type\": {\"enum\": [\"json\"]},\n                \"parse\": parseDef,\n                \"property\": {\"type\": \"string\"}\n              },\n              \"additionalProperties\": false\n            }, {\n              \"properties\": {\n                \"type\": {\"enum\": [\"csv\", \"tsv\"]},\n                \"parse\": parseDef\n              },\n              \"additionalProperties\": false\n            }, {\n              \"oneOf\": [{\n                \"properties\": {\n                  \"type\": {\"enum\": [\"topojson\"]},\n                  \"feature\": {\"type\": \"string\"}\n                },\n                \"additionalProperties\": false\n              }, {\n                \"properties\": {\n                  \"type\": {\"enum\": [\"topojson\"]},\n                  \"mesh\": {\"type\": \"string\"}\n                },\n                \"additionalProperties\": false\n              }]\n            }, {\n              \"properties\": {\n                \"type\": {\"enum\": [\"treejson\"]},\n                \"children\": {\"type\": \"string\"},\n                \"parse\": parseDef\n              },\n              \"additionalProperties\": false\n            }]\n          }\n        },\n        \"required\": [\"name\"]\n      }, {\n        \"anyOf\": [{\n          \"required\": [\"name\", \"modify\"]\n        }, {\n          \"oneOf\": [{\n            \"properties\": {\"source\": {\"type\": \"string\"}},\n            \"required\": [\"source\"]\n          }, {\n            \"properties\": {\"values\": {\"type\": \"array\"}},\n            \"required\": [\"values\"]\n          }, {\n            \"properties\": {\"url\": {\"type\": \"string\"}},\n            \"required\": [\"url\"]\n          }]\n        }]\n      }]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/data.js\n// module id = OTIj\n// module chunks = 0","var util = require('./util'),\n    EMPTY = [];\n\nfunction draw(g, scene, bounds) {\n  if (!scene.items || !scene.items.length) return;\n\n  var groups = scene.items,\n      renderer = this,\n      group, items, axes, legends, gx, gy, w, h, opac, i, n, j, m;\n\n  for (i=0, n=groups.length; i<n; ++i) {\n    group = groups[i];\n    axes = group.axisItems || EMPTY;\n    items = group.items || EMPTY;\n    legends = group.legendItems || EMPTY;\n    gx = group.x || 0;\n    gy = group.y || 0;\n    w = group.width || 0;\n    h = group.height || 0;\n\n    // draw group background\n    if (group.stroke || group.fill) {\n      opac = group.opacity == null ? 1 : group.opacity;\n      if (opac > 0) {\n        if (group.fill && util.fill(g, group, opac)) {\n          g.fillRect(gx, gy, w, h);\n        }\n        if (group.stroke && util.stroke(g, group, opac)) {\n          g.strokeRect(gx, gy, w, h);\n        }\n      }\n    }\n\n    // setup graphics context\n    g.save();\n    g.translate(gx, gy);\n    if (group.clip) {\n      g.beginPath();\n      g.rect(0, 0, w, h);\n      g.clip();\n    }\n    if (bounds) bounds.translate(-gx, -gy);\n\n    // draw group contents\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].layer === 'back') {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=items.length; j<m; ++j) {\n      renderer.draw(g, items[j], bounds);\n    }\n    for (j=0, m=axes.length; j<m; ++j) {\n      if (axes[j].layer !== 'back') {\n        renderer.draw(g, axes[j], bounds);\n      }\n    }\n    for (j=0, m=legends.length; j<m; ++j) {\n      renderer.draw(g, legends[j], bounds);\n    }\n\n    // restore graphics context\n    if (bounds) bounds.translate(gx, gy);\n    g.restore();\n  }    \n}\n\nfunction pick(g, scene, x, y, gx, gy) {\n  if (scene.bounds && !scene.bounds.contains(gx, gy)) {\n    return null;\n  }\n\n  var groups = scene.items || EMPTY, subscene,\n      group, axes, items, legends, hits, dx, dy, i, j, b;\n\n  for (i=groups.length; --i>=0;) {\n    group = groups[i];\n\n    // first hit test against bounding box\n    // if a group is clipped, that should be handled by the bounds check.\n    b = group.bounds;\n    if (b && !b.contains(gx, gy)) continue;\n\n    // passed bounds check, so test sub-groups\n    axes = group.axisItems || EMPTY;\n    items = group.items || EMPTY;\n    legends = group.legendItems || EMPTY;\n    dx = (group.x || 0);\n    dy = (group.y || 0);\n\n    g.save();\n    g.translate(dx, dy);\n    dx = gx - dx;\n    dy = gy - dy;\n    for (j=legends.length; --j>=0;) {\n      subscene = legends[j];\n      if (subscene.interactive !== false) {\n        hits = this.pick(subscene, x, y, dx, dy);\n        if (hits) { g.restore(); return hits; }\n      }\n    }\n    for (j=axes.length; --j>=0;) {\n      subscene = axes[j];\n      if (subscene.interactive !== false && subscene.layer !== 'back') {\n        hits = this.pick(subscene, x, y, dx, dy);\n        if (hits) { g.restore(); return hits; }\n      }\n    }\n    for (j=items.length; --j>=0;) {\n      subscene = items[j];\n      if (subscene.interactive !== false) {\n        hits = this.pick(subscene, x, y, dx, dy);\n        if (hits) { g.restore(); return hits; }\n      }\n    }\n    for (j=axes.length; --j>=0;) {\n      subscene = axes[j];\n      if (subscene.interative !== false && subscene.layer === 'back') {\n        hits = this.pick(subscene, x, y, dx, dy);\n        if (hits) { g.restore(); return hits; }\n      }\n    }\n    g.restore();\n\n    if (scene.interactive !== false && (group.fill || group.stroke) &&\n        dx >= 0 && dx <= group.width && dy >= 0 && dy <= group.height) {\n      return group;\n    }\n  }\n\n  return null;\n}\n\nmodule.exports = {\n  draw: draw,\n  pick: pick\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/render/canvas/marks/group.js\n// module id = OgTP\n// module chunks = 0","\"use strict\";\nvar util_1 = require('./util');\n(function (Channel) {\n    Channel[Channel[\"X\"] = 'x'] = \"X\";\n    Channel[Channel[\"Y\"] = 'y'] = \"Y\";\n    Channel[Channel[\"X2\"] = 'x2'] = \"X2\";\n    Channel[Channel[\"Y2\"] = 'y2'] = \"Y2\";\n    Channel[Channel[\"ROW\"] = 'row'] = \"ROW\";\n    Channel[Channel[\"COLUMN\"] = 'column'] = \"COLUMN\";\n    Channel[Channel[\"SHAPE\"] = 'shape'] = \"SHAPE\";\n    Channel[Channel[\"SIZE\"] = 'size'] = \"SIZE\";\n    Channel[Channel[\"COLOR\"] = 'color'] = \"COLOR\";\n    Channel[Channel[\"TEXT\"] = 'text'] = \"TEXT\";\n    Channel[Channel[\"DETAIL\"] = 'detail'] = \"DETAIL\";\n    Channel[Channel[\"LABEL\"] = 'label'] = \"LABEL\";\n    Channel[Channel[\"PATH\"] = 'path'] = \"PATH\";\n    Channel[Channel[\"ORDER\"] = 'order'] = \"ORDER\";\n    Channel[Channel[\"OPACITY\"] = 'opacity'] = \"OPACITY\";\n})(exports.Channel || (exports.Channel = {}));\nvar Channel = exports.Channel;\nexports.X = Channel.X;\nexports.Y = Channel.Y;\nexports.X2 = Channel.X2;\nexports.Y2 = Channel.Y2;\nexports.ROW = Channel.ROW;\nexports.COLUMN = Channel.COLUMN;\nexports.SHAPE = Channel.SHAPE;\nexports.SIZE = Channel.SIZE;\nexports.COLOR = Channel.COLOR;\nexports.TEXT = Channel.TEXT;\nexports.DETAIL = Channel.DETAIL;\nexports.LABEL = Channel.LABEL;\nexports.PATH = Channel.PATH;\nexports.ORDER = Channel.ORDER;\nexports.OPACITY = Channel.OPACITY;\nexports.CHANNELS = [exports.X, exports.Y, exports.X2, exports.Y2, exports.ROW, exports.COLUMN, exports.SIZE, exports.SHAPE, exports.COLOR, exports.PATH, exports.ORDER, exports.OPACITY, exports.TEXT, exports.DETAIL, exports.LABEL];\nexports.UNIT_CHANNELS = util_1.without(exports.CHANNELS, [exports.ROW, exports.COLUMN]);\nexports.UNIT_SCALE_CHANNELS = util_1.without(exports.UNIT_CHANNELS, [exports.PATH, exports.ORDER, exports.DETAIL, exports.TEXT, exports.LABEL, exports.X2, exports.Y2]);\nexports.NONSPATIAL_CHANNELS = util_1.without(exports.UNIT_CHANNELS, [exports.X, exports.Y, exports.X2, exports.Y2]);\nexports.NONSPATIAL_SCALE_CHANNELS = util_1.without(exports.UNIT_SCALE_CHANNELS, [exports.X, exports.Y, exports.X2, exports.Y2]);\nexports.STACK_GROUP_CHANNELS = [exports.COLOR, exports.DETAIL, exports.ORDER, exports.OPACITY, exports.SIZE];\n;\nfunction supportMark(channel, mark) {\n    return !!getSupportedMark(channel)[mark];\n}\nexports.supportMark = supportMark;\nfunction getSupportedMark(channel) {\n    switch (channel) {\n        case exports.X:\n        case exports.Y:\n        case exports.COLOR:\n        case exports.DETAIL:\n        case exports.ORDER:\n        case exports.OPACITY:\n        case exports.ROW:\n        case exports.COLUMN:\n            return {\n                point: true, tick: true, rule: true, circle: true, square: true,\n                bar: true, line: true, area: true, text: true\n            };\n        case exports.X2:\n        case exports.Y2:\n            return {\n                rule: true, bar: true, area: true\n            };\n        case exports.SIZE:\n            return {\n                point: true, tick: true, rule: true, circle: true, square: true,\n                bar: true, text: true\n            };\n        case exports.SHAPE:\n            return { point: true };\n        case exports.TEXT:\n            return { text: true };\n        case exports.PATH:\n            return { line: true };\n    }\n    return {};\n}\nexports.getSupportedMark = getSupportedMark;\n;\nfunction getSupportedRole(channel) {\n    switch (channel) {\n        case exports.X:\n        case exports.Y:\n        case exports.COLOR:\n        case exports.OPACITY:\n        case exports.LABEL:\n        case exports.DETAIL:\n            return {\n                measure: true,\n                dimension: true\n            };\n        case exports.ROW:\n        case exports.COLUMN:\n        case exports.SHAPE:\n            return {\n                measure: false,\n                dimension: true\n            };\n        case exports.X2:\n        case exports.Y2:\n        case exports.SIZE:\n        case exports.TEXT:\n            return {\n                measure: true,\n                dimension: false\n            };\n        case exports.PATH:\n            return {\n                measure: false,\n                dimension: true\n            };\n    }\n    throw new Error('Invalid encoding channel' + channel);\n}\nexports.getSupportedRole = getSupportedRole;\nfunction hasScale(channel) {\n    return !util_1.contains([exports.DETAIL, exports.PATH, exports.TEXT, exports.LABEL, exports.ORDER], channel);\n}\nexports.hasScale = hasScale;\n//# sourceMappingURL=channel.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/channel.js\n// module id = P/aK\n// module chunks = 0","var dl = require('datalib'),\n    log = require('vega-logging'),\n    Tuple = require('vega-dataflow').Tuple,\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Impute(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: 'array<field>'},\n    orderby: {type: 'array<field>'},\n    field:   {type: 'field'},\n    method:  {type: 'value', default: 'value'},\n    value:   {type: 'value', default: 0}\n  });\n\n  return this.router(true).produces(true);\n}\n\nvar prototype = (Impute.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Impute;\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['imputing']);\n\n  var groupby = this.param('groupby'),\n      orderby = this.param('orderby'),\n      method = this.param('method'),\n      value = this.param('value'),\n      field = this.param('field'),\n      get = field.accessor,\n      name = field.field,\n      prev = this._imputed || [], curr = [],\n      groups = partition(data, groupby.accessor, orderby.accessor),\n      domain = groups.domain,\n      group, i, j, n, m, t;\n\n  function getval(x) {\n    return x == null ? null : get(x);\n  }\n\n  for (j=0, m=groups.length; j<m; ++j) {\n    group = groups[j];\n\n    // determine imputation value\n    if (method !== 'value') {\n      value = dl[method](group, getval);\n    }\n\n    // add tuples for missing values\n    for (i=0, n=group.length; i<n; ++i) {\n      if (group[i] == null) {\n        t = tuple(groupby.field, group.values, orderby.field, domain[i]);\n        t[name] = value;\n        curr.push(t);\n      }\n    }\n  }\n\n  // update changeset with imputed tuples\n  for (i=0, n=curr.length; i<n; ++i) {\n    input.add.push(curr[i]);\n  }\n  for (i=0, n=prev.length; i<n; ++i) {\n    input.rem.push(prev[i]);\n  }\n  this._imputed = curr;\n\n  return input;\n};\n\nfunction tuple(gb, gv, ob, ov) {\n  var t = {_imputed: true}, i;\n  for (i=0; i<gv.length; ++i) t[gb[i]] = gv[i];\n  for (i=0; i<ov.length; ++i) t[ob[i]] = ov[i];\n  return Tuple.ingest(t);\n}\n\nfunction partition(data, groupby, orderby) {\n  var groups = [],\n      get = function(f) { return f(x); },\n      val = function(d) { return (x=d, orderby.map(get)); },\n      map, i, x, k, g, domain, lut, N;\n\n  domain = groups.domain = dl.unique(data, val);\n  N = domain.length;\n  lut = domain.reduce(function(m, d, i) {\n    return (m[d] = {value:d, index:i}, m);\n  }, {});\n\n  // partition data points into groups\n  for (map={}, i=0; i<data.length; ++i) {\n    x = data[i];\n    k = groupby == null ? [] : groupby.map(get);\n    g = map[k] || (groups.push(map[k] = Array(N)), map[k].values = k, map[k]);\n    g[lut[val(x)].index] = x;\n  }\n\n  return groups;\n}\n\nmodule.exports = Impute;\n\nImpute.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Impute transform\",\n  \"description\": \"Performs imputation of missing values.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"impute\"]},\n    \"method\": {\n      \"description\": \"The imputation method to use.\",\n      \"oneOf\": [\n        {\"enum\": [\"value\", \"mean\", \"median\", \"min\", \"max\"]},\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": \"value\"\n    },\n    \"value\": {\n      \"description\": \"The value to use for missing data if the method is 'value'.\",\n      \"oneOf\": [\n        {\"type\": \"number\"},\n        {\"type\": \"string\"},\n        {\"type\": \"boolean\"},\n        {\"type\": \"null\"},\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": 0\n    },\n    \"field\": {\n      \"description\": \"The data field to impute.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"groupby\": {\n      \"description\": \"A list of fields to group the data into series.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n    },\n    \"orderby\": {\n      \"description\": \"A list of fields to determine ordering within series.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\", \"groupby\", \"orderby\", \"field\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Impute.js\n// module id = P7vC\n// module chunks = 0","var dl = require('datalib'),\n    df = require('vega-dataflow'),\n    ChangeSet = df.ChangeSet,\n    Base = df.Graph.prototype,\n    Node  = df.Node, // jshint ignore:line\n    GroupBuilder = require('../scene/GroupBuilder'),\n    visit = require('../scene/visit'),\n    compiler = require('../parse/expr'),\n    config = require('./config');\n\nfunction Model(cfg) {\n  this._defs = {};\n  this._predicates = {};\n\n  this._scene  = null;  // Root scenegraph node.\n  this._groups = null;  // Index of group items.\n\n  this._node = null;\n  this._builder = null; // Top-level scenegraph builder.\n\n  this._reset = {axes: false, legends: false};\n\n  this.config(cfg);\n  this.expr = compiler(this);\n  Base.init.call(this);\n}\n\nvar prototype = (Model.prototype = Object.create(Base));\nprototype.constructor = Model;\n\nprototype.defs = function(defs) {\n  if (!arguments.length) return this._defs;\n  this._defs = defs;\n  return this;\n};\n\nprototype.config = function(cfg) {\n  if (!arguments.length) return this._config;\n  this._config = Object.create(config);\n  for (var name in cfg) {\n    var x = cfg[name], y = this._config[name];\n    if (dl.isObject(x) && dl.isObject(y)) {\n      this._config[name] = dl.extend({}, y, x);\n    } else {\n      this._config[name] = x;\n    }\n  }\n\n  return this;\n};\n\nprototype.width = function(width) {\n  if (this._defs) this._defs.width = width;\n  if (this._defs && this._defs.marks) this._defs.marks.width = width;\n  if (this._scene) {\n    this._scene.items[0].width = width;\n    this._scene.items[0]._dirty = true;\n  }\n  this._reset.axes = true;\n  return this;\n};\n\nprototype.height = function(height) {\n  if (this._defs) this._defs.height = height;\n  if (this._defs && this._defs.marks) this._defs.marks.height = height;\n  if (this._scene) {\n    this._scene.items[0].height = height;\n    this._scene.items[0]._dirty = true;\n  }\n  this._reset.axes = true;\n  return this;\n};\n\nprototype.node = function() {\n  return this._node || (this._node = new Node(this));\n};\n\nprototype.data = function() {\n  var data = Base.data.apply(this, arguments);\n  if (arguments.length > 1) {  // new Datasource\n    this.node().addListener(data.pipeline()[0]);\n  }\n  return data;\n};\n\nfunction predicates(name) {\n  var m = this, pred = {};\n  if (!dl.isArray(name)) return this._predicates[name];\n  name.forEach(function(n) { pred[n] = m._predicates[n]; });\n  return pred;\n}\n\nprototype.predicate = function(name, predicate) {\n  if (arguments.length === 1) return predicates.call(this, name);\n  return (this._predicates[name] = predicate);\n};\n\nprototype.predicates = function() { return this._predicates; };\n\nprototype.scene = function(renderer) {\n  if (!arguments.length) return this._scene;\n\n  if (this._builder) {\n    this.node().removeListener(this._builder);\n    this._builder._groupBuilder.disconnect();\n  }\n\n  var m = this,\n      b = this._builder = new Node(this);\n\n  b.evaluate = function(input) {\n    if (b._groupBuilder) return input;\n\n    var gb = b._groupBuilder = new GroupBuilder(m, m._defs.marks, m._scene={}),\n        p  = gb.pipeline();\n\n    m._groups = {};\n    this.addListener(gb.connect());\n    p[p.length-1].addListener(renderer);\n    return input;\n  };\n\n  this.addListener(b);\n  return this;\n};\n\nprototype.group = function(id, item) {\n  var groups = this._groups;\n  if (arguments.length === 1) return groups[id];\n  return (groups[id] = item, this);\n};\n\nprototype.reset = function() {\n  if (this._scene && this._reset.axes) {\n    visit(this._scene, function(item) {\n      if (item.axes) item.axes.forEach(function(axis) { axis.reset(); });\n    });\n    this._reset.axes = false;\n  }\n  if (this._scene && this._reset.legends) {\n    visit(this._scene, function(item) {\n      if (item.legends) item.legends.forEach(function(l) { l.reset(); });\n    });\n    this._reset.legends = false;\n  }\n  return this;\n};\n\nprototype.addListener = function(l) {\n  this.node().addListener(l);\n};\n\nprototype.removeListener = function(l) {\n  this.node().removeListener(l);\n};\n\nprototype.fire = function(cs) {\n  if (!cs) cs = ChangeSet.create();\n  this.propagate(cs, this.node());\n};\n\nmodule.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/core/Model.js\n// module id = PwiD\n// module chunks = 0","\"use strict\";\nvar scale_1 = require('./scale');\nvar axis_1 = require('./axis');\nvar legend_1 = require('./legend');\nexports.defaultCellConfig = {\n    width: 200,\n    height: 200\n};\nexports.defaultFacetCellConfig = {\n    stroke: '#ccc',\n    strokeWidth: 1\n};\nvar defaultFacetGridConfig = {\n    color: '#000000',\n    opacity: 0.4,\n    offset: 0\n};\nexports.defaultFacetConfig = {\n    scale: scale_1.defaultFacetScaleConfig,\n    axis: axis_1.defaultFacetAxisConfig,\n    grid: defaultFacetGridConfig,\n    cell: exports.defaultFacetCellConfig\n};\n(function (FontWeight) {\n    FontWeight[FontWeight[\"NORMAL\"] = 'normal'] = \"NORMAL\";\n    FontWeight[FontWeight[\"BOLD\"] = 'bold'] = \"BOLD\";\n})(exports.FontWeight || (exports.FontWeight = {}));\nvar FontWeight = exports.FontWeight;\n(function (Shape) {\n    Shape[Shape[\"CIRCLE\"] = 'circle'] = \"CIRCLE\";\n    Shape[Shape[\"SQUARE\"] = 'square'] = \"SQUARE\";\n    Shape[Shape[\"CROSS\"] = 'cross'] = \"CROSS\";\n    Shape[Shape[\"DIAMOND\"] = 'diamond'] = \"DIAMOND\";\n    Shape[Shape[\"TRIANGLEUP\"] = 'triangle-up'] = \"TRIANGLEUP\";\n    Shape[Shape[\"TRIANGLEDOWN\"] = 'triangle-down'] = \"TRIANGLEDOWN\";\n})(exports.Shape || (exports.Shape = {}));\nvar Shape = exports.Shape;\n(function (HorizontalAlign) {\n    HorizontalAlign[HorizontalAlign[\"LEFT\"] = 'left'] = \"LEFT\";\n    HorizontalAlign[HorizontalAlign[\"RIGHT\"] = 'right'] = \"RIGHT\";\n    HorizontalAlign[HorizontalAlign[\"CENTER\"] = 'center'] = \"CENTER\";\n})(exports.HorizontalAlign || (exports.HorizontalAlign = {}));\nvar HorizontalAlign = exports.HorizontalAlign;\n(function (VerticalAlign) {\n    VerticalAlign[VerticalAlign[\"TOP\"] = 'top'] = \"TOP\";\n    VerticalAlign[VerticalAlign[\"MIDDLE\"] = 'middle'] = \"MIDDLE\";\n    VerticalAlign[VerticalAlign[\"BOTTOM\"] = 'bottom'] = \"BOTTOM\";\n})(exports.VerticalAlign || (exports.VerticalAlign = {}));\nvar VerticalAlign = exports.VerticalAlign;\n(function (FontStyle) {\n    FontStyle[FontStyle[\"NORMAL\"] = 'normal'] = \"NORMAL\";\n    FontStyle[FontStyle[\"ITALIC\"] = 'italic'] = \"ITALIC\";\n})(exports.FontStyle || (exports.FontStyle = {}));\nvar FontStyle = exports.FontStyle;\n(function (Interpolate) {\n    Interpolate[Interpolate[\"LINEAR\"] = 'linear'] = \"LINEAR\";\n    Interpolate[Interpolate[\"LINEAR_CLOSED\"] = 'linear-closed'] = \"LINEAR_CLOSED\";\n    Interpolate[Interpolate[\"STEP\"] = 'step'] = \"STEP\";\n    Interpolate[Interpolate[\"STEP_BEFORE\"] = 'step-before'] = \"STEP_BEFORE\";\n    Interpolate[Interpolate[\"STEP_AFTER\"] = 'step-after'] = \"STEP_AFTER\";\n    Interpolate[Interpolate[\"BASIS\"] = 'basis'] = \"BASIS\";\n    Interpolate[Interpolate[\"BASIS_OPEN\"] = 'basis-open'] = \"BASIS_OPEN\";\n    Interpolate[Interpolate[\"BASIS_CLOSED\"] = 'basis-closed'] = \"BASIS_CLOSED\";\n    Interpolate[Interpolate[\"CARDINAL\"] = 'cardinal'] = \"CARDINAL\";\n    Interpolate[Interpolate[\"CARDINAL_OPEN\"] = 'cardinal-open'] = \"CARDINAL_OPEN\";\n    Interpolate[Interpolate[\"CARDINAL_CLOSED\"] = 'cardinal-closed'] = \"CARDINAL_CLOSED\";\n    Interpolate[Interpolate[\"BUNDLE\"] = 'bundle'] = \"BUNDLE\";\n    Interpolate[Interpolate[\"MONOTONE\"] = 'monotone'] = \"MONOTONE\";\n})(exports.Interpolate || (exports.Interpolate = {}));\nvar Interpolate = exports.Interpolate;\n(function (AreaOverlay) {\n    AreaOverlay[AreaOverlay[\"LINE\"] = 'line'] = \"LINE\";\n    AreaOverlay[AreaOverlay[\"LINEPOINT\"] = 'linepoint'] = \"LINEPOINT\";\n    AreaOverlay[AreaOverlay[\"NONE\"] = 'none'] = \"NONE\";\n})(exports.AreaOverlay || (exports.AreaOverlay = {}));\nvar AreaOverlay = exports.AreaOverlay;\nexports.defaultOverlayConfig = {\n    line: false,\n    pointStyle: { filled: true },\n    lineStyle: {}\n};\nexports.defaultMarkConfig = {\n    color: '#4682b4',\n    shape: Shape.CIRCLE,\n    strokeWidth: 2,\n    size: 30,\n    barThinSize: 2,\n    ruleSize: 1,\n    tickThickness: 1,\n    fontSize: 10,\n    baseline: VerticalAlign.MIDDLE,\n    text: 'Abc',\n    shortTimeLabels: false,\n    applyColorToBackground: false\n};\nexports.defaultConfig = {\n    numberFormat: 's',\n    timeFormat: '%Y-%m-%d',\n    countTitle: 'Number of Records',\n    cell: exports.defaultCellConfig,\n    mark: exports.defaultMarkConfig,\n    overlay: exports.defaultOverlayConfig,\n    scale: scale_1.defaultScaleConfig,\n    axis: axis_1.defaultAxisConfig,\n    legend: legend_1.defaultLegendConfig,\n    facet: exports.defaultFacetConfig,\n};\n//# sourceMappingURL=config.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/config.js\n// module id = Py5Z\n// module chunks = 0","\"use strict\";\nvar aggregate_1 = require('../../aggregate');\nvar data_1 = require('../../data');\nvar fielddef_1 = require('../../fielddef');\nvar util_1 = require('../../util');\nvar summary;\n(function (summary) {\n    function addDimension(dims, fieldDef) {\n        if (fieldDef.bin) {\n            dims[fielddef_1.field(fieldDef, { binSuffix: '_start' })] = true;\n            dims[fielddef_1.field(fieldDef, { binSuffix: '_mid' })] = true;\n            dims[fielddef_1.field(fieldDef, { binSuffix: '_end' })] = true;\n            dims[fielddef_1.field(fieldDef, { binSuffix: '_range' })] = true;\n        }\n        else {\n            dims[fielddef_1.field(fieldDef)] = true;\n        }\n        return dims;\n    }\n    function parseUnit(model) {\n        var dims = {};\n        var meas = {};\n        model.forEach(function (fieldDef, channel) {\n            if (fieldDef.aggregate) {\n                if (fieldDef.aggregate === aggregate_1.AggregateOp.COUNT) {\n                    meas['*'] = meas['*'] || {};\n                    meas['*']['count'] = true;\n                }\n                else {\n                    meas[fieldDef.field] = meas[fieldDef.field] || {};\n                    meas[fieldDef.field][fieldDef.aggregate] = true;\n                }\n            }\n            else {\n                addDimension(dims, fieldDef);\n            }\n        });\n        return [{\n                name: model.dataName(data_1.SUMMARY),\n                dimensions: dims,\n                measures: meas\n            }];\n    }\n    summary.parseUnit = parseUnit;\n    function parseFacet(model) {\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source && childDataComponent.summary) {\n            var summaryComponents = childDataComponent.summary.map(function (summaryComponent) {\n                summaryComponent.dimensions = model.reduce(addDimension, summaryComponent.dimensions);\n                var summaryNameWithoutPrefix = summaryComponent.name.substr(model.child().name('').length);\n                model.child().renameData(summaryComponent.name, summaryNameWithoutPrefix);\n                summaryComponent.name = summaryNameWithoutPrefix;\n                return summaryComponent;\n            });\n            delete childDataComponent.summary;\n            return summaryComponents;\n        }\n        return [];\n    }\n    summary.parseFacet = parseFacet;\n    function mergeMeasures(parentMeasures, childMeasures) {\n        for (var field_1 in childMeasures) {\n            if (childMeasures.hasOwnProperty(field_1)) {\n                var ops = childMeasures[field_1];\n                for (var op in ops) {\n                    if (ops.hasOwnProperty(op)) {\n                        if (field_1 in parentMeasures) {\n                            parentMeasures[field_1][op] = true;\n                        }\n                        else {\n                            parentMeasures[field_1] = { op: true };\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function parseLayer(model) {\n        var summaries = {};\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (!childDataComponent.source && childDataComponent.summary) {\n                childDataComponent.summary.forEach(function (childSummary) {\n                    var key = util_1.hash(childSummary.dimensions);\n                    if (key in summaries) {\n                        mergeMeasures(summaries[key].measures, childSummary.measures);\n                    }\n                    else {\n                        childSummary.name = model.dataName(data_1.SUMMARY) + '_' + util_1.keys(summaries).length;\n                        summaries[key] = childSummary;\n                    }\n                    child.renameData(child.dataName(data_1.SUMMARY), summaries[key].name);\n                    delete childDataComponent.summary;\n                });\n            }\n        });\n        return util_1.vals(summaries);\n    }\n    summary.parseLayer = parseLayer;\n    function assemble(component, model) {\n        if (!component.summary) {\n            return [];\n        }\n        return component.summary.reduce(function (summaryData, summaryComponent) {\n            var dims = summaryComponent.dimensions;\n            var meas = summaryComponent.measures;\n            var groupby = util_1.keys(dims);\n            var summarize = util_1.reduce(meas, function (aggregator, fnDictSet, field) {\n                aggregator[field] = util_1.keys(fnDictSet);\n                return aggregator;\n            }, {});\n            if (util_1.keys(meas).length > 0) {\n                summaryData.push({\n                    name: summaryComponent.name,\n                    source: model.dataName(data_1.SOURCE),\n                    transform: [{\n                            type: 'aggregate',\n                            groupby: groupby,\n                            summarize: summarize\n                        }]\n                });\n            }\n            return summaryData;\n        }, []);\n    }\n    summary.assemble = assemble;\n})(summary = exports.summary || (exports.summary = {}));\n//# sourceMappingURL=summary.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/summary.js\n// module id = QNWf\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('./channel');\nvar util_1 = require('./util');\nfunction countRetinal(encoding) {\n    var count = 0;\n    if (encoding.color) {\n        count++;\n    }\n    if (encoding.opacity) {\n        count++;\n    }\n    if (encoding.size) {\n        count++;\n    }\n    if (encoding.shape) {\n        count++;\n    }\n    return count;\n}\nexports.countRetinal = countRetinal;\nfunction channels(encoding) {\n    return channel_1.CHANNELS.filter(function (channel) {\n        return has(encoding, channel);\n    });\n}\nexports.channels = channels;\nfunction has(encoding, channel) {\n    var channelEncoding = encoding && encoding[channel];\n    return channelEncoding && (channelEncoding.field !== undefined ||\n        (util_1.isArray(channelEncoding) && channelEncoding.length > 0));\n}\nexports.has = has;\nfunction isAggregate(encoding) {\n    return util_1.some(channel_1.CHANNELS, function (channel) {\n        if (has(encoding, channel) && encoding[channel].aggregate) {\n            return true;\n        }\n        return false;\n    });\n}\nexports.isAggregate = isAggregate;\nfunction isRanged(encoding) {\n    return encoding && ((!!encoding.x && !!encoding.x2) || (!!encoding.y && !!encoding.y2));\n}\nexports.isRanged = isRanged;\nfunction fieldDefs(encoding) {\n    var arr = [];\n    channel_1.CHANNELS.forEach(function (channel) {\n        if (has(encoding, channel)) {\n            if (util_1.isArray(encoding[channel])) {\n                encoding[channel].forEach(function (fieldDef) {\n                    arr.push(fieldDef);\n                });\n            }\n            else {\n                arr.push(encoding[channel]);\n            }\n        }\n    });\n    return arr;\n}\nexports.fieldDefs = fieldDefs;\n;\nfunction forEach(encoding, f, thisArg) {\n    channelMappingForEach(channel_1.CHANNELS, encoding, f, thisArg);\n}\nexports.forEach = forEach;\nfunction channelMappingForEach(channels, mapping, f, thisArg) {\n    var i = 0;\n    channels.forEach(function (channel) {\n        if (has(mapping, channel)) {\n            if (util_1.isArray(mapping[channel])) {\n                mapping[channel].forEach(function (fieldDef) {\n                    f.call(thisArg, fieldDef, channel, i++);\n                });\n            }\n            else {\n                f.call(thisArg, mapping[channel], channel, i++);\n            }\n        }\n    });\n}\nexports.channelMappingForEach = channelMappingForEach;\nfunction map(encoding, f, thisArg) {\n    return channelMappingMap(channel_1.CHANNELS, encoding, f, thisArg);\n}\nexports.map = map;\nfunction channelMappingMap(channels, mapping, f, thisArg) {\n    var arr = [];\n    channels.forEach(function (channel) {\n        if (has(mapping, channel)) {\n            if (util_1.isArray(mapping[channel])) {\n                mapping[channel].forEach(function (fieldDef) {\n                    arr.push(f.call(thisArg, fieldDef, channel));\n                });\n            }\n            else {\n                arr.push(f.call(thisArg, mapping[channel], channel));\n            }\n        }\n    });\n    return arr;\n}\nexports.channelMappingMap = channelMappingMap;\nfunction reduce(encoding, f, init, thisArg) {\n    return channelMappingReduce(channel_1.CHANNELS, encoding, f, init, thisArg);\n}\nexports.reduce = reduce;\nfunction channelMappingReduce(channels, mapping, f, init, thisArg) {\n    var r = init;\n    channel_1.CHANNELS.forEach(function (channel) {\n        if (has(mapping, channel)) {\n            if (util_1.isArray(mapping[channel])) {\n                mapping[channel].forEach(function (fieldDef) {\n                    r = f.call(thisArg, r, fieldDef, channel);\n                });\n            }\n            else {\n                r = f.call(thisArg, r, mapping[channel], channel);\n            }\n        }\n    });\n    return r;\n}\nexports.channelMappingReduce = channelMappingReduce;\n//# sourceMappingURL=encoding.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/encoding.js\n// module id = QSMf\n// module chunks = 0","module.exports = function visit(node, func) {\n  var i, n, s, m, items;\n  if (func(node)) return true;\n\n  var sets = ['items', 'axisItems', 'legendItems'];\n  for (s=0, m=sets.length; s<m; ++s) {\n    if ((items = node[sets[s]])) {\n      for (i=0, n=items.length; i<n; ++i) {\n        if (visit(items[i], func)) return true;\n      }\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/visit.js\n// module id = Qpkz\n// module chunks = 0","var dl = require('datalib'),\n    Aggregator = dl.Aggregator,\n    Base = Aggregator.prototype,\n    df = require('vega-dataflow'),\n    Tuple = df.Tuple,\n    log = require('vega-logging'),\n    facetID = 0;\n\nfunction Facetor() {\n  Aggregator.call(this);\n  this._facet = null;\n  this._facetID = ++facetID;\n}\n\nvar prototype = (Facetor.prototype = Object.create(Base));\nprototype.constructor = Facetor;\n\nprototype.facet = function(f) {\n  return arguments.length ? (this._facet = f, this) : this._facet;\n};\n\nprototype._ingest = function(t) {\n  return Tuple.ingest(t, null);\n};\n\nprototype._assign = Tuple.set;\n\nfunction disconnect_cell(facet) {\n  log.debug({}, ['disconnecting cell', this.tuple._id]);\n  var pipeline = this.ds.pipeline();\n  facet.removeListener(pipeline[0]);\n  facet._graph.removeListener(pipeline[0]);\n  facet._graph.disconnect(pipeline);\n}\n\nprototype._newcell = function(x, key) {\n  var cell  = Base._newcell.call(this, x, key),\n      facet = this._facet;\n\n  if (facet) {\n    var graph = facet._graph,\n        tuple = cell.tuple,\n        pipeline = facet.param('transform');\n    cell.ds = graph.data(tuple._facetID, pipeline, tuple);\n    cell.disconnect = disconnect_cell;\n    facet.addListener(pipeline[0]);\n  }\n\n  return cell;\n};\n\nprototype._newtuple = function(x, key) {\n  var t = Base._newtuple.call(this, x);\n  if (this._facet) {\n    Tuple.set(t, 'key', key);\n    Tuple.set(t, '_facetID', this._facetID + '_' + key);\n  }\n  return t;\n};\n\nprototype.clear = function() {\n  if (this._facet) {\n    for (var k in this._cells) {\n      this._cells[k].disconnect(this._facet);\n    }\n  }\n  return Base.clear.call(this);\n};\n\nprototype._on_add = function(x, cell) {\n  if (this._facet) cell.ds._input.add.push(x);\n};\n\nprototype._on_rem = function(x, cell) {\n  if (this._facet) cell.ds._input.rem.push(x);\n};\n\nprototype._on_mod = function(x, prev, cell0, cell1) {\n  if (this._facet) { // Propagate tuples\n    if (cell0 === cell1) {\n      cell0.ds._input.mod.push(x);\n    } else {\n      cell0.ds._input.rem.push(x);\n      cell1.ds._input.add.push(x);\n    }\n  }\n};\n\nprototype._on_drop = function(cell) {\n  if (this._facet) cell.disconnect(this._facet);\n};\n\nprototype._on_keep = function(cell) {\n  // propagate sort, signals, fields, etc.\n  if (this._facet) df.ChangeSet.copy(this._input, cell.ds._input);\n};\n\nmodule.exports = Facetor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Facetor.js\n// module id = QvNu\n// module chunks = 0","var deps = module.exports = {\n  ALL: ['data', 'fields', 'scales', 'signals']\n};\ndeps.ALL.forEach(function(k) { deps[k.toUpperCase()] = k; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-dataflow/src/Dependencies.js\n// module id = RXBq\n// module chunks = 0","var dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Bin(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: 'field'},\n    min: {type: 'value'},\n    max: {type: 'value'},\n    base: {type: 'value', default: 10},\n    maxbins: {type: 'value', default: 20},\n    step: {type: 'value'},\n    steps: {type: 'value'},\n    minstep: {type: 'value'},\n    div: {type: 'array<value>', default: [5, 2]}\n  });\n\n  this._output = {\n    start: 'bin_start',\n    end:   'bin_end',\n    mid:   'bin_mid'\n  };\n  return this.mutates(true);\n}\n\nvar prototype = (Bin.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Bin;\n\nprototype.extent = function(data) {\n  // TODO only recompute extent upon data or field change?\n  var e = [this.param('min'), this.param('max')], d;\n  if (e[0] == null || e[1] == null) {\n    d = dl.extent(data, this.param('field').accessor);\n    if (e[0] == null) e[0] = d[0];\n    if (e[1] == null) e[1] = d[1];\n  }\n  return e;\n};\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['binning']);\n\n  var extent  = this.extent(data),\n      output  = this._output,\n      step    = this.param('step'),\n      steps   = this.param('steps'),\n      minstep = this.param('minstep'),\n      get     = this.param('field').accessor,\n      opt = {\n        min: extent[0],\n        max: extent[1],\n        base: this.param('base'),\n        maxbins: this.param('maxbins'),\n        div: this.param('div')\n      };\n\n  if (step) opt.step = step;\n  if (steps) opt.steps = steps;\n  if (minstep) opt.minstep = minstep;\n  var b = dl.bins(opt),\n      s = b.step;\n\n  function update(d) {\n    var v = get(d);\n    v = v == null ? null\n      : b.start + s * ~~((v - b.start) / s);\n    Tuple.set(d, output.start, v);\n    Tuple.set(d, output.end, v + s);\n    Tuple.set(d, output.mid, v + s/2);\n  }\n  input.add.forEach(update);\n  input.mod.forEach(update);\n  input.rem.forEach(update);\n\n  input.fields[output.start] = 1;\n  input.fields[output.end] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nmodule.exports = Bin;\n\nBin.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Bin transform\",\n  \"description\": \"Bins values into quantitative bins (e.g., for a histogram).\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"bin\"]},\n    \"field\": {\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"The name of the field to bin values from.\"\n    },\n    \"min\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"The minimum bin value to consider.\"\n    },\n    \"max\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"The maximum bin value to consider.\"\n    },\n    \"base\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"The number base to use for automatic bin determination.\",\n      \"default\": 10\n    },\n    \"maxbins\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"The maximum number of allowable bins.\",\n      \"default\": 20\n    },\n    \"step\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"An exact step size to use between bins. If provided, options such as maxbins will be ignored.\"\n    },\n    \"steps\": {\n      \"description\": \"An array of allowable step sizes to choose from.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"type\": \"number\"}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ]\n    },\n    \"minstep\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"A minimum allowable step size (particularly useful for integer values).\"\n    },\n    \"div\": {\n      \"description\": \"An array of scale factors indicating allowable subdivisions.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"type\": \"number\"},\n          \"default\": [5, 2]\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ]\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"start\": {\"type\": \"string\", \"default\": \"bin_start\"},\n        \"end\": {\"type\": \"string\", \"default\": \"bin_end\"},\n        \"mid\": {\"type\": \"string\", \"default\": \"bin_mid\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\", \"field\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Bin.js\n// module id = RdYp\n// module chunks = 0","var dl = require('datalib'),\n    expr = require('./expr'),\n    SIGNALS = require('vega-dataflow').Dependencies.SIGNALS;\n\nvar RESERVED = ['datum', 'event', 'signals', 'width', 'height', 'padding']\n    .concat(dl.keys(expr.codegen.functions));\n\nfunction parseSignals(model, spec) {\n  // process each signal definition\n  (spec || []).forEach(function(s) {\n    if (RESERVED.indexOf(s.name) !== -1) {\n      throw Error('Signal name \"'+s.name+'\" is a '+\n        'reserved keyword ('+RESERVED.join(', ')+').');\n    }\n\n    var signal = model.signal(s.name, s.init)\n      .verbose(s.verbose);\n\n    if (s.init && s.init.expr) {\n      s.init.expr = model.expr(s.init.expr);\n      signal.value(exprVal(model, s.init));\n    }\n\n    if (s.expr) {\n      s.expr = model.expr(s.expr);\n      signal.evaluate = function(input) {\n        var val = exprVal(model, s),\n            sg  = input.signals;\n        if (val !== signal.value() || signal.verbose()) {\n          signal.value(val);\n          sg[s.name] = 1;\n        }\n        return sg[s.name] ? input : model.doNotPropagate;\n      };\n      signal.dependency(SIGNALS, s.expr.globals);\n      s.expr.globals.forEach(function(dep) {\n        model.signal(dep).addListener(signal);\n      });\n    }\n  });\n\n  return spec;\n}\n\nfunction exprVal(model, spec) {\n  var e = spec.expr, v = e.fn();\n  return spec.scale ? parseSignals.scale(model, spec, v) : v;\n}\n\nparseSignals.scale = function scale(model, spec, value, datum, evt) {\n  var def = spec.scale,\n      name  = def.name || def.signal || def,\n      scope = def.scope, e;\n\n  if (scope) {\n    if (scope.signal) {\n      scope = model.signalRef(scope.signal);\n    } else if (dl.isString(scope)) { // Scope is an expression\n      e = def._expr = (def._expr || model.expr(scope));\n      scope = e.fn(datum, evt);\n    }\n  }\n\n  return expr.scale(model, def.invert, name, value, scope);\n};\n\nmodule.exports = parseSignals;\nparseSignals.schema = {\n  \"refs\": {\n    \"signal\": {\n      \"title\": \"SignalRef\",\n      \"type\": \"object\",\n      \"properties\": {\"signal\": {\"type\": \"string\"}},\n      \"required\": [\"signal\"]\n    },\n\n    \"scopedScale\": {\n      \"oneOf\": [\n        {\"type\": \"string\"},\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\n              \"oneOf\": [{\"$ref\": \"#/refs/signal\"}, {\"type\": \"string\"}]\n            },\n            \"scope\": {\n              \"oneOf\": [\n                {\"$ref\": \"#/refs/signal\"},\n                {\"type\": \"string\"}\n              ]\n            },\n            \"invert\": {\"type\": \"boolean\", \"default\": false}\n          },\n\n          \"additionalProperties\": false,\n          \"required\": [\"name\"]\n        }\n      ]\n    }\n  },\n\n  \"defs\": {\n    \"signal\": {\n      \"type\": \"object\",\n\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"not\": {\"enum\": RESERVED}\n        },\n        \"init\": {},\n        \"verbose\": {\"type\": \"boolean\", \"default\": false},\n        \"expr\": {\"type\": \"string\"},\n        \"scale\": {\"$ref\": \"#/refs/scopedScale\"},\n        \"streams\": {\"$ref\": \"#/defs/streams\"}\n      },\n\n      \"additionalProperties\": false,\n      \"required\": [\"name\"]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/signals.js\n// module id = S/OH\n// module chunks = 0","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3_dsv = {})));\n}(this, function (exports) { 'use strict';\n\n  function dsv(delimiter) {\n    return new Dsv(delimiter);\n  }\n\n  function objectConverter(columns) {\n    return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n      return JSON.stringify(name) + \": d[\" + i + \"]\";\n    }).join(\",\") + \"}\");\n  }\n\n  function customConverter(columns, f) {\n    var object = objectConverter(columns);\n    return function(row, i) {\n      return f(object(row), i, columns);\n    };\n  }\n\n  // Compute unique columns in order of discovery.\n  function inferColumns(rows) {\n    var columnSet = Object.create(null),\n        columns = [];\n\n    rows.forEach(function(row) {\n      for (var column in row) {\n        if (!(column in columnSet)) {\n          columns.push(columnSet[column] = column);\n        }\n      }\n    });\n\n    return columns;\n  }\n\n  function Dsv(delimiter) {\n    var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n        delimiterCode = delimiter.charCodeAt(0);\n\n    this.parse = function(text, f) {\n      var convert, columns, rows = this.parseRows(text, function(row, i) {\n        if (convert) return convert(row, i - 1);\n        columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n      });\n      rows.columns = columns;\n      return rows;\n    };\n\n    this.parseRows = function(text, f) {\n      var EOL = {}, // sentinel value for end-of-line\n          EOF = {}, // sentinel value for end-of-file\n          rows = [], // output rows\n          N = text.length,\n          I = 0, // current character index\n          n = 0, // the current line number\n          t, // the current token\n          eol; // is the current token followed by EOL?\n\n      function token() {\n        if (I >= N) return EOF; // special case: end of file\n        if (eol) return eol = false, EOL; // special case: end of line\n\n        // special case: quotes\n        var j = I, c;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n        }\n\n        // common case: find next delimiter or newline\n        while (I < N) {\n          var k = 1;\n          c = text.charCodeAt(I++);\n          if (c === 10) eol = true; // \\n\n          else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n          else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n\n        // special case: last token before EOF\n        return text.slice(j);\n      }\n\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n\n      return rows;\n    }\n\n    this.format = function(rows, columns) {\n      if (columns == null) columns = inferColumns(rows);\n      return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n        return columns.map(function(column) {\n          return formatValue(row[column]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n\n    this.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n\n    function formatValue(text) {\n      return reFormat.test(text) ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\" : text;\n    }\n  }\n\n  dsv.prototype = Dsv.prototype;\n\n  var csv = dsv(\",\");\n  var tsv = dsv(\"\\t\");\n\n  var version = \"0.1.14\";\n\n  exports.version = version;\n  exports.dsv = dsv;\n  exports.csv = csv;\n  exports.tsv = tsv;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/~/d3-dsv/build/d3-dsv.js\n// module id = SAbC\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar fielddef_1 = require('../../fielddef');\nvar common_1 = require('../common');\nvar bar;\n(function (bar) {\n    function markType() {\n        return 'rect';\n    }\n    bar.markType = markType;\n    function properties(model) {\n        var p = {};\n        var orient = model.config().mark.orient;\n        var stack = model.stack();\n        var xFieldDef = model.encoding().x;\n        var x2FieldDef = model.encoding().x2;\n        var xIsMeasure = fielddef_1.isMeasure(xFieldDef) || fielddef_1.isMeasure(x2FieldDef);\n        if (stack && channel_1.X === stack.fieldChannel) {\n            p.x = {\n                scale: model.scaleName(channel_1.X),\n                field: model.field(channel_1.X, { suffix: '_start' })\n            };\n            p.x2 = {\n                scale: model.scaleName(channel_1.X),\n                field: model.field(channel_1.X, { suffix: '_end' })\n            };\n        }\n        else if (xIsMeasure) {\n            if (orient === 'horizontal') {\n                if (model.has(channel_1.X)) {\n                    p.x = {\n                        scale: model.scaleName(channel_1.X),\n                        field: model.field(channel_1.X)\n                    };\n                }\n                else {\n                    p.x = {\n                        scale: model.scaleName(channel_1.X),\n                        value: 0\n                    };\n                }\n                if (model.has(channel_1.X2)) {\n                    p.x2 = {\n                        scale: model.scaleName(channel_1.X),\n                        field: model.field(channel_1.X2)\n                    };\n                }\n                else {\n                    p.x2 = {\n                        scale: model.scaleName(channel_1.X),\n                        value: 0\n                    };\n                }\n            }\n            else {\n                p.xc = {\n                    scale: model.scaleName(channel_1.X),\n                    field: model.field(channel_1.X)\n                };\n                p.width = { value: sizeValue(model, channel_1.X) };\n            }\n        }\n        else if (model.fieldDef(channel_1.X).bin) {\n            if (model.has(channel_1.SIZE) && orient !== 'horizontal') {\n                p.xc = {\n                    scale: model.scaleName(channel_1.X),\n                    field: model.field(channel_1.X, { binSuffix: '_mid' })\n                };\n                p.width = {\n                    scale: model.scaleName(channel_1.SIZE),\n                    field: model.field(channel_1.SIZE)\n                };\n            }\n            else {\n                p.x = {\n                    scale: model.scaleName(channel_1.X),\n                    field: model.field(channel_1.X, { binSuffix: '_start' }),\n                    offset: 1\n                };\n                p.x2 = {\n                    scale: model.scaleName(channel_1.X),\n                    field: model.field(channel_1.X, { binSuffix: '_end' })\n                };\n            }\n        }\n        else {\n            if (model.has(channel_1.X)) {\n                p.xc = {\n                    scale: model.scaleName(channel_1.X),\n                    field: model.field(channel_1.X)\n                };\n            }\n            else {\n                p.x = { value: 0, offset: 2 };\n            }\n            p.width = model.has(channel_1.SIZE) && orient !== 'horizontal' ? {\n                scale: model.scaleName(channel_1.SIZE),\n                field: model.field(channel_1.SIZE)\n            } : {\n                value: sizeValue(model, (channel_1.X))\n            };\n        }\n        var yFieldDef = model.encoding().y;\n        var y2FieldDef = model.encoding().y2;\n        var yIsMeasure = fielddef_1.isMeasure(yFieldDef) || fielddef_1.isMeasure(y2FieldDef);\n        if (stack && channel_1.Y === stack.fieldChannel) {\n            p.y = {\n                scale: model.scaleName(channel_1.Y),\n                field: model.field(channel_1.Y, { suffix: '_start' })\n            };\n            p.y2 = {\n                scale: model.scaleName(channel_1.Y),\n                field: model.field(channel_1.Y, { suffix: '_end' })\n            };\n        }\n        else if (yIsMeasure) {\n            if (orient !== 'horizontal') {\n                if (model.has(channel_1.Y)) {\n                    p.y = {\n                        scale: model.scaleName(channel_1.Y),\n                        field: model.field(channel_1.Y)\n                    };\n                }\n                else {\n                    p.y = {\n                        scale: model.scaleName(channel_1.Y),\n                        value: 0\n                    };\n                }\n                if (model.has(channel_1.Y2)) {\n                    p.y2 = {\n                        scale: model.scaleName(channel_1.Y),\n                        field: model.field(channel_1.Y2)\n                    };\n                }\n                else {\n                    p.y2 = {\n                        scale: model.scaleName(channel_1.Y),\n                        value: 0\n                    };\n                }\n            }\n            else {\n                p.yc = {\n                    scale: model.scaleName(channel_1.Y),\n                    field: model.field(channel_1.Y)\n                };\n                p.height = { value: sizeValue(model, channel_1.Y) };\n            }\n        }\n        else if (model.fieldDef(channel_1.Y).bin) {\n            if (model.has(channel_1.SIZE) && orient === 'horizontal') {\n                p.yc = {\n                    scale: model.scaleName(channel_1.Y),\n                    field: model.field(channel_1.Y, { binSuffix: '_mid' })\n                };\n                p.height = {\n                    scale: model.scaleName(channel_1.SIZE),\n                    field: model.field(channel_1.SIZE)\n                };\n            }\n            else {\n                p.y = {\n                    scale: model.scaleName(channel_1.Y),\n                    field: model.field(channel_1.Y, { binSuffix: '_start' })\n                };\n                p.y2 = {\n                    scale: model.scaleName(channel_1.Y),\n                    field: model.field(channel_1.Y, { binSuffix: '_end' }),\n                    offset: 1\n                };\n            }\n        }\n        else {\n            if (model.has(channel_1.Y)) {\n                p.yc = {\n                    scale: model.scaleName(channel_1.Y),\n                    field: model.field(channel_1.Y)\n                };\n            }\n            else {\n                p.y2 = {\n                    field: { group: 'height' },\n                    offset: -1\n                };\n            }\n            p.height = model.has(channel_1.SIZE) && orient === 'horizontal' ? {\n                scale: model.scaleName(channel_1.SIZE),\n                field: model.field(channel_1.SIZE)\n            } : {\n                value: sizeValue(model, channel_1.Y)\n            };\n        }\n        common_1.applyColorAndOpacity(p, model);\n        return p;\n    }\n    bar.properties = properties;\n    function sizeValue(model, channel) {\n        var fieldDef = model.fieldDef(channel_1.SIZE);\n        if (fieldDef && fieldDef.value !== undefined) {\n            return fieldDef.value;\n        }\n        var markConfig = model.config().mark;\n        if (markConfig.barSize) {\n            return markConfig.barSize;\n        }\n        return model.isOrdinalScale(channel) ?\n            model.scale(channel).bandSize - 1 :\n            !model.has(channel) ?\n                model.config().scale.bandSize - 1 :\n                markConfig.barThinSize;\n    }\n    function labels(model) {\n        return undefined;\n    }\n    bar.labels = labels;\n})(bar = exports.bar || (exports.bar = {}));\n//# sourceMappingURL=bar.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/mark/bar.js\n// module id = SIx5\n// module chunks = 0","var dl = require('datalib'),\n    parseProperties = require('./properties');\n\nfunction parseMark(model, mark, applyDefaults) {\n  var props = mark.properties || (applyDefaults && (mark.properties = {})),\n      enter = props.enter || (applyDefaults && (props.enter = {})),\n      group = mark.marks,\n      config = model.config().marks || {};\n\n  if (applyDefaults) {\n    // for scatter plots, set symbol size specified in config if not in spec\n    if (mark.type === 'symbol' && !enter.size && config.symbolSize) {\n        enter.size = {value: config.symbolSize};\n    }\n\n    // Themes define a default \"color\" that maps to fill/stroke based on mark type.\n    var colorMap = {\n      arc: 'fill', area: 'fill', rect: 'fill', symbol: 'fill', text: 'fill',\n      line: 'stroke', path: 'stroke', rule: 'stroke'\n    };\n\n    // Set default mark color if no color is given in spec, and only do so for\n    // user-defined marks (not axis/legend marks).\n    var colorProp = colorMap[mark.type];\n    if (!enter[colorProp] && config.color) {\n      enter[colorProp] = {value: config.color};\n    }\n  }\n\n  // parse mark property definitions\n  dl.keys(props).forEach(function(k) {\n    props[k] = parseProperties(model, mark.type, props[k]);\n  });\n\n  // parse delay function\n  if (mark.delay) {\n    mark.delay = parseProperties(model, mark.type, {delay: mark.delay});\n  }\n\n  // recurse if group type\n  if (group) {\n    mark.marks = group.map(function(g) { return parseMark(model, g, true); });\n  }\n\n  return mark;\n}\n\nmodule.exports = parseMark;\n\nparseMark.schema = {\n  \"defs\": {\n    \"mark\": {\n      \"type\": \"object\",\n\n      \"properties\": {\n        \"name\": {\"type\": \"string\"},\n        \"key\": {\"type\": \"string\"},\n        \"type\": {\"enum\": [\"rect\", \"symbol\", \"path\", \"arc\",\n          \"area\", \"line\", \"rule\", \"image\", \"text\", \"group\"]},\n\n        \"from\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"data\": {\"type\": \"string\"},\n            \"mark\": {\"type\": \"string\"},\n            \"transform\": {\"$ref\": \"#/defs/transform\"}\n          },\n          \"additionalProperties\": false\n        },\n\n        \"delay\": {\"$ref\": \"#/refs/numberValue\"},\n        \"ease\": {\n          \"enum\": [\"linear\", \"quad\", \"cubic\", \"sin\",\n            \"exp\", \"circle\", \"bounce\"].reduce(function(acc, e) {\n              [\"in\", \"out\", \"in-out\", \"out-in\"].forEach(function(m) {\n                acc.push(e+\"-\"+m);\n              });\n              return acc;\n          }, [])\n        },\n\n        \"interactive\": {\"type\": \"boolean\"},\n\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"enter\":  {\"$ref\": \"#/defs/propset\"},\n            \"update\": {\"$ref\": \"#/defs/propset\"},\n            \"exit\":   {\"$ref\": \"#/defs/propset\"},\n            \"hover\":  {\"$ref\": \"#/defs/propset\"}\n          },\n          \"additionalProperties\": false,\n          \"anyOf\": [{\"required\": [\"enter\"]}, {\"required\": [\"update\"]}]\n        }\n      },\n\n      // \"additionalProperties\": false,\n      \"required\": [\"type\"]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/mark.js\n// module id = SbOu\n// module chunks = 0","var d3 = require('d3'),\n    dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Hierarchy(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    // hierarchy parameters\n    sort: {type: 'array<field>', default: null},\n    children: {type: 'field', default: 'children'},\n    parent: {type: 'field', default: 'parent'},\n    field: {type: 'value', default: null},\n    // layout parameters\n    mode: {type: 'value', default: 'tidy'}, // tidy, cluster, partition\n    size: {type: 'array<value>', default: require('./screen').size},\n    nodesize: {type: 'array<value>', default: null},\n    orient: {type: 'value', default: 'cartesian'}\n  });\n\n  this._mode = null;\n  this._output = {\n    'x':      'layout_x',\n    'y':      'layout_y',\n    'width':  'layout_width',\n    'height': 'layout_height',\n    'depth':  'layout_depth'\n  };\n  return this.mutates(true);\n}\n\nvar PARTITION = 'partition';\n\nvar SEPARATION = {\n  cartesian: function(a, b) { return (a.parent === b.parent ? 1 : 2); },\n  radial: function(a, b) { return (a.parent === b.parent ? 1 : 2) / a.depth; }\n};\n\nvar prototype = (Hierarchy.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Hierarchy;\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['hierarchy layout']);\n\n  // get variables\n  var layout = this._layout,\n      output = this._output,\n      mode   = this.param('mode'),\n      sort   = this.param('sort'),\n      nodesz = this.param('nodesize'),\n      parent = this.param('parent').accessor,\n      root = data.filter(function(d) { return parent(d) === null; })[0];\n\n  if (mode !== this._mode) {\n    this._mode = mode;\n    if (mode === 'tidy') mode = 'tree';\n    layout = (this._layout = d3.layout[mode]());\n  }\n\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  input.fields[output.depth] = 1;\n  if (mode === PARTITION) {\n    input.fields[output.width] = 1;\n    input.fields[output.height] = 1;\n    layout.value(this.param('field').accessor);\n  } else {\n    layout.separation(SEPARATION[this.param('orient')]);\n  }\n\n  if (nodesz.length && mode !== PARTITION) {\n    layout.nodeSize(nodesz);\n  } else {\n    layout.size(this.param('size'));\n  }\n\n  layout\n    .sort(sort.field.length ? dl.comparator(sort.field) : null)\n    .children(this.param('children').accessor)\n    .nodes(root);\n\n  // copy layout values to nodes\n  data.forEach(function(n) {\n    Tuple.set(n, output.x, n.x);\n    Tuple.set(n, output.y, n.y);\n    Tuple.set(n, output.depth, n.depth);\n    if (mode === PARTITION) {\n      Tuple.set(n, output.width, n.dx);\n      Tuple.set(n, output.height, n.dy);\n    }\n  });\n\n  // return changeset\n  return input;\n};\n\nmodule.exports = Hierarchy;\n\nHierarchy.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Hierarchy transform\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"hierarchy\"]},\n    \"sort\": {\n      \"description\": \"A list of fields to use as sort criteria for sibling nodes.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ]\n    },\n    \"children\": {\n      \"description\": \"The data field for the children node array\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"children\"\n    },\n    \"parent\": {\n      \"description\": \"The data field for the parent node\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"parent\"\n    },\n    \"field\": {\n      \"description\": \"The value for the area of each leaf-level node for partition layouts.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"mode\": {\n      \"description\": \"The layout algorithm mode to use.\",\n      \"oneOf\": [\n        {\"enum\": [\"tidy\", \"cluster\", \"partition\"]},\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": \"tidy\"\n    },\n    \"orient\": {\n      \"description\": \"The layout orientation to use.\",\n      \"oneOf\": [\n        {\"enum\": [\"cartesian\", \"radial\"]},\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": \"cartesian\"\n    },\n    \"size\": {\n      \"description\": \"The dimensions of the tree layout\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n          \"minItems\": 2,\n          \"maxItems\": 2\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": [500, 500]\n    },\n    \"nodesize\": {\n      \"description\": \"Sets a fixed x,y size for each node (overrides the size parameter)\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n          \"minItems\": 2,\n          \"maxItems\": 2\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": null\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"x\": {\"type\": \"string\", \"default\": \"layout_x\"},\n        \"y\": {\"type\": \"string\", \"default\": \"layout_y\"},\n        \"width\": {\"type\": \"string\", \"default\": \"layout_width\"},\n        \"height\": {\"type\": \"string\", \"default\": \"layout_height\"},\n        \"depth\": {\"type\": \"string\", \"default\": \"layout_depth\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Hierarchy.js\n// module id = Sgrz\n// module chunks = 0","function Bounds(b) {\n  this.clear();\n  if (b) this.union(b);\n}\n\nvar prototype = Bounds.prototype;\n\nprototype.clone = function() {\n  return new Bounds(this);\n};\n\nprototype.clear = function() {\n  this.x1 = +Number.MAX_VALUE;\n  this.y1 = +Number.MAX_VALUE;\n  this.x2 = -Number.MAX_VALUE;\n  this.y2 = -Number.MAX_VALUE;\n  return this;\n};\n\nprototype.set = function(x1, y1, x2, y2) {\n  this.x1 = x1;\n  this.y1 = y1;\n  this.x2 = x2;\n  this.y2 = y2;\n  return this;\n};\n\nprototype.add = function(x, y) {\n  if (x < this.x1) this.x1 = x;\n  if (y < this.y1) this.y1 = y;\n  if (x > this.x2) this.x2 = x;\n  if (y > this.y2) this.y2 = y;\n  return this;\n};\n\nprototype.expand = function(d) {\n  this.x1 -= d;\n  this.y1 -= d;\n  this.x2 += d;\n  this.y2 += d;\n  return this;\n};\n\nprototype.round = function() {\n  this.x1 = Math.floor(this.x1);\n  this.y1 = Math.floor(this.y1);\n  this.x2 = Math.ceil(this.x2);\n  this.y2 = Math.ceil(this.y2);\n  return this;\n};\n\nprototype.translate = function(dx, dy) {\n  this.x1 += dx;\n  this.x2 += dx;\n  this.y1 += dy;\n  this.y2 += dy;\n  return this;\n};\n\nprototype.rotate = function(angle, x, y) {\n  var cos = Math.cos(angle),\n      sin = Math.sin(angle),\n      cx = x - x*cos + y*sin,\n      cy = y - x*sin - y*cos,\n      x1 = this.x1, x2 = this.x2,\n      y1 = this.y1, y2 = this.y2;\n\n  return this.clear()\n    .add(cos*x1 - sin*y1 + cx,  sin*x1 + cos*y1 + cy)\n    .add(cos*x1 - sin*y2 + cx,  sin*x1 + cos*y2 + cy)\n    .add(cos*x2 - sin*y1 + cx,  sin*x2 + cos*y1 + cy)\n    .add(cos*x2 - sin*y2 + cx,  sin*x2 + cos*y2 + cy);\n};\n\nprototype.union = function(b) {\n  if (b.x1 < this.x1) this.x1 = b.x1;\n  if (b.y1 < this.y1) this.y1 = b.y1;\n  if (b.x2 > this.x2) this.x2 = b.x2;\n  if (b.y2 > this.y2) this.y2 = b.y2;\n  return this;\n};\n\nprototype.encloses = function(b) {\n  return b && (\n    this.x1 <= b.x1 &&\n    this.x2 >= b.x2 &&\n    this.y1 <= b.y1 &&\n    this.y2 >= b.y2\n  );\n};\n\nprototype.alignsWith = function(b) {\n  return b && (\n    this.x1 == b.x1 ||\n    this.x2 == b.x2 ||\n    this.y1 == b.y1 ||\n    this.y2 == b.y2\n  );\n};\n\nprototype.intersects = function(b) {\n  return b && !(\n    this.x2 < b.x1 ||\n    this.x1 > b.x2 ||\n    this.y2 < b.y1 ||\n    this.y1 > b.y2\n  );\n};\n\nprototype.contains = function(x, y) {\n  return !(\n    x < this.x1 ||\n    x > this.x2 ||\n    y < this.y1 ||\n    y > this.y2\n  );\n};\n\nprototype.width = function() {\n  return this.x2 - this.x1;\n};\n\nprototype.height = function() {\n  return this.y2 - this.y1;\n};\n\nmodule.exports = Bounds;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/util/Bounds.js\n// module id = SwAC\n// module chunks = 0","var DEPS = require('./Dependencies').ALL;\n\nfunction create(cs, reflow) {\n  var out = {};\n  copy(cs, out);\n\n  out.add = [];\n  out.mod = [];\n  out.rem = [];\n\n  out.reflow = reflow;\n\n  return out;\n}\n\nfunction copy(a, b) {\n  b.stamp = a ? a.stamp : 0;\n  b.sort  = a ? a.sort  : null;\n  b.facet = a ? a.facet : null;\n  b.trans = a ? a.trans : null;\n  b.dirty = a ? a.dirty : [];\n  b.request = a ? a.request : null;\n  for (var d, i=0, n=DEPS.length; i<n; ++i) {\n    b[d=DEPS[i]] = a ? a[d] : {};\n  }\n}\n\nmodule.exports = {\n  create: create,\n  copy: copy\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-dataflow/src/ChangeSet.js\n// module id = T3kM\n// module chunks = 0","\"use strict\";\nvar aggregate_1 = require('../aggregate');\nvar channel_1 = require('../channel');\nvar data_1 = require('../data');\nvar fielddef_1 = require('../fielddef');\nvar mark_1 = require('../mark');\nvar scale_1 = require('../scale');\nvar stack_1 = require('../stack');\nvar timeunit_1 = require('../timeunit');\nvar type_1 = require('../type');\nvar util_1 = require('../util');\nvar time_1 = require('./time');\nexports.COLOR_LEGEND = 'color_legend';\nexports.COLOR_LEGEND_LABEL = 'color_legend_label';\nfunction parseScaleComponent(model) {\n    return model.channels().reduce(function (scale, channel) {\n        if (model.scale(channel)) {\n            var fieldDef = model.fieldDef(channel);\n            var scales = {\n                main: parseMainScale(model, fieldDef, channel)\n            };\n            if (channel === channel_1.COLOR && model.legend(channel_1.COLOR) && (fieldDef.type === type_1.ORDINAL || fieldDef.bin || fieldDef.timeUnit)) {\n                scales.colorLegend = parseColorLegendScale(model, fieldDef);\n                if (fieldDef.bin) {\n                    scales.binColorLegend = parseBinColorLegendLabel(model, fieldDef);\n                }\n            }\n            scale[channel] = scales;\n        }\n        return scale;\n    }, {});\n}\nexports.parseScaleComponent = parseScaleComponent;\nfunction parseMainScale(model, fieldDef, channel) {\n    var scale = model.scale(channel);\n    var sort = model.sort(channel);\n    var scaleDef = {\n        name: model.scaleName(channel),\n        type: scale.type,\n    };\n    if (channel === channel_1.X && model.has(channel_1.X2)) {\n        if (model.has(channel_1.X)) {\n            scaleDef.domain = { fields: [domain(scale, model, channel_1.X), domain(scale, model, channel_1.X2)] };\n        }\n        else {\n            scaleDef.domain = domain(scale, model, channel_1.X2);\n        }\n    }\n    else if (channel === channel_1.Y && model.has(channel_1.Y2)) {\n        if (model.has(channel_1.Y)) {\n            scaleDef.domain = { fields: [domain(scale, model, channel_1.Y), domain(scale, model, channel_1.Y2)] };\n        }\n        else {\n            scaleDef.domain = domain(scale, model, channel_1.Y2);\n        }\n    }\n    else {\n        scaleDef.domain = domain(scale, model, channel);\n    }\n    util_1.extend(scaleDef, rangeMixins(scale, model, channel));\n    if (sort && (typeof sort === 'string' ? sort : sort.order) === 'descending') {\n        scaleDef.reverse = true;\n    }\n    [\n        'round',\n        'clamp', 'nice',\n        'exponent', 'zero',\n        'padding', 'points'\n    ].forEach(function (property) {\n        var value = exports[property](scale, channel, fieldDef, model);\n        if (value !== undefined) {\n            scaleDef[property] = value;\n        }\n    });\n    return scaleDef;\n}\nfunction parseColorLegendScale(model, fieldDef) {\n    return {\n        name: model.scaleName(exports.COLOR_LEGEND),\n        type: scale_1.ScaleType.ORDINAL,\n        domain: {\n            data: model.dataTable(),\n            field: model.field(channel_1.COLOR, (fieldDef.bin || fieldDef.timeUnit) ? {} : { prefn: 'rank_' }),\n            sort: true\n        },\n        range: { data: model.dataTable(), field: model.field(channel_1.COLOR), sort: true }\n    };\n}\nfunction parseBinColorLegendLabel(model, fieldDef) {\n    return {\n        name: model.scaleName(exports.COLOR_LEGEND_LABEL),\n        type: scale_1.ScaleType.ORDINAL,\n        domain: {\n            data: model.dataTable(),\n            field: model.field(channel_1.COLOR),\n            sort: true\n        },\n        range: {\n            data: model.dataTable(),\n            field: fielddef_1.field(fieldDef, { binSuffix: '_range' }),\n            sort: {\n                field: model.field(channel_1.COLOR, { binSuffix: '_start' }),\n                op: 'min'\n            }\n        }\n    };\n}\nfunction scaleType(scale, fieldDef, channel, mark) {\n    if (!channel_1.hasScale(channel)) {\n        return null;\n    }\n    if (util_1.contains([channel_1.ROW, channel_1.COLUMN, channel_1.SHAPE], channel)) {\n        return scale_1.ScaleType.ORDINAL;\n    }\n    if (scale.type !== undefined) {\n        return scale.type;\n    }\n    switch (fieldDef.type) {\n        case type_1.NOMINAL:\n            return scale_1.ScaleType.ORDINAL;\n        case type_1.ORDINAL:\n            if (channel === channel_1.COLOR) {\n                return scale_1.ScaleType.LINEAR;\n            }\n            return scale_1.ScaleType.ORDINAL;\n        case type_1.TEMPORAL:\n            if (channel === channel_1.COLOR) {\n                return scale_1.ScaleType.TIME;\n            }\n            if (fieldDef.timeUnit) {\n                switch (fieldDef.timeUnit) {\n                    case timeunit_1.TimeUnit.HOURS:\n                    case timeunit_1.TimeUnit.DAY:\n                    case timeunit_1.TimeUnit.MONTH:\n                    case timeunit_1.TimeUnit.QUARTER:\n                        return scale_1.ScaleType.ORDINAL;\n                    default:\n                        return scale_1.ScaleType.TIME;\n                }\n            }\n            return scale_1.ScaleType.TIME;\n        case type_1.QUANTITATIVE:\n            if (fieldDef.bin) {\n                return util_1.contains([channel_1.X, channel_1.Y, channel_1.COLOR], channel) ? scale_1.ScaleType.LINEAR : scale_1.ScaleType.ORDINAL;\n            }\n            return scale_1.ScaleType.LINEAR;\n    }\n    return null;\n}\nexports.scaleType = scaleType;\nfunction domain(scale, model, channel) {\n    var fieldDef = model.fieldDef(channel);\n    if (scale.domain) {\n        return scale.domain;\n    }\n    if (fieldDef.type === type_1.TEMPORAL) {\n        if (time_1.rawDomain(fieldDef.timeUnit, channel)) {\n            return {\n                data: fieldDef.timeUnit,\n                field: 'date'\n            };\n        }\n        return {\n            data: model.dataTable(),\n            field: model.field(channel),\n            sort: {\n                field: model.field(channel),\n                op: 'min'\n            }\n        };\n    }\n    var stack = model.stack();\n    if (stack && channel === stack.fieldChannel) {\n        if (stack.offset === stack_1.StackOffset.NORMALIZE) {\n            return [0, 1];\n        }\n        return {\n            data: model.dataName(data_1.STACKED_SCALE),\n            field: model.field(channel, { prefn: 'sum_' })\n        };\n    }\n    var useRawDomain = _useRawDomain(scale, model, channel), sort = domainSort(model, channel, scale.type);\n    if (useRawDomain) {\n        return {\n            data: data_1.SOURCE,\n            field: model.field(channel, { noAggregate: true })\n        };\n    }\n    else if (fieldDef.bin) {\n        if (scale.type === scale_1.ScaleType.ORDINAL) {\n            return {\n                data: model.dataTable(),\n                field: model.field(channel, { binSuffix: '_range' }),\n                sort: {\n                    field: model.field(channel, { binSuffix: '_start' }),\n                    op: 'min'\n                }\n            };\n        }\n        else if (channel === channel_1.COLOR) {\n            return {\n                data: model.dataTable(),\n                field: model.field(channel, { binSuffix: '_start' })\n            };\n        }\n        else {\n            return {\n                data: model.dataTable(),\n                field: [\n                    model.field(channel, { binSuffix: '_start' }),\n                    model.field(channel, { binSuffix: '_end' })\n                ]\n            };\n        }\n    }\n    else if (sort) {\n        return {\n            data: sort.op ? data_1.SOURCE : model.dataTable(),\n            field: (fieldDef.type === type_1.ORDINAL && channel === channel_1.COLOR) ? model.field(channel, { prefn: 'rank_' }) : model.field(channel),\n            sort: sort\n        };\n    }\n    else {\n        return {\n            data: model.dataTable(),\n            field: (fieldDef.type === type_1.ORDINAL && channel === channel_1.COLOR) ? model.field(channel, { prefn: 'rank_' }) : model.field(channel),\n        };\n    }\n}\nexports.domain = domain;\nfunction domainSort(model, channel, scaleType) {\n    if (scaleType !== scale_1.ScaleType.ORDINAL) {\n        return undefined;\n    }\n    var sort = model.sort(channel);\n    if (util_1.contains(['ascending', 'descending', undefined], sort)) {\n        return true;\n    }\n    if (typeof sort !== 'string') {\n        return {\n            op: sort.op,\n            field: sort.field\n        };\n    }\n    return undefined;\n}\nexports.domainSort = domainSort;\nfunction _useRawDomain(scale, model, channel) {\n    var fieldDef = model.fieldDef(channel);\n    return scale.useRawDomain &&\n        fieldDef.aggregate &&\n        aggregate_1.SHARED_DOMAIN_OPS.indexOf(fieldDef.aggregate) >= 0 &&\n        ((fieldDef.type === type_1.QUANTITATIVE && !fieldDef.bin) ||\n            (fieldDef.type === type_1.TEMPORAL && util_1.contains([scale_1.ScaleType.TIME, scale_1.ScaleType.UTC], scale.type)));\n}\nfunction rangeMixins(scale, model, channel) {\n    var fieldDef = model.fieldDef(channel);\n    var scaleConfig = model.config().scale;\n    if (scale.type === scale_1.ScaleType.ORDINAL && scale.bandSize && util_1.contains([channel_1.X, channel_1.Y], channel)) {\n        return { bandSize: scale.bandSize };\n    }\n    if (scale.range && !util_1.contains([channel_1.X, channel_1.Y, channel_1.ROW, channel_1.COLUMN], channel)) {\n        return { range: scale.range };\n    }\n    switch (channel) {\n        case channel_1.ROW:\n            return { range: 'height' };\n        case channel_1.COLUMN:\n            return { range: 'width' };\n    }\n    var unitModel = model;\n    switch (channel) {\n        case channel_1.X:\n            return {\n                rangeMin: 0,\n                rangeMax: unitModel.config().cell.width\n            };\n        case channel_1.Y:\n            return {\n                rangeMin: unitModel.config().cell.height,\n                rangeMax: 0\n            };\n        case channel_1.SIZE:\n            if (unitModel.mark() === mark_1.BAR) {\n                if (scaleConfig.barSizeRange !== undefined) {\n                    return { range: scaleConfig.barSizeRange };\n                }\n                var dimension = model.config().mark.orient === 'horizontal' ? channel_1.Y : channel_1.X;\n                return { range: [model.config().mark.barThinSize, model.scale(dimension).bandSize] };\n            }\n            else if (unitModel.mark() === mark_1.TEXT) {\n                return { range: scaleConfig.fontSizeRange };\n            }\n            else if (unitModel.mark() === mark_1.RULE) {\n                return { range: scaleConfig.ruleSizeRange };\n            }\n            else if (unitModel.mark() === mark_1.TICK) {\n                return { range: scaleConfig.tickSizeRange };\n            }\n            if (scaleConfig.pointSizeRange !== undefined) {\n                return { range: scaleConfig.pointSizeRange };\n            }\n            var bandSize = pointBandSize(unitModel);\n            return { range: [9, (bandSize - 2) * (bandSize - 2)] };\n        case channel_1.SHAPE:\n            return { range: scaleConfig.shapeRange };\n        case channel_1.COLOR:\n            if (fieldDef.type === type_1.NOMINAL) {\n                return { range: scaleConfig.nominalColorRange };\n            }\n            return { range: scaleConfig.sequentialColorRange };\n        case channel_1.OPACITY:\n            return { range: scaleConfig.opacity };\n    }\n    return {};\n}\nexports.rangeMixins = rangeMixins;\nfunction pointBandSize(model) {\n    var scaleConfig = model.config().scale;\n    var hasX = model.has(channel_1.X);\n    var hasY = model.has(channel_1.Y);\n    var xIsMeasure = fielddef_1.isMeasure(model.encoding().x);\n    var yIsMeasure = fielddef_1.isMeasure(model.encoding().y);\n    if (hasX && hasY) {\n        return xIsMeasure !== yIsMeasure ?\n            model.scale(xIsMeasure ? channel_1.Y : channel_1.X).bandSize :\n            Math.min(model.scale(channel_1.X).bandSize || scaleConfig.bandSize, model.scale(channel_1.Y).bandSize || scaleConfig.bandSize);\n    }\n    else if (hasY) {\n        return yIsMeasure ? model.config().scale.bandSize : model.scale(channel_1.Y).bandSize;\n    }\n    else if (hasX) {\n        return xIsMeasure ? model.config().scale.bandSize : model.scale(channel_1.X).bandSize;\n    }\n    return model.config().scale.bandSize;\n}\nfunction clamp(scale) {\n    if (util_1.contains([scale_1.ScaleType.LINEAR, scale_1.ScaleType.POW, scale_1.ScaleType.SQRT,\n        scale_1.ScaleType.LOG, scale_1.ScaleType.TIME, scale_1.ScaleType.UTC], scale.type)) {\n        return scale.clamp;\n    }\n    return undefined;\n}\nexports.clamp = clamp;\nfunction exponent(scale) {\n    if (scale.type === scale_1.ScaleType.POW) {\n        return scale.exponent;\n    }\n    return undefined;\n}\nexports.exponent = exponent;\nfunction nice(scale, channel, fieldDef) {\n    if (util_1.contains([scale_1.ScaleType.LINEAR, scale_1.ScaleType.POW, scale_1.ScaleType.SQRT, scale_1.ScaleType.LOG,\n        scale_1.ScaleType.TIME, scale_1.ScaleType.UTC, scale_1.ScaleType.QUANTIZE], scale.type)) {\n        if (scale.nice !== undefined) {\n            return scale.nice;\n        }\n        if (util_1.contains([scale_1.ScaleType.TIME, scale_1.ScaleType.UTC], scale.type)) {\n            return time_1.smallestUnit(fieldDef.timeUnit);\n        }\n        return util_1.contains([channel_1.X, channel_1.Y], channel);\n    }\n    return undefined;\n}\nexports.nice = nice;\nfunction padding(scale, channel) {\n    if (scale.type === scale_1.ScaleType.ORDINAL && util_1.contains([channel_1.X, channel_1.Y], channel)) {\n        return scale.padding;\n    }\n    return undefined;\n}\nexports.padding = padding;\nfunction points(scale, channel, __, model) {\n    if (scale.type === scale_1.ScaleType.ORDINAL && util_1.contains([channel_1.X, channel_1.Y], channel)) {\n        return true;\n    }\n    return undefined;\n}\nexports.points = points;\nfunction round(scale, channel) {\n    if (util_1.contains([channel_1.X, channel_1.Y, channel_1.ROW, channel_1.COLUMN, channel_1.SIZE], channel) && scale.round !== undefined) {\n        return scale.round;\n    }\n    return undefined;\n}\nexports.round = round;\nfunction zero(scale, channel, fieldDef) {\n    if (!util_1.contains([scale_1.ScaleType.TIME, scale_1.ScaleType.UTC, scale_1.ScaleType.ORDINAL], scale.type)) {\n        if (scale.zero !== undefined) {\n            return scale.zero;\n        }\n        return !fieldDef.bin && util_1.contains([channel_1.X, channel_1.Y], channel);\n    }\n    return undefined;\n}\nexports.zero = zero;\n//# sourceMappingURL=scale.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/scale.js\n// module id = TLMq\n// module chunks = 0","var df = require('vega-dataflow'),\n    Tuple = df.Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction Formula(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: 'value'},\n    expr:  {type: 'expr'}\n  });\n\n  return this.mutates(true);\n}\n\nvar prototype = (Formula.prototype = Object.create(Transform.prototype));\nprototype.constructor = Formula;\n\nprototype.transform = function(input) {\n  log.debug(input, ['formulating']);\n\n  var field = this.param('field'),\n      expr = this.param('expr'),\n      updated = false;\n\n  function set(x) {\n    Tuple.set(x, field, expr(x));\n    updated = true;\n  }\n\n  input.add.forEach(set);\n\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n  }\n\n  if (updated) input.fields[field] = 1;\n  return input;\n};\n\nmodule.exports = Formula;\n\nFormula.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Formula transform\",\n  \"description\": \"Extends data elements with new values according to a calculation formula.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"formula\"]},\n    \"field\": {\n      \"type\": \"string\",\n      \"description\": \"The property name in which to store the computed formula value.\"\n    },\n    \"expr\": {\n      \"type\": \"string\",\n      \"description\": \"A string containing an expression (in JavaScript syntax) for the formula.\"\n    }\n  },\n  \"required\": [\"type\", \"field\", \"expr\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Formula.js\n// module id = TXaq\n// module chunks = 0","var dl = require('datalib'),\n    template = dl.template,\n    expr = require('vega-expression'),\n    args = ['datum', 'parent', 'event', 'signals'];\n\nvar compile = expr.compiler(args, {\n  idWhiteList: args,\n  fieldVar:    args[0],\n  globalVar:   function(id) {\n    return 'this.sig[' + dl.str(id) + ']._value';\n  },\n  functions:   function(codegen) {\n    var fn = expr.functions(codegen);\n    fn.eventItem  = 'event.vg.getItem';\n    fn.eventGroup = 'event.vg.getGroup';\n    fn.eventX     = 'event.vg.getX';\n    fn.eventY     = 'event.vg.getY';\n    fn.open       = openGen(codegen);\n    fn.scale      = scaleGen(codegen, false);\n    fn.iscale     = scaleGen(codegen, true);\n    fn.inrange    = 'this.defs.inrange';\n    fn.indata     = indataGen(codegen);\n    fn.format     = 'this.defs.format';\n    fn.timeFormat = 'this.defs.timeFormat';\n    fn.utcFormat  = 'this.defs.utcFormat';\n    return fn;\n  },\n  functionDefs: function(/*codegen*/) {\n    return {\n      'scale':      scale,\n      'inrange':    inrange,\n      'indata':     indata,\n      'format':     numberFormat,\n      'timeFormat': timeFormat,\n      'utcFormat':  utcFormat,\n      'open':       windowOpen\n    };\n  }\n});\n\nfunction openGen(codegen) {\n  return function (args) {\n    args = args.map(codegen);\n    var n = args.length;\n    if (n < 1 || n > 2) {\n      throw Error(\"open takes exactly 1 or 2 arguments.\");\n    }\n    return 'this.defs.open(this.model, ' +\n      args[0] + (n > 1 ? ',' + args[1] : '') + ')';\n  };\n}\n\nfunction windowOpen(model, url, name) {\n  if (typeof window !== 'undefined' && window && window.open) {\n    var opt = dl.extend({type: 'open', url: url, name: name}, model.config().load),\n        uri = dl.load.sanitizeUrl(opt);\n    if (uri) {\n      window.open(uri, name);\n    } else {\n      throw Error('Invalid URL: ' + opt.url);\n    }\n  } else {\n    throw Error('Open function can only be invoked in a browser.');\n  }\n}\n\nfunction scaleGen(codegen, invert) {\n  return function(args) {\n    args = args.map(codegen);\n    var n = args.length;\n    if (n < 2 || n > 3) {\n      throw Error(\"scale takes exactly 2 or 3 arguments.\");\n    }\n    return 'this.defs.scale(this.model, ' + invert + ', ' +\n      args[0] + ',' + args[1] + (n > 2 ? ',' + args[2] : '') + ')';\n  };\n}\n\nfunction scale(model, invert, name, value, scope) {\n  if (!scope || !scope.scale) {\n    scope = (scope && scope.mark) ? scope.mark.group : model.scene().items[0];\n  }\n  // Verify scope is valid\n  if (model.group(scope._id) !== scope) {\n    throw Error('Scope for scale \"'+name+'\" is not a valid group item.');\n  }\n  var s = scope.scale(name);\n  return !s ? value : (invert ? s.invert(value) : s(value));\n}\n\nfunction inrange(val, a, b, exclusive) {\n  var min = a, max = b;\n  if (a > b) { min = b; max = a; }\n  return exclusive ?\n    (min < val && max > val) :\n    (min <= val && max >= val);\n}\n\nfunction indataGen(codegen) {\n  return function(args, globals, fields, dataSources) {\n    var data;\n    if (args.length !== 3) {\n      throw Error(\"indata takes 3 arguments.\");\n    }\n    if (args[0].type !== 'Literal') {\n      throw Error(\"Data source name must be a literal for indata.\");\n    }\n\n    data = args[0].value;\n    dataSources[data] = 1;\n    if (args[2].type === 'Literal') {\n      indataGen.model.requestIndex(data, args[2].value);\n    }\n\n    args = args.map(codegen);\n    return 'this.defs.indata(this.model,' +\n      args[0] + ',' + args[1] + ',' + args[2] + ')';\n  };\n}\n\nfunction indata(model, dataname, val, field) {\n  var data = model.data(dataname),\n      index = data.getIndex(field);\n  return index[val] > 0;\n}\n\nfunction numberFormat(specifier, v) {\n  return template.format(specifier, 'number')(v);\n}\n\nfunction timeFormat(specifier, d) {\n  return template.format(specifier, 'time')(d);\n}\n\nfunction utcFormat(specifier, d) {\n  return template.format(specifier, 'utc')(d);\n}\n\nfunction wrap(model) {\n  return function(str) {\n    indataGen.model = model;\n    var x = compile(str);\n    x.model = model;\n    x.sig = model ? model._signals : {};\n    return x;\n  };\n}\n\nwrap.scale = scale;\nwrap.codegen = compile.codegen;\nmodule.exports = wrap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/expr.js\n// module id = TrdW\n// module chunks = 0","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define('d3-format', ['exports'], factory) :\n  factory((global.d3_format = {}));\n}(this, function (exports) { 'use strict';\n\n  // Computes the decimal coefficient and exponent of the specified number x with\n  // significant digits p, where x is positive and p is in [1, 21] or undefined.\n  // For example, formatDecimal(1.23) returns [\"123\", 0].\n  function formatDecimal(x, p) {\n    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n    var i, coefficient = x.slice(0, i);\n\n    // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n    return [\n      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n      +x.slice(i + 1)\n    ];\n  };\n\n  function exponent(x) {\n    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n  };\n\n  function formatGroup(grouping, thousands) {\n    return function(value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = grouping[j = (j + 1) % grouping.length];\n      }\n\n      return t.reverse().join(thousands);\n    };\n  };\n\n  var prefixExponent;\n\n  function formatPrefixAuto(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1],\n        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n        n = coefficient.length;\n    return i === n ? coefficient\n        : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n        : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n        : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n  };\n\n  function formatRounded(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1];\n    return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n        : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n  };\n\n  function formatDefault(x, p) {\n    x = x.toPrecision(p);\n\n    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n      switch (x[i]) {\n        case \".\": i0 = i1 = i; break;\n        case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n        case \"e\": break out;\n        default: if (i0 > 0) i0 = 0; break;\n      }\n    }\n\n    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n  };\n\n  var formatTypes = {\n    \"\": formatDefault,\n    \"%\": function(x, p) { return (x * 100).toFixed(p); },\n    \"b\": function(x) { return Math.round(x).toString(2); },\n    \"c\": function(x) { return x + \"\"; },\n    \"d\": function(x) { return Math.round(x).toString(10); },\n    \"e\": function(x, p) { return x.toExponential(p); },\n    \"f\": function(x, p) { return x.toFixed(p); },\n    \"g\": function(x, p) { return x.toPrecision(p); },\n    \"o\": function(x) { return Math.round(x).toString(8); },\n    \"p\": function(x, p) { return formatRounded(x * 100, p); },\n    \"r\": formatRounded,\n    \"s\": formatPrefixAuto,\n    \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n    \"x\": function(x) { return Math.round(x).toString(16); }\n  };\n\n  // [[fill]align][sign][symbol][0][width][,][.precision][type]\n  var re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\n  function formatSpecifier(specifier) {\n    return new FormatSpecifier(specifier);\n  };\n\n  function FormatSpecifier(specifier) {\n    if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n    var match,\n        fill = match[1] || \" \",\n        align = match[2] || \">\",\n        sign = match[3] || \"-\",\n        symbol = match[4] || \"\",\n        zero = !!match[5],\n        width = match[6] && +match[6],\n        comma = !!match[7],\n        precision = match[8] && +match[8].slice(1),\n        type = match[9] || \"\";\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // Map invalid types to the default format.\n    else if (!formatTypes[type]) type = \"\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    this.fill = fill;\n    this.align = align;\n    this.sign = sign;\n    this.symbol = symbol;\n    this.zero = zero;\n    this.width = width;\n    this.comma = comma;\n    this.precision = precision;\n    this.type = type;\n  }\n\n  FormatSpecifier.prototype.toString = function() {\n    return this.fill\n        + this.align\n        + this.sign\n        + this.symbol\n        + (this.zero ? \"0\" : \"\")\n        + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n        + (this.comma ? \",\" : \"\")\n        + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n        + this.type;\n  };\n\n  var prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\n  function identity(x) {\n    return x;\n  }\n\n  function locale(locale) {\n    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n        currency = locale.currency,\n        decimal = locale.decimal;\n\n    function format(specifier) {\n      specifier = formatSpecifier(specifier);\n\n      var fill = specifier.fill,\n          align = specifier.align,\n          sign = specifier.sign,\n          symbol = specifier.symbol,\n          zero = specifier.zero,\n          width = specifier.width,\n          comma = specifier.comma,\n          precision = specifier.precision,\n          type = specifier.type;\n\n      // Compute the prefix and suffix.\n      // For SI-prefix, the suffix is lazily computed.\n      var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n          suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n      // What format function should we use?\n      // Is this an integer type?\n      // Can this type generate exponential notation?\n      var formatType = formatTypes[type],\n          maybeSuffix = !type || /[defgprs%]/.test(type);\n\n      // Set the default precision if not specified,\n      // or clamp the specified precision to the supported range.\n      // For significant precision, it must be in [1, 21].\n      // For fixed precision, it must be in [0, 20].\n      precision = precision == null ? (type ? 6 : 12)\n          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n          : Math.max(0, Math.min(20, precision));\n\n      return function(value) {\n        var valuePrefix = prefix,\n            valueSuffix = suffix;\n\n        if (type === \"c\") {\n          valueSuffix = formatType(value) + valueSuffix;\n          value = \"\";\n        } else {\n          value = +value;\n\n          // Convert negative to positive, and compute the prefix.\n          // Note that -0 is not less than 0, but 1 / -0 is!\n          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n          // Perform the initial formatting.\n          value = formatType(value, precision);\n\n          // If the original value was negative, it may be rounded to zero during\n          // formatting; treat this as (positive) zero.\n          if (valueNegative) {\n            var i = -1, n = value.length, c;\n            valueNegative = false;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), (48 < c && c < 58)\n                  || (type === \"x\" && 96 < c && c < 103)\n                  || (type === \"X\" && 64 < c && c < 71)) {\n                valueNegative = true;\n                break;\n              }\n            }\n          }\n\n          // Compute the prefix and suffix.\n          valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n          valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n          // Break the formatted value into the integer “value” part that can be\n          // grouped, and fractional or exponential “suffix” part that is not.\n          if (maybeSuffix) {\n            var i = -1, n = value.length, c;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), 48 > c || c > 57) {\n                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n                value = value.slice(0, i);\n                break;\n              }\n            }\n          }\n        }\n\n        // If the fill character is not \"0\", grouping is applied before padding.\n        if (comma && !zero) value = group(value, Infinity);\n\n        // Compute the padding.\n        var length = valuePrefix.length + value.length + valueSuffix.length,\n            padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n        // If the fill character is \"0\", grouping is applied after padding.\n        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n        // Reconstruct the final output based on the desired alignment.\n        switch (align) {\n          case \"<\": return valuePrefix + value + valueSuffix + padding;\n          case \"=\": return valuePrefix + padding + value + valueSuffix;\n          case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n        }\n        return padding + valuePrefix + value + valueSuffix;\n      };\n    }\n\n    function formatPrefix(specifier, value) {\n      var f = format((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n          e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n          k = Math.pow(10, -e),\n          prefix = prefixes[8 + e / 3];\n      return function(value) {\n        return f(k * value) + prefix;\n      };\n    }\n\n    return {\n      format: format,\n      formatPrefix: formatPrefix\n    };\n  };\n\n  var defaultLocale = locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  });\n\n  var caES = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  });\n\n  var csCZ = locale({\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0Kč\"],\n  });\n\n  var deCH = locale({\n    decimal: \",\",\n    thousands: \"'\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0CHF\"]\n  });\n\n  var deDE = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  });\n\n  var enCA = locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  });\n\n  var enGB = locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"£\", \"\"]\n  });\n\n  var esES = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  });\n\n  var fiFI = locale({\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  });\n\n  var frCA = locale({\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"$\"]\n  });\n\n  var frFR = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  });\n\n  var heIL = locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"₪\", \"\"]\n  });\n\n  var huHU = locale({\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0Ft\"]\n  });\n\n  var itIT = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"€\", \"\"]\n  });\n\n  var jaJP = locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"\", \"円\"]\n  });\n\n  var koKR = locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"₩\", \"\"]\n  });\n\n  var mkMK = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0ден.\"]\n  });\n\n  var nlNL = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"€\\xa0\", \"\"]\n  });\n\n  var plPL = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"zł\"]\n  });\n\n  var ptBR = locale({\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"R$\", \"\"]\n  });\n\n  var ruRU = locale({\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0руб.\"]\n  });\n\n  var svSE = locale({\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"SEK\"]\n  });\n\n  var zhCN = locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"¥\", \"\"]\n  });\n\n  function precisionFixed(step) {\n    return Math.max(0, -exponent(Math.abs(step)));\n  };\n\n  function precisionPrefix(step, value) {\n    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n  };\n\n  function precisionRound(step, max) {\n    step = Math.abs(step), max = Math.abs(max) - step;\n    return Math.max(0, exponent(max) - exponent(step)) + 1;\n  };\n\n  var format = defaultLocale.format;\n  var formatPrefix = defaultLocale.formatPrefix;\n\n  var version = \"0.4.2\";\n\n  exports.version = version;\n  exports.format = format;\n  exports.formatPrefix = formatPrefix;\n  exports.locale = locale;\n  exports.localeCaEs = caES;\n  exports.localeCsCz = csCZ;\n  exports.localeDeCh = deCH;\n  exports.localeDeDe = deDE;\n  exports.localeEnCa = enCA;\n  exports.localeEnGb = enGB;\n  exports.localeEnUs = defaultLocale;\n  exports.localeEsEs = esES;\n  exports.localeFiFi = fiFI;\n  exports.localeFrCa = frCA;\n  exports.localeFrFr = frFR;\n  exports.localeHeIl = heIL;\n  exports.localeHuHu = huHU;\n  exports.localeItIt = itIT;\n  exports.localeJaJp = jaJP;\n  exports.localeKoKr = koKR;\n  exports.localeMkMk = mkMK;\n  exports.localeNlNl = nlNL;\n  exports.localePlPl = plPL;\n  exports.localePtBr = ptBR;\n  exports.localeRuRu = ruRU;\n  exports.localeSvSe = svSE;\n  exports.localeZhCn = zhCN;\n  exports.formatSpecifier = formatSpecifier;\n  exports.precisionFixed = precisionFixed;\n  exports.precisionPrefix = precisionPrefix;\n  exports.precisionRound = precisionRound;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/~/d3-format/build/d3-format.js\n// module id = U1Zs\n// module chunks = 0","var dl = require('datalib'),\n    d3_svg = require('d3').svg,\n    parse = require('../path/parse');\n\nfunction x(o)     { return o.x || 0; }\nfunction y(o)     { return o.y || 0; }\nfunction xw(o)    { return (o.x || 0) + (o.width || 0); }\nfunction yh(o)    { return (o.y || 0) + (o.height || 0); }\nfunction size(o)  { return o.size == null ? 100 : o.size; }\nfunction shape(o) { return o.shape || 'circle'; }\n\nvar areav = d3_svg.area().x(x).y1(y).y0(yh),\n    areah = d3_svg.area().y(y).x1(x).x0(xw),\n    line  = d3_svg.line().x(x).y(y);\n\nmodule.exports = {\n  metadata: {\n    'version': '1.1',\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n  },\n  path: {\n    arc: d3_svg.arc(),\n    symbol: d3_svg.symbol().type(shape).size(size),\n    area: function(items) {\n      var o = items[0];\n      return (o.orient === 'horizontal' ? areah : areav)\n        .interpolate(o.interpolate || 'linear')\n        .tension(o.tension || 0.7)\n        (items);\n    },\n    line: function(items) {\n      var o = items[0];\n      return line\n        .interpolate(o.interpolate || 'linear')\n        .tension(o.tension || 0.7)\n        (items);\n    },\n    resize: function(pathStr, size) {\n      var path = parse(pathStr),\n          newPath = '',\n          command, current, index, i, n, j, m;\n\n      size = Math.sqrt(size);\n      for (i=0, n=path.length; i<n; ++i) {\n        for (command=path[i], j=0, m=command.length; j<m; ++j) {\n          if (command[j] === 'Z') break;\n          if ((current = +command[j]) === current) {\n            // if number, need to resize\n            index = pathStr.indexOf(current);\n            newPath += pathStr.substring(0, index) + (current * size);\n            pathStr  = pathStr.substring(index + (current+'').length);\n          }\n        }\n      }\n\n      return newPath + 'Z';\n    }\n  },\n  symbolTypes: dl.toMap(d3_svg.symbolTypes),\n  textAlign: {\n    'left':   'start',\n    'center': 'middle',\n    'right':  'end'\n  },\n  textBaseline: {\n    'top':    'before-edge',\n    'bottom': 'after-edge',\n    'middle': 'central'\n  },\n  styles: {\n    'fill':             'fill',\n    'fillOpacity':      'fill-opacity',\n    'stroke':           'stroke',\n    'strokeWidth':      'stroke-width',\n    'strokeOpacity':    'stroke-opacity',\n    'strokeCap':        'stroke-linecap',\n    'strokeDash':       'stroke-dasharray',\n    'strokeDashOffset': 'stroke-dashoffset',\n    'opacity':          'opacity'\n  },\n  styleProperties: [\n    'fill',\n    'fillOpacity',\n    'stroke',\n    'strokeWidth',\n    'strokeOpacity',\n    'strokeCap',\n    'strokeDash',\n    'strokeDashOffset',\n    'opacity'\n  ]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/util/svg.js\n// module id = UTTf\n// module chunks = 0","module.exports = {\n  axes:       require('./axes'),\n  background: require('./background'),\n  data:       require('./data'),\n  events:     require('vega-event-selector'),\n  expr:       require('./expr'),\n  legends:    require('./legends'),\n  mark:       require('./mark'),\n  marks:      require('./marks'),\n  modify:     require('./modify'),\n  padding:    require('./padding'),\n  predicates: require('./predicates'),\n  properties: require('./properties'),\n  signals:    require('./signals'),\n  spec:       require('./spec'),\n  streams:    require('./streams'),\n  transforms: require('./transforms')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/index.js\n// module id = UaGl\n// module chunks = 0","var Transform = require('./Transform'),\n    Aggregate = require('./Aggregate');\n\nfunction Facet(graph) {\n  Transform.addParameters(this, {\n    transform: {\n      type: \"custom\",\n      set: function(pipeline) {\n        return (this._transform._pipeline = pipeline, this._transform);\n      },\n      get: function() {\n        var parse = require('../parse/transforms'),\n            facet = this._transform;\n        return facet._pipeline.map(function(t) {\n          return parse(facet._graph, t);\n        });\n      }\n    }\n  });\n\n  this._pipeline = [];\n  return Aggregate.call(this, graph);\n}\n\nvar prototype = (Facet.prototype = Object.create(Aggregate.prototype));\nprototype.constructor = Facet;\n\nprototype.aggr = function() {\n  return Aggregate.prototype.aggr.call(this).facet(this);\n};\n\nprototype.transform = function(input, reset) {\n  var output  = Aggregate.prototype.transform.call(this, input, reset);\n\n  // New facet cells should trigger a re-ranking of the dataflow graph.\n  // This ensures facet datasources are computed before scenegraph nodes.\n  // We rerank the Facet's first listener, which is the next node in the\n  // datasource's pipeline.\n  if (input.add.length) {\n    this.listeners()[0].rerank();\n  }\n\n  return output;\n};\n\nmodule.exports = Facet;\n\nvar dl = require('datalib');\n\nFacet.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Facet transform\",\n  \"description\": \"A special aggregate transform that organizes a data set into groups or \\\"facets\\\".\",\n  \"type\": \"object\",\n  \"properties\": dl.extend({}, Aggregate.schema.properties, {\n    \"type\": {\"enum\": [\"facet\"]},\n    \"transform\": {\"$ref\": \"#/defs/transform\"}\n  }),\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Facet.js\n// module id = Uikm\n// module chunks = 0","\"use strict\";\nvar util_1 = require('./util');\nvar mark_1 = require('./mark');\nexports.DEFAULT_REQUIRED_CHANNEL_MAP = {\n    text: ['text'],\n    line: ['x', 'y'],\n    area: ['x', 'y']\n};\nexports.DEFAULT_SUPPORTED_CHANNEL_TYPE = {\n    bar: util_1.toMap(['row', 'column', 'x', 'y', 'size', 'color', 'detail']),\n    line: util_1.toMap(['row', 'column', 'x', 'y', 'color', 'detail']),\n    area: util_1.toMap(['row', 'column', 'x', 'y', 'color', 'detail']),\n    tick: util_1.toMap(['row', 'column', 'x', 'y', 'color', 'detail']),\n    circle: util_1.toMap(['row', 'column', 'x', 'y', 'color', 'size', 'detail']),\n    square: util_1.toMap(['row', 'column', 'x', 'y', 'color', 'size', 'detail']),\n    point: util_1.toMap(['row', 'column', 'x', 'y', 'color', 'size', 'detail', 'shape']),\n    text: util_1.toMap(['row', 'column', 'size', 'color', 'text'])\n};\nfunction getEncodingMappingError(spec, requiredChannelMap, supportedChannelMap) {\n    if (requiredChannelMap === void 0) { requiredChannelMap = exports.DEFAULT_REQUIRED_CHANNEL_MAP; }\n    if (supportedChannelMap === void 0) { supportedChannelMap = exports.DEFAULT_SUPPORTED_CHANNEL_TYPE; }\n    var mark = spec.mark;\n    var encoding = spec.encoding;\n    var requiredChannels = requiredChannelMap[mark];\n    var supportedChannels = supportedChannelMap[mark];\n    for (var i in requiredChannels) {\n        if (!(requiredChannels[i] in encoding)) {\n            return 'Missing encoding channel \\\"' + requiredChannels[i] +\n                '\\\" for mark \\\"' + mark + '\\\"';\n        }\n    }\n    for (var channel in encoding) {\n        if (!supportedChannels[channel]) {\n            return 'Encoding channel \\\"' + channel +\n                '\\\" is not supported by mark type \\\"' + mark + '\\\"';\n        }\n    }\n    if (mark === mark_1.BAR && !encoding.x && !encoding.y) {\n        return 'Missing both x and y for bar';\n    }\n    return null;\n}\nexports.getEncodingMappingError = getEncodingMappingError;\n//# sourceMappingURL=validate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/validate.js\n// module id = Utn/\n// module chunks = 0","\"use strict\";\nvar util_1 = require('../../util');\nvar source_1 = require('./source');\nvar formatparse_1 = require('./formatparse');\nvar nullfilter_1 = require('./nullfilter');\nvar filter_1 = require('./filter');\nvar bin_1 = require('./bin');\nvar formula_1 = require('./formula');\nvar nonpositivenullfilter_1 = require('./nonpositivenullfilter');\nvar summary_1 = require('./summary');\nvar stackscale_1 = require('./stackscale');\nvar timeunit_1 = require('./timeunit');\nvar timeunitdomain_1 = require('./timeunitdomain');\nvar colorrank_1 = require('./colorrank');\nfunction parseUnitData(model) {\n    return {\n        formatParse: formatparse_1.formatParse.parseUnit(model),\n        nullFilter: nullfilter_1.nullFilter.parseUnit(model),\n        filter: filter_1.filter.parseUnit(model),\n        nonPositiveFilter: nonpositivenullfilter_1.nonPositiveFilter.parseUnit(model),\n        source: source_1.source.parseUnit(model),\n        bin: bin_1.bin.parseUnit(model),\n        calculate: formula_1.formula.parseUnit(model),\n        timeUnit: timeunit_1.timeUnit.parseUnit(model),\n        timeUnitDomain: timeunitdomain_1.timeUnitDomain.parseUnit(model),\n        summary: summary_1.summary.parseUnit(model),\n        stackScale: stackscale_1.stackScale.parseUnit(model),\n        colorRank: colorrank_1.colorRank.parseUnit(model)\n    };\n}\nexports.parseUnitData = parseUnitData;\nfunction parseFacetData(model) {\n    return {\n        formatParse: formatparse_1.formatParse.parseFacet(model),\n        nullFilter: nullfilter_1.nullFilter.parseFacet(model),\n        filter: filter_1.filter.parseFacet(model),\n        nonPositiveFilter: nonpositivenullfilter_1.nonPositiveFilter.parseFacet(model),\n        source: source_1.source.parseFacet(model),\n        bin: bin_1.bin.parseFacet(model),\n        calculate: formula_1.formula.parseFacet(model),\n        timeUnit: timeunit_1.timeUnit.parseFacet(model),\n        timeUnitDomain: timeunitdomain_1.timeUnitDomain.parseFacet(model),\n        summary: summary_1.summary.parseFacet(model),\n        stackScale: stackscale_1.stackScale.parseFacet(model),\n        colorRank: colorrank_1.colorRank.parseFacet(model)\n    };\n}\nexports.parseFacetData = parseFacetData;\nfunction parseLayerData(model) {\n    return {\n        filter: filter_1.filter.parseLayer(model),\n        formatParse: formatparse_1.formatParse.parseLayer(model),\n        nullFilter: nullfilter_1.nullFilter.parseLayer(model),\n        nonPositiveFilter: nonpositivenullfilter_1.nonPositiveFilter.parseLayer(model),\n        source: source_1.source.parseLayer(model),\n        bin: bin_1.bin.parseLayer(model),\n        calculate: formula_1.formula.parseLayer(model),\n        timeUnit: timeunit_1.timeUnit.parseLayer(model),\n        timeUnitDomain: timeunitdomain_1.timeUnitDomain.parseLayer(model),\n        summary: summary_1.summary.parseLayer(model),\n        stackScale: stackscale_1.stackScale.parseLayer(model),\n        colorRank: colorrank_1.colorRank.parseLayer(model)\n    };\n}\nexports.parseLayerData = parseLayerData;\nfunction assembleData(model, data) {\n    var component = model.component.data;\n    var sourceData = source_1.source.assemble(model, component);\n    if (sourceData) {\n        data.push(sourceData);\n    }\n    summary_1.summary.assemble(component, model).forEach(function (summaryData) {\n        data.push(summaryData);\n    });\n    if (data.length > 0) {\n        var dataTable = data[data.length - 1];\n        var colorRankTransform = colorrank_1.colorRank.assemble(component);\n        if (colorRankTransform.length > 0) {\n            dataTable.transform = (dataTable.transform || []).concat(colorRankTransform);\n        }\n        var nonPositiveFilterTransform = nonpositivenullfilter_1.nonPositiveFilter.assemble(component);\n        if (nonPositiveFilterTransform.length > 0) {\n            dataTable.transform = (dataTable.transform || []).concat(nonPositiveFilterTransform);\n        }\n    }\n    else {\n        if (util_1.keys(component.colorRank).length > 0) {\n            throw new Error('Invalid colorRank not merged');\n        }\n        else if (util_1.keys(component.nonPositiveFilter).length > 0) {\n            throw new Error('Invalid nonPositiveFilter not merged');\n        }\n    }\n    var stackData = stackscale_1.stackScale.assemble(component);\n    if (stackData) {\n        data.push(stackData);\n    }\n    timeunitdomain_1.timeUnitDomain.assemble(component).forEach(function (timeUnitDomainData) {\n        data.push(timeUnitDomainData);\n    });\n    return data;\n}\nexports.assembleData = assembleData;\n//# sourceMappingURL=data.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/data.js\n// module id = V22v\n// module chunks = 0","// create a new DOM element\nfunction create(doc, tag, ns) {\n  return ns ? doc.createElementNS(ns, tag) : doc.createElement(tag);\n}\n\n// remove element from DOM\n// recursively remove parent elements if empty\nfunction remove(el) {\n  if (!el) return;\n  var p = el.parentNode;\n  if (p) {\n    p.removeChild(el);\n    if (!p.childNodes || !p.childNodes.length) remove(p);\n  }\n}\n\nmodule.exports = {\n  // find first child element with matching tag\n  find: function(el, tag) {\n    tag = tag.toLowerCase();\n    for (var i=0, n=el.childNodes.length; i<n; ++i) {\n      if (el.childNodes[i].tagName.toLowerCase() === tag) {\n        return el.childNodes[i];\n      }\n    }\n  },\n  // retrieve child element at given index\n  // create & insert if doesn't exist or if tag/className do not match\n  child: function(el, index, tag, ns, className, insert) {\n    var a, b;\n    a = b = el.childNodes[index];\n    if (!a || insert ||\n        a.tagName.toLowerCase() !== tag.toLowerCase() ||\n        className && a.getAttribute('class') != className) {\n      a = create(el.ownerDocument, tag, ns);\n      el.insertBefore(a, b || null);\n      if (className) a.setAttribute('class', className);\n    }\n    return a;\n  },\n  // remove all child elements at or above the given index\n  clear: function(el, index) {\n    var curr = el.childNodes.length;\n    while (curr > index) {\n      el.removeChild(el.childNodes[--curr]);\n    }\n    return el;\n  },\n  remove: remove,\n  // generate css class name for mark\n  cssClass: function(mark) {\n    return 'mark-' + mark.marktype + (mark.name ? ' '+mark.name : '');\n  },\n  // generate string for an opening xml tag\n  // tag: the name of the xml tag\n  // attr: hash of attribute name-value pairs to include\n  // raw: additional raw string to include in tag markup\n  openTag: function(tag, attr, raw) {\n    var s = '<' + tag, key, val;\n    if (attr) {\n      for (key in attr) {\n        val = attr[key];\n        if (val != null) {\n          s += ' ' + key + '=\"' + val + '\"';\n        }\n      }\n    }\n    if (raw) s += ' ' + raw;\n    return s + '>';\n  },\n  // generate string for closing xml tag\n  // tag: the name of the xml tag\n  closeTag: function(tag) {\n    return '</' + tag + '>';\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/util/dom.js\n// module id = VY+T\n// module chunks = 0","function Renderer() {\n  this._el = null;\n  this._bgcolor = null;\n}\n\nvar prototype = Renderer.prototype;\n\nprototype.initialize = function(el, width, height, padding) {\n  this._el = el;\n  return this.resize(width, height, padding);\n};\n\n// Returns the parent container element for a visualization\nprototype.element = function() {\n  return this._el;\n};\n\n// Returns the scene element (e.g., canvas or SVG) of the visualization\n// Subclasses must override if the first child is not the scene element\nprototype.scene = function() {\n  return this._el && this._el.firstChild;\n};\n\nprototype.background = function(bgcolor) {\n  if (arguments.length === 0) return this._bgcolor;\n  this._bgcolor = bgcolor;\n  return this;\n};\n\nprototype.resize = function(width, height, padding) {\n  this._width = width;\n  this._height = height;\n  this._padding = padding || {top:0, left:0, bottom:0, right:0};\n  return this;\n};\n\nprototype.render = function(/*scene, items*/) {\n  return this;\n};\n\nmodule.exports = Renderer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/render/Renderer.js\n// module id = VkFx\n// module chunks = 0","var dl = require('datalib'),\n    log = require('vega-logging'),\n    Item = require('vega-scenegraph').Item,\n    df = require('vega-dataflow'),\n    Node = df.Node, // jshint ignore:line\n    Deps = df.Dependencies,\n    Tuple = df.Tuple,\n    ChangeSet = df.ChangeSet,\n    Sentinel = {},\n    Encoder  = require('./Encoder'),\n    Bounder  = require('./Bounder'),\n    parseData = require('../parse/data');\n\nfunction Builder() {\n  return arguments.length ? this.init.apply(this, arguments) : this;\n}\n\nvar Status = Builder.STATUS = {\n  ENTER:  'enter',\n  UPDATE: 'update',\n  EXIT:   'exit'\n};\n\nvar CONNECTED = 1, DISCONNECTED = 2;\n\nvar proto = (Builder.prototype = new Node());\n\nproto.init = function(graph, def, mark, parent, parent_id, inheritFrom) {\n  Node.prototype.init.call(this, graph)\n    .router(true)\n    .collector(true);\n\n  this._def   = def;\n  this._mark  = mark;\n  this._from  = (def.from ? def.from.data : null) || inheritFrom;\n  this._ds    = dl.isString(this._from) ? graph.data(this._from) : null;\n  this._map   = {};\n  this._status = null; // Connected or disconnected?\n\n  mark.def = def;\n  mark.marktype = def.type;\n  mark.interactive = (def.interactive !== false);\n  mark.items = [];\n  if (dl.isValid(def.name)) mark.name = def.name;\n\n  this._parent = parent;\n  this._parent_id = parent_id;\n\n  if (def.from && (def.from.mark || def.from.transform || def.from.modify)) {\n    inlineDs.call(this);\n  }\n\n  // Non-group mark builders are super nodes. Encoder and Bounder remain\n  // separate operators but are embedded and called by Builder.evaluate.\n  this._isSuper = (this._def.type !== 'group');\n  this._encoder = new Encoder(this._graph, this._mark, this);\n  this._bounder = new Bounder(this._graph, this._mark);\n  this._output  = null; // Output changeset for reactive geom as Bounder reflows\n\n  if (this._ds) { this._encoder.dependency(Deps.DATA, this._from); }\n\n  // Since Builders are super nodes, copy over encoder dependencies\n  // (bounder has no registered dependencies).\n  this.dependency(Deps.DATA, this._encoder.dependency(Deps.DATA));\n  this.dependency(Deps.SCALES, this._encoder.dependency(Deps.SCALES));\n  this.dependency(Deps.SIGNALS, this._encoder.dependency(Deps.SIGNALS));\n\n  return this;\n};\n\n// Reactive geometry and mark-level transformations are handled here\n// because they need their group's data-joined context.\nfunction inlineDs() {\n  var from = this._def.from,\n      geom = from.mark,\n      src, name, spec, sibling, output, input, node;\n\n  if (geom) {\n    sibling = this.sibling(geom);\n    src  = sibling._isSuper ? sibling : sibling._bounder;\n    name = ['vg', this._parent_id, geom, src.listeners(true).length].join('_');\n    spec = {\n      name: name,\n      transform: from.transform,\n      modify: from.modify\n    };\n  } else {\n    src = this._graph.data(this._from);\n    if (!src) throw Error('Data source \"'+this._from+'\" is not defined.');\n    name = ['vg', this._from, this._def.type, src.listeners(true).length].join('_');\n    spec = {\n      name: name,\n      source: this._from,\n      transform: from.transform,\n      modify: from.modify\n    };\n  }\n\n  this._from = name;\n  this._ds = parseData.datasource(this._graph, spec);\n\n  if (geom) {\n    // Bounder reflows, so we need an intermediary node to propagate\n    // the output constructed by the Builder.\n    node = new Node(this._graph).addListener(this._ds.listener());\n    node.evaluate = function(input) {\n      var out  = ChangeSet.create(input),\n          sout = sibling._output;\n\n      out.add = sout.add;\n      out.mod = sout.mod;\n      out.rem = sout.rem;\n      return out;\n    };\n    src.addListener(node);\n  } else {\n    // At this point, we have a new datasource but it is empty as\n    // the propagation cycle has already crossed the datasources.\n    // So, we repulse just this datasource. This should be safe\n    // as the ds isn't connected to the scenegraph yet.\n    output = this._ds.source().last();\n    input  = ChangeSet.create(output);\n\n    input.add = output.add;\n    input.mod = output.mod;\n    input.rem = output.rem;\n    input.stamp = null;\n    this._graph.propagate(input, this._ds.listener(), output.stamp);\n  }\n}\n\nproto.ds = function() { return this._ds; };\nproto.parent   = function() { return this._parent; };\nproto.encoder  = function() { return this._encoder; };\nproto.pipeline = function() { return [this]; };\n\nproto.connect = function() {\n  var builder = this;\n\n  this._graph.connect(this.pipeline());\n  this._encoder._scales.forEach(function(s) {\n    if (!(s = builder._parent.scale(s))) return;\n    s.addListener(builder);\n  });\n\n  if (this._parent) {\n    if (this._isSuper) this.addListener(this._parent._collector);\n    else this._bounder.addListener(this._parent._collector);\n  }\n\n  return (this._status = CONNECTED, this);\n};\n\nproto.disconnect = function() {\n  var builder = this;\n  if (!this._listeners.length) return this;\n\n  function disconnectScales(scales) {\n    for(var i=0, len=scales.length, s; i<len; ++i) {\n      if (!(s = builder._parent.scale(scales[i]))) continue;\n      s.removeListener(builder);\n    }\n  }\n\n  Node.prototype.disconnect.call(this);\n  this._graph.disconnect(this.pipeline());\n  disconnectScales(this._encoder._scales);\n  disconnectScales(dl.keys(this._mark._scaleRefs));\n\n  return (this._status = DISCONNECTED, this);\n};\n\nproto.sibling = function(name) {\n  return this._parent.child(name, this._parent_id);\n};\n\nproto.evaluate = function(input) {\n  log.debug(input, ['building', (this._from || this._def.from), this._def.type]);\n\n  var self = this,\n      def = this._mark.def,\n      props  = def.properties || {},\n      update = props.update   || {},\n      output = ChangeSet.create(input),\n      fullUpdate, fcs, data, name;\n\n  if (this._ds) {\n    // We need to determine if any encoder dependencies have been updated.\n    // However, the encoder's data source will likely be updated, and shouldn't\n    // trigger all items to mod.\n    data = output.data[(name=this._ds.name())];\n    output.data[name] = null;\n    fullUpdate = this._encoder.reevaluate(output);\n    output.data[name] = data;\n\n    fcs = this._ds.last();\n    if (!fcs) throw Error('Builder evaluated before backing DataSource.');\n    if (fcs.stamp > this._stamp) {\n      join.call(this, fcs, output, this._ds.values(), true, fullUpdate);\n    } else if (fullUpdate) {\n      output.mod = this._mark.items.slice();\n    }\n  } else {\n    data = dl.isFunction(this._def.from) ? this._def.from() : [Sentinel];\n    join.call(this, input, output, data);\n  }\n\n  // Stash output before Bounder for downstream reactive geometry.\n  this._output = output = this._graph.evaluate(output, this._encoder);\n\n  // Add any new scale references to the dependency list, and ensure\n  // they're connected.\n  if (update.nested && update.nested.length && this._status === CONNECTED) {\n    dl.keys(this._mark._scaleRefs).forEach(function(s) {\n      var scale = self._parent.scale(s);\n      if (!scale) return;\n\n      scale.addListener(self);\n      self.dependency(Deps.SCALES, s);\n      self._encoder.dependency(Deps.SCALES, s);\n    });\n  }\n\n  // Supernodes calculate bounds too, but only on items marked dirty.\n  if (this._isSuper) {\n    output.mod = output.mod.filter(function(x) { return x._dirty; });\n    output = this._graph.evaluate(output, this._bounder);\n  }\n\n  return output;\n};\n\nfunction newItem() {\n  var item = Tuple.ingest(new Item(this._mark));\n\n  // For the root node's item\n  if (this._def.width)  Tuple.set(item, 'width',  this._def.width);\n  if (this._def.height) Tuple.set(item, 'height', this._def.height);\n  return item;\n}\n\nfunction join(input, output, data, ds, fullUpdate) {\n  var keyf = keyFunction(this._def.key || (ds ? '_id' : null)),\n      prev = this._mark.items || [],\n      rem  = ds ? input.rem : prev,\n      mod  = Tuple.idMap((!ds || fullUpdate) ? data : input.mod),\n      next = [],\n      i, key, len, item, datum, enter, diff;\n\n  // Only mark rems as exiting. Due to keyf, there may be an add/mod\n  // tuple that replaces it.\n  for (i=0, len=rem.length; i<len; ++i) {\n    item = (rem[i] === prev[i]) ? prev[i] :\n      keyf ? this._map[keyf(rem[i])] : rem[i];\n    item.status = Status.EXIT;\n  }\n\n  for(i=0, len=data.length; i<len; ++i) {\n    datum = data[i];\n    item  = keyf ? this._map[key = keyf(datum)] : prev[i];\n    enter = item ? false : (item = newItem.call(this), true);\n    item.status = enter ? Status.ENTER : Status.UPDATE;\n    diff = !enter && item.datum !== datum;\n    item.datum = datum;\n\n    if (keyf) {\n      Tuple.set(item, 'key', key);\n      this._map[key] = item;\n    }\n\n    if (enter) {\n      output.add.push(item);\n    } else if (diff || mod[datum._id]) {\n      output.mod.push(item);\n    }\n\n    next.push(item);\n  }\n\n  for (i=0, len=rem.length; i<len; ++i) {\n    item = (rem[i] === prev[i]) ? prev[i] :\n      keyf ? this._map[key = keyf(rem[i])] : rem[i];\n    if (item.status === Status.EXIT) {\n      item._dirty = true;\n      input.dirty.push(item);\n      next.push(item);\n      output.rem.push(item);\n      if (keyf) this._map[key] = null;\n    }\n  }\n\n  return (this._mark.items = next, output);\n}\n\nfunction keyFunction(key) {\n  if (key == null) return null;\n  var f = dl.array(key).map(dl.accessor);\n  return function(d) {\n    for (var s='', i=0, n=f.length; i<n; ++i) {\n      if (i>0) s += '|';\n      s += String(f[i](d));\n    }\n    return s;\n  };\n}\n\nmodule.exports = Builder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/Builder.js\n// module id = Vp7n\n// module chunks = 0","var dl = require('datalib'),\n    axs = require('../scene/axis'),\n    themeVal = require('../util/theme-val');\n\nvar ORIENT = {\n  \"x\":      \"bottom\",\n  \"y\":      \"left\",\n  \"top\":    \"top\",\n  \"bottom\": \"bottom\",\n  \"left\":   \"left\",\n  \"right\":  \"right\"\n};\n\nfunction parseAxes(model, spec, axes, group) {\n  var cfg = config(model);\n  (spec || []).forEach(function(def, index) {\n    axes[index] = axes[index] || axs(model, cfg[def.type]);\n    parseAxis(cfg[def.type], def, index, axes[index], group);\n  });\n}\n\nfunction parseAxis(config, def, index, axis, group) {\n  // axis scale\n  var scale;\n  if (def.scale !== undefined) {\n    axis.scale(scale = group.scale(def.scale));\n  }\n\n  // grid by scaletype\n  var grid = config.grid;\n  if (dl.isObject(grid)) {\n    config.grid = grid[scale.type] !== undefined ? grid[scale.type] : grid.default;\n  }\n\n  // axis orientation\n  axis.orient(themeVal(def, config, 'orient', ORIENT[def.type]));\n  // axis offset\n  axis.offset(themeVal(def, config, 'offset', 0));\n  // axis layer\n  axis.layer(themeVal(def, config, 'layer', 'front'));\n  // axis grid lines\n  axis.grid(themeVal(def, config, 'grid', false));\n  // axis title\n  axis.title(def.title || null);\n  // axis title offset\n  axis.titleOffset(themeVal(def, config, 'titleOffset'));\n  // axis values\n  axis.tickValues(def.values || null);\n  // axis label formatting\n  axis.tickFormat(def.format || null);\n  axis.tickFormatType(def.formatType || null);\n  // axis tick subdivision\n  axis.tickSubdivide(def.subdivide || 0);\n  // axis tick padding (config.padding for backwards compatibility).\n  axis.tickPadding(themeVal(def, config, 'tickPadding', config.padding));\n\n  // axis tick size(s)\n  var ts = themeVal(def, config, 'tickSize'),\n      size = [ts, ts, ts];\n\n  size[0] = themeVal(def, config, 'tickSizeMajor', size[0]);\n  size[1] = themeVal(def, config, 'tickSizeMinor', size[1]);\n  size[2] = themeVal(def, config, 'tickSizeEnd', size[2]);\n\n  if (size.length) {\n    axis.tickSize.apply(axis, size);\n  }\n\n  // axis tick count\n  axis.tickCount(themeVal(def, config, 'ticks'));\n\n  // style properties\n  var p = def.properties;\n  if (p && p.ticks) {\n    axis.majorTickProperties(p.majorTicks ?\n      dl.extend({}, p.ticks, p.majorTicks) : p.ticks);\n    axis.minorTickProperties(p.minorTicks ?\n      dl.extend({}, p.ticks, p.minorTicks) : p.ticks);\n  } else {\n    axis.majorTickProperties(p && p.majorTicks || {});\n    axis.minorTickProperties(p && p.minorTicks || {});\n  }\n  axis.tickLabelProperties(p && p.labels || {});\n  axis.titleProperties(p && p.title || {});\n  axis.gridLineProperties(p && p.grid || {});\n  axis.domainProperties(p && p.axis || {});\n}\n\nfunction config(model) {\n  var cfg  = model.config(),\n      axis = cfg.axis;\n\n  return {\n    x: dl.extend(dl.duplicate(axis), cfg.axis_x),\n    y: dl.extend(dl.duplicate(axis), cfg.axis_y)\n  };\n}\n\nmodule.exports = parseAxes;\n\nparseAxes.schema = {\n  \"defs\": {\n    \"axis\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"type\": {\"enum\": [\"x\", \"y\"]},\n        \"scale\": {\"type\": \"string\"},\n        \"orient\": {\"enum\": [\"top\", \"bottom\", \"left\", \"right\"]},\n        \"title\": {\"type\": \"string\"},\n        \"titleOffset\": {\"type\": \"number\"},\n        \"format\": {\"type\": \"string\"},\n        \"formatType\": {\"enum\": [\"time\", \"utc\", \"string\", \"number\"]},\n        \"ticks\": {\"type\": \"number\"},\n        \"values\": {\n          \"type\": \"array\",\n          \"items\": {\"type\": [\"string\", \"number\"]}\n        },\n        \"subdivide\": {\"type\": \"number\"},\n        \"tickPadding\": {\"type\": \"number\"},\n        \"tickSize\": {\"type\": \"number\"},\n        \"tickSizeMajor\": {\"type\": \"number\"},\n        \"tickSizeMinor\": {\"type\": \"number\"},\n        \"tickSizeEnd\": {\"type\": \"number\"},\n        \"offset\": {\n          \"oneOf\": [{\"type\": \"number\"}, {\n            \"type\": \"object\",\n            \"properties\": {\n              \"scale\": {\"type\": \"string\"},\n              \"value\": {\"type\": [\"string\", \"number\"]}\n            },\n            \"required\": [\"scale\", \"value\"],\n            \"additionalProperties\": false\n          }]\n        },\n        \"layer\": {\"enum\": [\"front\", \"back\"], \"default\": \"front\"},\n        \"grid\": {\"type\": \"boolean\"},\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"ticks\": {\"$ref\": \"#/defs/propset\"},\n            \"majorTicks\": {\"$ref\": \"#/defs/propset\"},\n            \"minorTicks\": {\"$ref\": \"#/defs/propset\"},\n            \"labels\": {\"$ref\": \"#/defs/propset\"},\n            \"title\": {\"$ref\": \"#/defs/propset\"},\n            \"grid\": {\"$ref\": \"#/defs/propset\"},\n            \"axis\": {\"$ref\": \"#/defs/propset\"}\n          },\n          \"additionalProperties\": false\n        }\n      },\n      \"additionalProperties\": false,\n      \"required\": [\"type\", \"scale\"]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/axes.js\n// module id = W+IH\n// module chunks = 0","\"use strict\";\n(function (Type) {\n    Type[Type[\"QUANTITATIVE\"] = 'quantitative'] = \"QUANTITATIVE\";\n    Type[Type[\"ORDINAL\"] = 'ordinal'] = \"ORDINAL\";\n    Type[Type[\"TEMPORAL\"] = 'temporal'] = \"TEMPORAL\";\n    Type[Type[\"NOMINAL\"] = 'nominal'] = \"NOMINAL\";\n})(exports.Type || (exports.Type = {}));\nvar Type = exports.Type;\nexports.QUANTITATIVE = Type.QUANTITATIVE;\nexports.ORDINAL = Type.ORDINAL;\nexports.TEMPORAL = Type.TEMPORAL;\nexports.NOMINAL = Type.NOMINAL;\nexports.SHORT_TYPE = {\n    quantitative: 'Q',\n    temporal: 'T',\n    nominal: 'N',\n    ordinal: 'O'\n};\nexports.TYPE_FROM_SHORT_TYPE = {\n    Q: exports.QUANTITATIVE,\n    T: exports.TEMPORAL,\n    O: exports.ORDINAL,\n    N: exports.NOMINAL\n};\nfunction getFullName(type) {\n    var typeString = type;\n    return exports.TYPE_FROM_SHORT_TYPE[typeString.toUpperCase()] ||\n        typeString.toLowerCase();\n}\nexports.getFullName = getFullName;\n//# sourceMappingURL=type.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/type.js\n// module id = WJ2w\n// module chunks = 0","module.exports = (function() {\n  \"use strict\";\n\n  /*\n   * Generated by PEG.js 0.9.0.\n   *\n   * http://pegjs.org/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.location = location;\n    this.name     = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  function peg$parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n        parser  = this,\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = \",\",\n        peg$c1 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n        peg$c2 = function(o, m) { return [o].concat(m); },\n        peg$c3 = function(o) { return [o]; },\n        peg$c4 = \"[\",\n        peg$c5 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n        peg$c6 = \"]\",\n        peg$c7 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n        peg$c8 = \">\",\n        peg$c9 = { type: \"literal\", value: \">\", description: \"\\\">\\\"\" },\n        peg$c10 = function(f1, f2, o) {\n            return {\n              start: f1, middle: o, end: f2,\n              str: '['+f1.str+', '+f2.str+'] > '+o.str};\n            },\n        peg$c11 = function(s, f) {\n            s.filters = f;\n            s.str += f.map(function(x) { return '['+x+']'; }).join('');\n            return s;\n          },\n        peg$c12 = function(s) { return s; },\n        peg$c13 = \"(\",\n        peg$c14 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n        peg$c15 = \")\",\n        peg$c16 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n        peg$c17 = function(m) {\n            return {\n              stream: m,\n              str: '('+m.map(function(m) { return m.str; }).join(', ')+')'\n            };\n          },\n        peg$c18 = \"@\",\n        peg$c19 = { type: \"literal\", value: \"@\", description: \"\\\"@\\\"\" },\n        peg$c20 = \":\",\n        peg$c21 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n        peg$c22 = function(n, e) { return {event: e, name: n, str: '@'+n+':'+e}; },\n        peg$c23 = function(m, e) { return {event: e, mark: m, str: m+':'+e}; },\n        peg$c24 = function(t, e) { return {event: e, target: t, str: t+':'+e}; },\n        peg$c25 = function(e) { return {event: e, str: e}; },\n        peg$c26 = function(s) { return {signal: s, str: s}; },\n        peg$c27 = \"rect\",\n        peg$c28 = { type: \"literal\", value: \"rect\", description: \"\\\"rect\\\"\" },\n        peg$c29 = \"symbol\",\n        peg$c30 = { type: \"literal\", value: \"symbol\", description: \"\\\"symbol\\\"\" },\n        peg$c31 = \"path\",\n        peg$c32 = { type: \"literal\", value: \"path\", description: \"\\\"path\\\"\" },\n        peg$c33 = \"arc\",\n        peg$c34 = { type: \"literal\", value: \"arc\", description: \"\\\"arc\\\"\" },\n        peg$c35 = \"area\",\n        peg$c36 = { type: \"literal\", value: \"area\", description: \"\\\"area\\\"\" },\n        peg$c37 = \"line\",\n        peg$c38 = { type: \"literal\", value: \"line\", description: \"\\\"line\\\"\" },\n        peg$c39 = \"rule\",\n        peg$c40 = { type: \"literal\", value: \"rule\", description: \"\\\"rule\\\"\" },\n        peg$c41 = \"image\",\n        peg$c42 = { type: \"literal\", value: \"image\", description: \"\\\"image\\\"\" },\n        peg$c43 = \"text\",\n        peg$c44 = { type: \"literal\", value: \"text\", description: \"\\\"text\\\"\" },\n        peg$c45 = \"group\",\n        peg$c46 = { type: \"literal\", value: \"group\", description: \"\\\"group\\\"\" },\n        peg$c47 = \"mousedown\",\n        peg$c48 = { type: \"literal\", value: \"mousedown\", description: \"\\\"mousedown\\\"\" },\n        peg$c49 = \"mouseup\",\n        peg$c50 = { type: \"literal\", value: \"mouseup\", description: \"\\\"mouseup\\\"\" },\n        peg$c51 = \"click\",\n        peg$c52 = { type: \"literal\", value: \"click\", description: \"\\\"click\\\"\" },\n        peg$c53 = \"dblclick\",\n        peg$c54 = { type: \"literal\", value: \"dblclick\", description: \"\\\"dblclick\\\"\" },\n        peg$c55 = \"wheel\",\n        peg$c56 = { type: \"literal\", value: \"wheel\", description: \"\\\"wheel\\\"\" },\n        peg$c57 = \"keydown\",\n        peg$c58 = { type: \"literal\", value: \"keydown\", description: \"\\\"keydown\\\"\" },\n        peg$c59 = \"keypress\",\n        peg$c60 = { type: \"literal\", value: \"keypress\", description: \"\\\"keypress\\\"\" },\n        peg$c61 = \"keyup\",\n        peg$c62 = { type: \"literal\", value: \"keyup\", description: \"\\\"keyup\\\"\" },\n        peg$c63 = \"mousewheel\",\n        peg$c64 = { type: \"literal\", value: \"mousewheel\", description: \"\\\"mousewheel\\\"\" },\n        peg$c65 = \"mousemove\",\n        peg$c66 = { type: \"literal\", value: \"mousemove\", description: \"\\\"mousemove\\\"\" },\n        peg$c67 = \"mouseout\",\n        peg$c68 = { type: \"literal\", value: \"mouseout\", description: \"\\\"mouseout\\\"\" },\n        peg$c69 = \"mouseover\",\n        peg$c70 = { type: \"literal\", value: \"mouseover\", description: \"\\\"mouseover\\\"\" },\n        peg$c71 = \"mouseenter\",\n        peg$c72 = { type: \"literal\", value: \"mouseenter\", description: \"\\\"mouseenter\\\"\" },\n        peg$c73 = \"touchstart\",\n        peg$c74 = { type: \"literal\", value: \"touchstart\", description: \"\\\"touchstart\\\"\" },\n        peg$c75 = \"touchmove\",\n        peg$c76 = { type: \"literal\", value: \"touchmove\", description: \"\\\"touchmove\\\"\" },\n        peg$c77 = \"touchend\",\n        peg$c78 = { type: \"literal\", value: \"touchend\", description: \"\\\"touchend\\\"\" },\n        peg$c79 = \"dragenter\",\n        peg$c80 = { type: \"literal\", value: \"dragenter\", description: \"\\\"dragenter\\\"\" },\n        peg$c81 = \"dragover\",\n        peg$c82 = { type: \"literal\", value: \"dragover\", description: \"\\\"dragover\\\"\" },\n        peg$c83 = \"dragleave\",\n        peg$c84 = { type: \"literal\", value: \"dragleave\", description: \"\\\"dragleave\\\"\" },\n        peg$c85 = function(e) { return e; },\n        peg$c86 = /^[a-zA-Z0-9_\\-]/,\n        peg$c87 = { type: \"class\", value: \"[a-zA-Z0-9_-]\", description: \"[a-zA-Z0-9_-]\" },\n        peg$c88 = function(n) { return n.join(''); },\n        peg$c89 = /^[a-zA-Z0-9\\-_  #.>+~[\\]=|\\^$*]/,\n        peg$c90 = { type: \"class\", value: \"[a-zA-Z0-9-_  #\\\\.\\\\>\\\\+~\\\\[\\\\]=|\\\\^\\\\$\\\\*]\", description: \"[a-zA-Z0-9-_  #\\\\.\\\\>\\\\+~\\\\[\\\\]=|\\\\^\\\\$\\\\*]\" },\n        peg$c91 = function(c) { return c.join(''); },\n        peg$c92 = /^['\"a-zA-Z0-9_().><=! \\t-&|~]/,\n        peg$c93 = { type: \"class\", value: \"['\\\"a-zA-Z0-9_\\\\(\\\\)\\\\.\\\\>\\\\<\\\\=\\\\! \\\\t-&|~]\", description: \"['\\\"a-zA-Z0-9_\\\\(\\\\)\\\\.\\\\>\\\\<\\\\=\\\\! \\\\t-&|~]\" },\n        peg$c94 = function(v) { return v.join(''); },\n        peg$c95 = /^[ \\t\\r\\n]/,\n        peg$c96 = { type: \"class\", value: \"[ \\\\t\\\\r\\\\n]\", description: \"[ \\\\t\\\\r\\\\n]\" },\n\n        peg$currPos          = 0,\n        peg$savedPos         = 0,\n        peg$posDetailsCache  = [{ line: 1, column: 1, seenCR: false }],\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function location() {\n      return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        input.substring(peg$savedPos, peg$currPos),\n        peg$computeLocation(peg$savedPos, peg$currPos)\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(\n        message,\n        null,\n        input.substring(peg$savedPos, peg$currPos),\n        peg$computeLocation(peg$savedPos, peg$currPos)\n      );\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos],\n          p, ch;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line:   details.line,\n          column: details.column,\n          seenCR: details.seenCR\n        };\n\n        while (p < pos) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n          endPosDetails   = peg$computePosDetails(endPos);\n\n      return {\n        start: {\n          offset: startPos,\n          line:   startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line:   endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, found, location) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new peg$SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        location\n      );\n    }\n\n    function peg$parsestart() {\n      var s0;\n\n      s0 = peg$parsemerged();\n\n      return s0;\n    }\n\n    function peg$parsemerged() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parseordered();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsesep();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c0;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c1); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsesep();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsemerged();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c2(s1, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseordered();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c3(s1);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parseordered() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c4;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c5); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsesep();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsefiltered();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsesep();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s5 = peg$c0;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c1); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsesep();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parsefiltered();\n                  if (s7 !== peg$FAILED) {\n                    s8 = peg$parsesep();\n                    if (s8 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 93) {\n                        s9 = peg$c6;\n                        peg$currPos++;\n                      } else {\n                        s9 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c7); }\n                      }\n                      if (s9 !== peg$FAILED) {\n                        s10 = peg$parsesep();\n                        if (s10 !== peg$FAILED) {\n                          if (input.charCodeAt(peg$currPos) === 62) {\n                            s11 = peg$c8;\n                            peg$currPos++;\n                          } else {\n                            s11 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c9); }\n                          }\n                          if (s11 !== peg$FAILED) {\n                            s12 = peg$parsesep();\n                            if (s12 !== peg$FAILED) {\n                              s13 = peg$parseordered();\n                              if (s13 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c10(s3, s7, s13);\n                                s0 = s1;\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsefiltered();\n      }\n\n      return s0;\n    }\n\n    function peg$parsefiltered() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parsestream();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsefilter();\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parsefilter();\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c11(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsestream();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c12(s1);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parsestream() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c13;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c14); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsemerged();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s3 = peg$c15;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c16); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c17(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 64) {\n          s1 = peg$c18;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c19); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsename();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 58) {\n              s3 = peg$c20;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c21); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseeventType();\n              if (s4 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c22(s2, s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parsemarkType();\n          if (s1 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 58) {\n              s2 = peg$c20;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c21); }\n            }\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parseeventType();\n              if (s3 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c23(s1, s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parsecss();\n            if (s1 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 58) {\n                s2 = peg$c20;\n                peg$currPos++;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c21); }\n              }\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parseeventType();\n                if (s3 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c24(s1, s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              s1 = peg$parseeventType();\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c25(s1);\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                s1 = peg$parsename();\n                if (s1 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c26(s1);\n                }\n                s0 = s1;\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsemarkType() {\n      var s0;\n\n      if (input.substr(peg$currPos, 4) === peg$c27) {\n        s0 = peg$c27;\n        peg$currPos += 4;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c29) {\n          s0 = peg$c29;\n          peg$currPos += 6;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c30); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c31) {\n            s0 = peg$c31;\n            peg$currPos += 4;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c32); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 3) === peg$c33) {\n              s0 = peg$c33;\n              peg$currPos += 3;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c34); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 4) === peg$c35) {\n                s0 = peg$c35;\n                peg$currPos += 4;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c36); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 4) === peg$c37) {\n                  s0 = peg$c37;\n                  peg$currPos += 4;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c38); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 4) === peg$c39) {\n                    s0 = peg$c39;\n                    peg$currPos += 4;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c40); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 5) === peg$c41) {\n                      s0 = peg$c41;\n                      peg$currPos += 5;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c42); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 4) === peg$c43) {\n                        s0 = peg$c43;\n                        peg$currPos += 4;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c44); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 5) === peg$c45) {\n                          s0 = peg$c45;\n                          peg$currPos += 5;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c46); }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseeventType() {\n      var s0;\n\n      if (input.substr(peg$currPos, 9) === peg$c47) {\n        s0 = peg$c47;\n        peg$currPos += 9;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c48); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 7) === peg$c49) {\n          s0 = peg$c49;\n          peg$currPos += 7;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c50); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.substr(peg$currPos, 5) === peg$c51) {\n            s0 = peg$c51;\n            peg$currPos += 5;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c52); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.substr(peg$currPos, 8) === peg$c53) {\n              s0 = peg$c53;\n              peg$currPos += 8;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c54); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.substr(peg$currPos, 5) === peg$c55) {\n                s0 = peg$c55;\n                peg$currPos += 5;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c56); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.substr(peg$currPos, 7) === peg$c57) {\n                  s0 = peg$c57;\n                  peg$currPos += 7;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                }\n                if (s0 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 8) === peg$c59) {\n                    s0 = peg$c59;\n                    peg$currPos += 8;\n                  } else {\n                    s0 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c60); }\n                  }\n                  if (s0 === peg$FAILED) {\n                    if (input.substr(peg$currPos, 5) === peg$c61) {\n                      s0 = peg$c61;\n                      peg$currPos += 5;\n                    } else {\n                      s0 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                    }\n                    if (s0 === peg$FAILED) {\n                      if (input.substr(peg$currPos, 10) === peg$c63) {\n                        s0 = peg$c63;\n                        peg$currPos += 10;\n                      } else {\n                        s0 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c64); }\n                      }\n                      if (s0 === peg$FAILED) {\n                        if (input.substr(peg$currPos, 9) === peg$c65) {\n                          s0 = peg$c65;\n                          peg$currPos += 9;\n                        } else {\n                          s0 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c66); }\n                        }\n                        if (s0 === peg$FAILED) {\n                          if (input.substr(peg$currPos, 8) === peg$c67) {\n                            s0 = peg$c67;\n                            peg$currPos += 8;\n                          } else {\n                            s0 = peg$FAILED;\n                            if (peg$silentFails === 0) { peg$fail(peg$c68); }\n                          }\n                          if (s0 === peg$FAILED) {\n                            if (input.substr(peg$currPos, 9) === peg$c69) {\n                              s0 = peg$c69;\n                              peg$currPos += 9;\n                            } else {\n                              s0 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c70); }\n                            }\n                            if (s0 === peg$FAILED) {\n                              if (input.substr(peg$currPos, 10) === peg$c71) {\n                                s0 = peg$c71;\n                                peg$currPos += 10;\n                              } else {\n                                s0 = peg$FAILED;\n                                if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                              }\n                              if (s0 === peg$FAILED) {\n                                if (input.substr(peg$currPos, 10) === peg$c73) {\n                                  s0 = peg$c73;\n                                  peg$currPos += 10;\n                                } else {\n                                  s0 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c74); }\n                                }\n                                if (s0 === peg$FAILED) {\n                                  if (input.substr(peg$currPos, 9) === peg$c75) {\n                                    s0 = peg$c75;\n                                    peg$currPos += 9;\n                                  } else {\n                                    s0 = peg$FAILED;\n                                    if (peg$silentFails === 0) { peg$fail(peg$c76); }\n                                  }\n                                  if (s0 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 8) === peg$c77) {\n                                      s0 = peg$c77;\n                                      peg$currPos += 8;\n                                    } else {\n                                      s0 = peg$FAILED;\n                                      if (peg$silentFails === 0) { peg$fail(peg$c78); }\n                                    }\n                                    if (s0 === peg$FAILED) {\n                                      if (input.substr(peg$currPos, 9) === peg$c79) {\n                                        s0 = peg$c79;\n                                        peg$currPos += 9;\n                                      } else {\n                                        s0 = peg$FAILED;\n                                        if (peg$silentFails === 0) { peg$fail(peg$c80); }\n                                      }\n                                      if (s0 === peg$FAILED) {\n                                        if (input.substr(peg$currPos, 8) === peg$c81) {\n                                          s0 = peg$c81;\n                                          peg$currPos += 8;\n                                        } else {\n                                          s0 = peg$FAILED;\n                                          if (peg$silentFails === 0) { peg$fail(peg$c82); }\n                                        }\n                                        if (s0 === peg$FAILED) {\n                                          if (input.substr(peg$currPos, 9) === peg$c83) {\n                                            s0 = peg$c83;\n                                            peg$currPos += 9;\n                                          } else {\n                                            s0 = peg$FAILED;\n                                            if (peg$silentFails === 0) { peg$fail(peg$c84); }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsefilter() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c4;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c5); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseexpr();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s3 = peg$c6;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c7); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c85(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsename() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c86.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c87); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c86.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c87); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c88(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsecss() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c89.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c90); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c89.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c90); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c91(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseexpr() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c92.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c93); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c92.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c93); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c94(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsesep() {\n      var s0, s1;\n\n      s0 = [];\n      if (peg$c95.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c96); }\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c95.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c96); }\n        }\n      }\n\n      return s0;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(\n        null,\n        peg$maxFailExpected,\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n        peg$maxFailPos < input.length\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n      );\n    }\n  }\n\n  return {\n    SyntaxError: peg$SyntaxError,\n    parse:       peg$parse\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-event-selector/index.js\n// module id = WcUm\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar util_1 = require('../util');\nvar config_1 = require('../config');\nvar data_1 = require('./data/data');\nvar layout_1 = require('./layout');\nvar model_1 = require('./model');\nvar common_1 = require('./common');\nvar vega_schema_1 = require('../vega.schema');\nvar LayerModel = (function (_super) {\n    __extends(LayerModel, _super);\n    function LayerModel(spec, parent, parentGivenName) {\n        var _this = this;\n        _super.call(this, spec, parent, parentGivenName);\n        this._config = this._initConfig(spec.config, parent);\n        this._children = spec.layers.map(function (layer, i) {\n            return common_1.buildModel(layer, _this, _this.name('layer_' + i));\n        });\n    }\n    LayerModel.prototype._initConfig = function (specConfig, parent) {\n        return util_1.mergeDeep(util_1.duplicate(config_1.defaultConfig), specConfig, parent ? parent.config() : {});\n    };\n    LayerModel.prototype.has = function (channel) {\n        return false;\n    };\n    LayerModel.prototype.children = function () {\n        return this._children;\n    };\n    LayerModel.prototype.isOrdinalScale = function (channel) {\n        return this._children[0].isOrdinalScale(channel);\n    };\n    LayerModel.prototype.dataTable = function () {\n        return this._children[0].dataTable();\n    };\n    LayerModel.prototype.fieldDef = function (channel) {\n        return null;\n    };\n    LayerModel.prototype.stack = function () {\n        return null;\n    };\n    LayerModel.prototype.parseData = function () {\n        this._children.forEach(function (child) {\n            child.parseData();\n        });\n        this.component.data = data_1.parseLayerData(this);\n    };\n    LayerModel.prototype.parseSelectionData = function () {\n    };\n    LayerModel.prototype.parseLayoutData = function () {\n        this._children.forEach(function (child, i) {\n            child.parseLayoutData();\n        });\n        this.component.layout = layout_1.parseLayerLayout(this);\n    };\n    LayerModel.prototype.parseScale = function () {\n        var model = this;\n        var scaleComponent = this.component.scale = {};\n        this._children.forEach(function (child) {\n            child.parseScale();\n            if (true) {\n                util_1.keys(child.component.scale).forEach(function (channel) {\n                    var childScales = child.component.scale[channel];\n                    if (!childScales) {\n                        return;\n                    }\n                    var modelScales = scaleComponent[channel];\n                    if (modelScales && modelScales.main) {\n                        var modelDomain = modelScales.main.domain;\n                        var childDomain = childScales.main.domain;\n                        if (util_1.isArray(modelDomain)) {\n                            if (util_1.isArray(childScales.main.domain)) {\n                                modelScales.main.domain = modelDomain.concat(childDomain);\n                            }\n                            else {\n                                model.addWarning('custom domain scale cannot be unioned with default field-based domain');\n                            }\n                        }\n                        else {\n                            var unionedFields = vega_schema_1.isUnionedDomain(modelDomain) ? modelDomain.fields : [modelDomain];\n                            if (util_1.isArray(childDomain)) {\n                                model.addWarning('custom domain scale cannot be unioned with default field-based domain');\n                            }\n                            var fields = vega_schema_1.isDataRefDomain(childDomain) ? unionedFields.concat([childDomain]) :\n                                vega_schema_1.isUnionedDomain(childDomain) ? unionedFields.concat(childDomain.fields) :\n                                    unionedFields;\n                            fields = util_1.unique(fields, util_1.hash);\n                            if (fields.length > 1) {\n                                modelScales.main.domain = { fields: fields };\n                            }\n                            else {\n                                modelScales.main.domain = fields[0];\n                            }\n                        }\n                        modelScales.colorLegend = modelScales.colorLegend ? modelScales.colorLegend : childScales.colorLegend;\n                        modelScales.binColorLegend = modelScales.binColorLegend ? modelScales.binColorLegend : childScales.binColorLegend;\n                    }\n                    else {\n                        scaleComponent[channel] = childScales;\n                    }\n                    util_1.vals(childScales).forEach(function (scale) {\n                        var scaleNameWithoutPrefix = scale.name.substr(child.name('').length);\n                        var newName = model.scaleName(scaleNameWithoutPrefix);\n                        child.renameScale(scale.name, newName);\n                        scale.name = newName;\n                    });\n                    delete childScales[channel];\n                });\n            }\n        });\n    };\n    LayerModel.prototype.parseMark = function () {\n        this._children.forEach(function (child) {\n            child.parseMark();\n        });\n    };\n    LayerModel.prototype.parseAxis = function () {\n        var axisComponent = this.component.axis = {};\n        this._children.forEach(function (child) {\n            child.parseAxis();\n            if (true) {\n                util_1.keys(child.component.axis).forEach(function (channel) {\n                    if (!axisComponent[channel]) {\n                        axisComponent[channel] = child.component.axis[channel];\n                    }\n                });\n            }\n        });\n    };\n    LayerModel.prototype.parseAxisGroup = function () {\n        return null;\n    };\n    LayerModel.prototype.parseGridGroup = function () {\n        return null;\n    };\n    LayerModel.prototype.parseLegend = function () {\n        var legendComponent = this.component.legend = {};\n        this._children.forEach(function (child) {\n            child.parseLegend();\n            if (true) {\n                util_1.keys(child.component.legend).forEach(function (channel) {\n                    if (!legendComponent[channel]) {\n                        legendComponent[channel] = child.component.legend[channel];\n                    }\n                });\n            }\n        });\n    };\n    LayerModel.prototype.assembleParentGroupProperties = function () {\n        return null;\n    };\n    LayerModel.prototype.assembleData = function (data) {\n        data_1.assembleData(this, data);\n        this._children.forEach(function (child) {\n            child.assembleData(data);\n        });\n        return data;\n    };\n    LayerModel.prototype.assembleLayout = function (layoutData) {\n        this._children.forEach(function (child) {\n            child.assembleLayout(layoutData);\n        });\n        return layout_1.assembleLayout(this, layoutData);\n    };\n    LayerModel.prototype.assembleMarks = function () {\n        return util_1.flatten(this._children.map(function (child) {\n            return child.assembleMarks();\n        }));\n    };\n    LayerModel.prototype.channels = function () {\n        return [];\n    };\n    LayerModel.prototype.mapping = function () {\n        return null;\n    };\n    LayerModel.prototype.isLayer = function () {\n        return true;\n    };\n    LayerModel.prototype.compatibleSource = function (child) {\n        var data = this.data();\n        var childData = child.component.data;\n        var compatible = !childData.source || (data && data.url === childData.source.url);\n        return compatible;\n    };\n    return LayerModel;\n}(model_1.Model));\nexports.LayerModel = LayerModel;\n//# sourceMappingURL=layer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/layer.js\n// module id = Wwtv\n// module chunks = 0","var dl = require('datalib'),\n    log = require('vega-logging'),\n    ChangeSet = require('./ChangeSet'),\n    Collector = require('./Collector'),\n    Tuple = require('./Tuple'),\n    Node = require('./Node'); // jshint ignore:line\n\nfunction DataSource(graph, name, facet) {\n  this._graph = graph;\n  this._name = name;\n  this._data = [];\n  this._source = null;\n  this._facet  = facet;\n  this._input  = ChangeSet.create();\n  this._output = null; // Output changeset\n  this._indexes = {};\n  this._indexFields = [];\n\n  this._inputNode  = null;\n  this._outputNode = null;\n  this._pipeline  = null; // Pipeline of transformations.\n  this._collector = null; // Collector to materialize output of pipeline.\n  this._mutates = false;  // Does any pipeline operator mutate tuples?\n}\n\nvar prototype = DataSource.prototype;\n\nprototype.name = function(name) {\n  if (!arguments.length) return this._name;\n  return (this._name = name, this);\n};\n\nprototype.source = function(src) {\n  if (!arguments.length) return this._source;\n  return (this._source = this._graph.data(src));\n};\n\nprototype.insert = function(tuples) {\n  this._input.add = this._input.add.concat(tuples.map(Tuple.ingest));\n  return this;\n};\n\nprototype.remove = function(where) {\n  var remove = this._data.filter(where);\n  this._input.rem = this._input.rem.concat(remove);\n  return this;\n};\n\nprototype.update = function(where, field, func) {\n  var mod = this._input.mod,\n      ids = Tuple.idMap(mod);\n\n  this._input.fields[field] = 1;\n\n  this._data.filter(where).forEach(function(x) {\n    var prev = x[field],\n        next = func(x);\n    if (prev !== next) {\n      Tuple.set(x, field, next);\n      if (ids[x._id] !== 1) {\n        mod.push(x);\n        ids[x._id] = 1;\n      }\n    }\n  });\n\n  return this;\n};\n\nprototype.values = function(data) {\n  if (!arguments.length) return this._collector.data();\n\n  // Replace backing data\n  this._input.rem = this._data.slice();\n  if (data) { this.insert(data); }\n  return this;\n};\n\nprototype.mutates = function(m) {\n  if (!arguments.length) return this._mutates;\n  this._mutates = this._mutates || m;\n  return this;\n};\n\nprototype.last = function() {\n  return this._output;\n};\n\nprototype.fire = function(input) {\n  if (input) this._input = input;\n  this._graph.propagate(this._input, this._pipeline[0]);\n  return this;\n};\n\nprototype.pipeline = function(pipeline) {\n  if (!arguments.length) return this._pipeline;\n\n  var graph = this._graph,\n      status;\n\n  pipeline.unshift(this._inputNode = DataSourceInput(this));\n  status = graph.preprocess(pipeline);\n\n  if (status.router) {\n    pipeline.push(status.collector = new Collector(graph));\n  }\n\n  pipeline.push(this._outputNode = DataSourceOutput(this));\n  this._collector = status.collector;\n  this._mutates = !!status.mutates;\n  graph.connect(this._pipeline = pipeline);\n\n  return this;\n};\n\nprototype.synchronize = function() {\n  this._graph.synchronize(this._pipeline);\n  return this;\n};\n\nprototype.getIndex = function(field) {\n  var data = this.values(),\n      indexes = this._indexes,\n      fields  = this._indexFields,\n      f = dl.$(field),\n      index, i, len, value;\n\n  if (!indexes[field]) {\n    indexes[field] = index = {};\n    fields.push(field);\n    for (i=0, len=data.length; i<len; ++i) {\n      value = f(data[i]);\n      index[value] = (index[value] || 0) + 1;\n      Tuple.prev_init(data[i]);\n    }\n  }\n  return indexes[field];\n};\n\nprototype.listener = function() {\n  return DataSourceListener(this).addListener(this._inputNode);\n};\n\nprototype.addListener = function(l) {\n  if (l instanceof DataSource) {\n    this._collector.addListener(l.listener());\n  } else {\n    this._outputNode.addListener(l);\n  }\n  return this;\n};\n\nprototype.removeListener = function(l) {\n  this._outputNode.removeListener(l);\n};\n\nprototype.listeners = function(ds) {\n  return (ds ? this._collector : this._outputNode).listeners();\n};\n\n// Input node applies the datasource's delta, and propagates it to\n// the rest of the pipeline. It receives touches to reflow data.\nfunction DataSourceInput(ds) {\n  var input = new Node(ds._graph)\n    .router(true)\n    .collector(true);\n\n  input.data = function() {\n    return ds._data;\n  };\n\n  input.evaluate = function(input) {\n    log.debug(input, ['input', ds._name]);\n\n    var delta = ds._input,\n        out = ChangeSet.create(input), f;\n\n    // Delta might contain fields updated through API\n    for (f in delta.fields) {\n      out.fields[f] = 1;\n    }\n\n    // update data\n    if (delta.rem.length) {\n      ds._data = Tuple.idFilter(ds._data, delta.rem);\n    }\n\n    if (delta.add.length) {\n      ds._data = ds._data.concat(delta.add);\n    }\n\n    if (delta.sort) {\n      ds._data.sort(delta.sort);\n    }\n\n    // if reflowing, add any other tuples not currently in changeset\n    if (input.reflow) {\n      delta.mod = delta.mod.concat(\n        Tuple.idFilter(ds._data, delta.add, delta.mod, delta.rem));\n    }\n\n    // reset change list\n    ds._input = ChangeSet.create();\n\n    out.add = delta.add;\n    out.mod = delta.mod;\n    out.rem = delta.rem;\n    out.facet = ds._facet;\n    return out;\n  };\n\n  return input;\n}\n\n// Output node captures the last changeset seen by this datasource\n// (needed for joins and builds) and materializes any nested data.\n// If this datasource is faceted, materializes the values in the facet.\nfunction DataSourceOutput(ds) {\n  var output = new Node(ds._graph)\n    .router(true)\n    .reflows(true)\n    .collector(true);\n\n  function updateIndices(pulse) {\n    var fields = ds._indexFields,\n        i, j, f, key, index, value;\n\n    for (i=0; i<fields.length; ++i) {\n      key = fields[i];\n      index = ds._indexes[key];\n      f = dl.$(key);\n\n      for (j=0; j<pulse.add.length; ++j) {\n        value = f(pulse.add[j]);\n        Tuple.prev_init(pulse.add[j]);\n        index[value] = (index[value] || 0) + 1;\n      }\n      for (j=0; j<pulse.rem.length; ++j) {\n        value = f(pulse.rem[j]);\n        index[value] = (index[value] || 0) - 1;\n      }\n      for (j=0; j<pulse.mod.length; ++j) {\n        value = f(pulse.mod[j]._prev);\n        index[value] = (index[value] || 0) - 1;\n        value = f(pulse.mod[j]);\n        index[value] = (index[value] || 0) + 1;\n      }\n    }\n  }\n\n  output.data = function() {\n    return ds._collector ? ds._collector.data() : ds._data;\n  };\n\n  output.evaluate = function(input) {\n    log.debug(input, ['output', ds._name]);\n\n    updateIndices(input);\n    var out = ChangeSet.create(input, true);\n\n    if (ds._facet) {\n      ds._facet.values = ds.values();\n      input.facet = null;\n    }\n\n    ds._output = input;\n    out.data[ds._name] = 1;\n    return out;\n  };\n\n  return output;\n}\n\nfunction DataSourceListener(ds) {\n  var l = new Node(ds._graph).router(true);\n\n  l.evaluate = function(input) {\n    // Tuple derivation carries a cost. So only derive if the pipeline has\n    // operators that mutate, and thus would override the source data.\n    if (ds.mutates()) {\n      var map = ds._srcMap || (ds._srcMap = {}), // to propagate tuples correctly\n          output = ChangeSet.create(input);\n\n      output.add = input.add.map(function(t) {\n        return (map[t._id] = Tuple.derive(t));\n      });\n\n      output.mod = input.mod.map(function(t) {\n        return Tuple.rederive(t, map[t._id]);\n      });\n\n      output.rem = input.rem.map(function(t) {\n        var o = map[t._id];\n        return (map[t._id] = null, o);\n      });\n\n      return (ds._input = output);\n    } else {\n      return (ds._input = input);\n    }\n  };\n\n  return l;\n}\n\nmodule.exports = DataSource;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-dataflow/src/DataSource.js\n// module id = XCv7\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar fielddef_1 = require('../../fielddef');\nvar common_1 = require('../common');\nvar tick;\n(function (tick) {\n    function markType() {\n        return 'rect';\n    }\n    tick.markType = markType;\n    function properties(model) {\n        var p = {};\n        var config = model.config();\n        p.xc = x(model.encoding().x, model.scaleName(channel_1.X), config);\n        p.yc = y(model.encoding().y, model.scaleName(channel_1.Y), config);\n        if (config.mark.orient === 'horizontal') {\n            p.width = size(model.encoding().size, model.scaleName(channel_1.SIZE), config, (model.scale(channel_1.X) || {}).bandSize);\n            p.height = { value: config.mark.tickThickness };\n        }\n        else {\n            p.width = { value: config.mark.tickThickness };\n            p.height = size(model.encoding().size, model.scaleName(channel_1.SIZE), config, (model.scale(channel_1.Y) || {}).bandSize);\n        }\n        common_1.applyColorAndOpacity(p, model);\n        return p;\n    }\n    tick.properties = properties;\n    function x(fieldDef, scaleName, config) {\n        if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef, { binSuffix: '_mid' })\n                };\n            }\n            else if (fieldDef.value) {\n                return { value: fieldDef.value };\n            }\n        }\n        return { value: config.scale.bandSize / 2 };\n    }\n    function y(fieldDef, scaleName, config) {\n        if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef, { binSuffix: '_mid' })\n                };\n            }\n            else if (fieldDef.value) {\n                return { value: fieldDef.value };\n            }\n        }\n        return { value: config.scale.bandSize / 2 };\n    }\n    function size(fieldDef, scaleName, config, scaleBandSize) {\n        if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fieldDef.field\n                };\n            }\n            else if (fieldDef.value !== undefined) {\n                return { value: fieldDef.value };\n            }\n        }\n        if (config.mark.tickSize) {\n            return { value: config.mark.tickSize };\n        }\n        var bandSize = scaleBandSize !== undefined ?\n            scaleBandSize :\n            config.scale.bandSize;\n        return { value: bandSize / 1.5 };\n    }\n    function labels(model) {\n        return undefined;\n    }\n    tick.labels = labels;\n})(tick = exports.tick || (exports.tick = {}));\n//# sourceMappingURL=tick.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/mark/tick.js\n// module id = XL1Y\n// module chunks = 0","var dl = require('datalib'),\n    log = require('vega-logging'),\n    df = require('vega-dataflow'),\n    Node = df.Node, // jshint ignore:line\n    Deps = df.Dependencies,\n    bound = require('vega-scenegraph').bound;\n\nvar EMPTY = {};\n\nfunction Encoder(graph, mark, builder) {\n  var props  = mark.def.properties || {},\n      enter  = props.enter,\n      update = props.update,\n      exit   = props.exit;\n\n  Node.prototype.init.call(this, graph);\n\n  this._mark = mark;\n  this._builder = builder;\n  var s = this._scales = [];\n\n  // Only scales used in the 'update' property set are set as\n  // encoder depedencies to have targeted reevaluations. However,\n  // we still want scales in 'enter' and 'exit' to be evaluated\n  // before the encoder.\n  if (enter) s.push.apply(s, enter.scales);\n\n  if (update) {\n    this.dependency(Deps.DATA, update.data);\n    this.dependency(Deps.SIGNALS, update.signals);\n    this.dependency(Deps.FIELDS, update.fields);\n    this.dependency(Deps.SCALES, update.scales);\n    s.push.apply(s, update.scales);\n  }\n\n  if (exit) s.push.apply(s, exit.scales);\n\n  return this.mutates(true);\n}\n\nvar proto = (Encoder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  log.debug(input, ['encoding', this._mark.def.type]);\n  var graph = this._graph,\n      props = this._mark.def.properties || {},\n      items = this._mark.items,\n      enter  = props.enter,\n      update = props.update,\n      exit   = props.exit,\n      dirty  = input.dirty,\n      preds  = graph.predicates(),\n      req = input.request,\n      group = this._mark.group,\n      guide = group && (group.mark.axis || group.mark.legend),\n      db = EMPTY, sg = EMPTY, i, len, item, prop;\n\n  if (req && !guide) {\n    if ((prop = props[req]) && input.mod.length) {\n      db = prop.data ? graph.values(Deps.DATA, prop.data) : null;\n      sg = prop.signals ? graph.values(Deps.SIGNALS, prop.signals) : null;\n\n      for (i=0, len=input.mod.length; i<len; ++i) {\n        item = input.mod[i];\n        encode.call(this, prop, item, input.trans, db, sg, preds, dirty);\n      }\n    }\n\n    return input; // exit early if given request\n  }\n\n  db = values(Deps.DATA, graph, input, props);\n  sg = values(Deps.SIGNALS, graph, input, props);\n\n  // Items marked for removal are at the tail of items. Process them first.\n  for (i=0, len=input.rem.length; i<len; ++i) {\n    item = input.rem[i];\n    if (exit) encode.call(this, exit, item, input.trans, db, sg, preds, dirty);\n    if (input.trans && !exit) input.trans.interpolate(item, EMPTY);\n    else if (!input.trans) items.pop();\n  }\n\n  var update_status = require('./Builder').STATUS.UPDATE;\n  for (i=0, len=input.add.length; i<len; ++i) {\n    item = input.add[i];\n    if (enter)  encode.call(this, enter,  item, input.trans, db, sg, preds, dirty);\n    if (update) encode.call(this, update, item, input.trans, db, sg, preds, dirty);\n    item.status = update_status;\n  }\n\n  if (update) {\n    for (i=0, len=input.mod.length; i<len; ++i) {\n      item = input.mod[i];\n      encode.call(this, update, item, input.trans, db, sg, preds, dirty);\n    }\n  }\n\n  return input;\n};\n\n// Only marshal necessary data and signal values\nfunction values(type, graph, input, props) {\n  var p, x, o, add = input.add.length;\n  if ((p=props.enter) && (x=p[type]).length && add) {\n    o = graph.values(type, x, (o=o||{}));\n  }\n  if ((p=props.exit) && (x=p[type]).length && input.rem.length) {\n    o = graph.values(type, x, (o=o||{}));\n  }\n  if ((p=props.update) && (x=p[type]).length && (add || input.mod.length)) {\n    o = graph.values(type, x, (o=o||{}));\n  }\n  return o || EMPTY;\n}\n\nfunction encode(prop, item, trans, db, sg, preds, dirty) {\n  var enc = prop.encode,\n      wasDirty = item._dirty,\n      isDirty  = enc.call(enc, item, item.mark.group||item, trans, db, sg, preds);\n\n  item._dirty = isDirty || wasDirty;\n  if (isDirty && !wasDirty) dirty.push(item);\n}\n\n// If a specified property set called, or update property set\n// uses nested fieldrefs, reevaluate all items.\nproto.reevaluate = function(pulse) {\n  var def = this._mark.def,\n      props = def.properties || {},\n      reeval = dl.isFunction(def.from) || def.orient || pulse.request ||\n        Node.prototype.reevaluate.call(this, pulse);\n\n  return reeval || (props.update ? nestedRefs.call(this) : false);\n};\n\n// Test if any nested refs trigger a reflow of mark items.\nfunction nestedRefs() {\n  var refs = this._mark.def.properties.update.nested,\n      parent = this._builder,\n      level = 0,\n      i = 0, len = refs.length,\n      ref, ds, stamp;\n\n  for (; i<len; ++i) {\n    ref = refs[i];\n\n    // Scale references are resolved via this._mark._scaleRefs which are\n    // added to dependency lists + connected in Builder.evaluate.\n    if (ref.scale) continue;\n\n    for (; level<ref.level; ++level) {\n      parent = parent.parent();\n      ds = parent.ds();\n    }\n\n    // Compare stamps to determine if a change in a group's properties\n    // or data should trigger a reeval. We cannot check anything fancier\n    // (e.g., pulse.fields) as the ref may use item.datum.\n    stamp = (ref.group ? parent.encoder() : ds.last())._stamp;\n    if (stamp > this._stamp) return true;\n  }\n\n  return false;\n}\n\n// Short-circuit encoder if user specifies items\nEncoder.update = function(graph, trans, request, items, dirty) {\n  items = dl.array(items);\n  var preds = graph.predicates(),\n      db = graph.values(Deps.DATA),\n      sg = graph.values(Deps.SIGNALS),\n      i, len, item, props, prop;\n\n  for (i=0, len=items.length; i<len; ++i) {\n    item = items[i];\n    props = item.mark.def.properties;\n    prop = props && props[request];\n    if (prop) {\n      encode.call(null, prop, item, trans, db, sg, preds, dirty);\n      bound.item(item);\n    }\n  }\n\n};\n\nmodule.exports = Encoder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/Encoder.js\n// module id = XVii\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../channel');\nvar data_1 = require('../data');\nvar scale_1 = require('../scale');\nvar util_1 = require('../util');\nvar mark_1 = require('../mark');\nvar time_1 = require('./time');\nfunction assembleLayout(model, layoutData) {\n    var layoutComponent = model.component.layout;\n    if (!layoutComponent.width && !layoutComponent.height) {\n        return layoutData;\n    }\n    if (true) {\n        var distinctFields = util_1.keys(util_1.extend(layoutComponent.width.distinct, layoutComponent.height.distinct));\n        var formula = layoutComponent.width.formula.concat(layoutComponent.height.formula)\n            .map(function (formula) {\n            return util_1.extend({ type: 'formula' }, formula);\n        });\n        return [\n            distinctFields.length > 0 ? {\n                name: model.dataName(data_1.LAYOUT),\n                source: model.dataTable(),\n                transform: [{\n                        type: 'aggregate',\n                        summarize: distinctFields.map(function (field) {\n                            return { field: field, ops: ['distinct'] };\n                        })\n                    }].concat(formula)\n            } : {\n                name: model.dataName(data_1.LAYOUT),\n                values: [{}],\n                transform: formula\n            }\n        ];\n    }\n}\nexports.assembleLayout = assembleLayout;\nfunction parseUnitLayout(model) {\n    return {\n        width: parseUnitSizeLayout(model, channel_1.X),\n        height: parseUnitSizeLayout(model, channel_1.Y)\n    };\n}\nexports.parseUnitLayout = parseUnitLayout;\nfunction parseUnitSizeLayout(model, channel) {\n    var cellConfig = model.config().cell;\n    var nonOrdinalSize = channel === channel_1.X ? cellConfig.width : cellConfig.height;\n    return {\n        distinct: getDistinct(model, channel),\n        formula: [{\n                field: model.channelSizeName(channel),\n                expr: unitSizeExpr(model, channel, nonOrdinalSize)\n            }]\n    };\n}\nfunction unitSizeExpr(model, channel, nonOrdinalSize) {\n    if (model.scale(channel)) {\n        if (model.isOrdinalScale(channel)) {\n            var scale = model.scale(channel);\n            return '(' + cardinalityFormula(model, channel) +\n                ' + ' + scale.padding +\n                ') * ' + scale.bandSize;\n        }\n        else {\n            return nonOrdinalSize + '';\n        }\n    }\n    else {\n        if (model.mark() === mark_1.TEXT && channel === channel_1.X) {\n            return model.config().scale.textBandWidth + '';\n        }\n        return model.config().scale.bandSize + '';\n    }\n}\nfunction parseFacetLayout(model) {\n    return {\n        width: parseFacetSizeLayout(model, channel_1.COLUMN),\n        height: parseFacetSizeLayout(model, channel_1.ROW)\n    };\n}\nexports.parseFacetLayout = parseFacetLayout;\nfunction parseFacetSizeLayout(model, channel) {\n    var childLayoutComponent = model.child().component.layout;\n    var sizeType = channel === channel_1.ROW ? 'height' : 'width';\n    var childSizeComponent = childLayoutComponent[sizeType];\n    if (true) {\n        var distinct = util_1.extend(getDistinct(model, channel), childSizeComponent.distinct);\n        var formula = childSizeComponent.formula.concat([{\n                field: model.channelSizeName(channel),\n                expr: facetSizeFormula(model, channel, model.child().channelSizeName(channel))\n            }]);\n        delete childLayoutComponent[sizeType];\n        return {\n            distinct: distinct,\n            formula: formula\n        };\n    }\n}\nfunction facetSizeFormula(model, channel, innerSize) {\n    var scale = model.scale(channel);\n    if (model.has(channel)) {\n        return '(datum.' + innerSize + ' + ' + scale.padding + ')' + ' * ' + cardinalityFormula(model, channel);\n    }\n    else {\n        return 'datum.' + innerSize + ' + ' + model.config().facet.scale.padding;\n    }\n}\nfunction parseLayerLayout(model) {\n    return {\n        width: parseLayerSizeLayout(model, channel_1.X),\n        height: parseLayerSizeLayout(model, channel_1.Y)\n    };\n}\nexports.parseLayerLayout = parseLayerLayout;\nfunction parseLayerSizeLayout(model, channel) {\n    if (true) {\n        var childLayoutComponent = model.children()[0].component.layout;\n        var sizeType_1 = channel === channel_1.Y ? 'height' : 'width';\n        var childSizeComponent = childLayoutComponent[sizeType_1];\n        var distinct = childSizeComponent.distinct;\n        var formula = [{\n                field: model.channelSizeName(channel),\n                expr: childSizeComponent.formula[0].expr\n            }];\n        model.children().forEach(function (child) {\n            delete child.component.layout[sizeType_1];\n        });\n        return {\n            distinct: distinct,\n            formula: formula\n        };\n    }\n}\nfunction getDistinct(model, channel) {\n    if (model.has(channel) && model.isOrdinalScale(channel)) {\n        var scale = model.scale(channel);\n        if (scale.type === scale_1.ScaleType.ORDINAL && !(scale.domain instanceof Array)) {\n            var distinctField = model.field(channel);\n            var distinct = {};\n            distinct[distinctField] = true;\n            return distinct;\n        }\n    }\n    return {};\n}\nfunction cardinalityFormula(model, channel) {\n    var scale = model.scale(channel);\n    if (scale.domain instanceof Array) {\n        return scale.domain.length;\n    }\n    var timeUnit = model.fieldDef(channel).timeUnit;\n    var timeUnitDomain = timeUnit ? time_1.rawDomain(timeUnit, channel) : null;\n    return timeUnitDomain !== null ? timeUnitDomain.length :\n        model.field(channel, { datum: true, prefn: 'distinct_' });\n}\n//# sourceMappingURL=layout.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/layout.js\n// module id = YBv9\n// module chunks = 0","var arc = require('./arc');\n\nmodule.exports = function(g, path, l, t) {\n  var current, // current instruction\n      previous = null,\n      x = 0, // current x\n      y = 0, // current y\n      controlX = 0, // current control point x\n      controlY = 0, // current control point y\n      tempX,\n      tempY,\n      tempControlX,\n      tempControlY;\n\n  if (l == null) l = 0;\n  if (t == null) t = 0;\n\n  g.beginPath();\n\n  for (var i=0, len=path.length; i<len; ++i) {\n    current = path[i];\n\n    switch (current[0]) { // first letter\n\n      case 'l': // lineto, relative\n        x += current[1];\n        y += current[2];\n        g.lineTo(x + l, y + t);\n        break;\n\n      case 'L': // lineto, absolute\n        x = current[1];\n        y = current[2];\n        g.lineTo(x + l, y + t);\n        break;\n\n      case 'h': // horizontal lineto, relative\n        x += current[1];\n        g.lineTo(x + l, y + t);\n        break;\n\n      case 'H': // horizontal lineto, absolute\n        x = current[1];\n        g.lineTo(x + l, y + t);\n        break;\n\n      case 'v': // vertical lineto, relative\n        y += current[1];\n        g.lineTo(x + l, y + t);\n        break;\n\n      case 'V': // verical lineto, absolute\n        y = current[1];\n        g.lineTo(x + l, y + t);\n        break;\n\n      case 'm': // moveTo, relative\n        x += current[1];\n        y += current[2];\n        g.moveTo(x + l, y + t);\n        break;\n\n      case 'M': // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        g.moveTo(x + l, y + t);\n        break;\n\n      case 'c': // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        g.bezierCurveTo(\n          x + current[1] + l, // x1\n          y + current[2] + t, // y1\n          controlX + l, // x2\n          controlY + t, // y2\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C': // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        g.bezierCurveTo(\n          current[1] + l,\n          current[2] + t,\n          controlX + l,\n          controlY + t,\n          x + l,\n          y + t\n        );\n        break;\n\n      case 's': // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          x + current[1] + l,\n          y + current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n\n        // set control point to 2nd one of this command\n        // the first control point is assumed to be the reflection of\n        // the second control point on the previous command relative\n        // to the current point.\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S': // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        // calculate reflection of previous control points\n        controlX = 2*x - controlX;\n        controlY = 2*y - controlY;\n        g.bezierCurveTo(\n          controlX + l,\n          controlY + t,\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        // set control point to 2nd one of this command\n        // the first control point is assumed to be the reflection of\n        // the second control point on the previous command relative\n        // to the current point.\n        controlX = current[1];\n        controlY = current[2];\n\n        break;\n\n      case 'q': // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'Q': // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n\n        g.quadraticCurveTo(\n          current[1] + l,\n          current[2] + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        break;\n\n      case 't': // shorthand quadraticCurveTo, relative\n\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        }\n        else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2];\n\n        // calculate reflection of previous control points\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        g.quadraticCurveTo(\n          controlX + l,\n          controlY + t,\n          tempX + l,\n          tempY + t\n        );\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'a':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + x + l,\n          current[7] + y + t\n        ]);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        drawArc(g, x + l, y + t, [\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6] + l,\n          current[7] + t\n        ]);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        g.closePath();\n        break;\n    }\n    previous = current;\n  }\n};\n\nfunction drawArc(g, x, y, coords) {\n  var seg = arc.segments(\n    coords[5], // end x\n    coords[6], // end y\n    coords[0], // radius x\n    coords[1], // radius y\n    coords[3], // large flag\n    coords[4], // sweep flag\n    coords[2], // rotation\n    x, y\n  );\n  for (var i=0; i<seg.length; ++i) {\n    var bez = arc.bezier(seg[i]);\n    g.bezierCurveTo.apply(g, bez);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/path/render.js\n// module id = YExv\n// module chunks = 0","var util = require('../util'),\n  type = require('./type'),\n  formats = require('./formats'),\n  timeF = require('../format').time;\n\nfunction read(data, format) {\n  var type = (format && format.type) || 'json';\n  data = formats[type](data, format);\n  if (format && format.parse) parse(data, format.parse);\n  return data;\n}\n\nfunction parse(data, types) {\n  var cols, parsers, d, i, j, clen, len = data.length;\n\n  types = (types==='auto') ? type.inferAll(data) : util.duplicate(types);\n  cols = util.keys(types);\n  parsers = cols.map(function(c) {\n    var t = types[c];\n    if (t && t.indexOf('date:') === 0) {\n      var parts = t.split(/:(.+)?/, 2),  // split on first :\n          pattern = parts[1];\n      if ((pattern[0] === '\\'' && pattern[pattern.length-1] === '\\'') ||\n          (pattern[0] === '\"'  && pattern[pattern.length-1] === '\"')) {\n        pattern = pattern.slice(1, -1);\n      } else {\n        throw Error('Format pattern must be quoted: ' + pattern);\n      }\n      pattern = timeF(pattern);\n      return function(v) { return pattern.parse(v); };\n    }\n    if (!type.parsers[t]) {\n      throw Error('Illegal format pattern: ' + c + ':' + t);\n    }\n    return type.parsers[t];\n  });\n\n  for (i=0, clen=cols.length; i<len; ++i) {\n    d = data[i];\n    for (j=0; j<clen; ++j) {\n      d[cols[j]] = parsers[j](d[cols[j]]);\n    }\n  }\n  type.annotation(data, types);\n}\n\nread.formats = formats;\nmodule.exports = read;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/read.js\n// module id = YGNx\n// module chunks = 0","var ChangeSet = require('./ChangeSet'),\n    Node = require('./Node'), // jshint ignore:line\n    Base = Node.prototype;\n\nfunction Signal(graph, name, initialValue) {\n  Base.init.call(this, graph);\n  this._name  = name;\n  this._value = initialValue;\n  this._verbose = false; // Verbose signals re-pulse the graph even if prev === val.\n  this._handlers = [];\n  return this;\n}\n\nvar prototype = (Signal.prototype = Object.create(Base));\nprototype.constructor = Signal;\n\nprototype.name = function() {\n  return this._name;\n};\n\nprototype.value = function(val) {\n  if (!arguments.length) return this._value;\n  return (this._value = val, this);\n};\n\n// Alias to value, for shared API with DataSource\nprototype.values = prototype.value;\n\nprototype.verbose = function(v) {\n  if (!arguments.length) return this._verbose;\n  return (this._verbose = !!v, this);\n};\n\nprototype.evaluate = function(input) {\n  return input.signals[this._name] ? input : this._graph.doNotPropagate;\n};\n\nprototype.fire = function(cs) {\n  if (!cs) cs = ChangeSet.create(null, true);\n  cs.signals[this._name] = 1;\n  this._graph.propagate(cs, this);\n};\n\nprototype.on = function(handler) {\n  var signal = this,\n      node = new Node(this._graph);\n\n  node.evaluate = function(input) {\n    handler(signal.name(), signal.value());\n    return input;\n  };\n\n  this._handlers.push({\n    handler: handler,\n    node: node\n  });\n\n  return this.addListener(node);\n};\n\nprototype.off = function(handler) {\n  var h = this._handlers, i, x;\n\n  for (i=h.length; --i>=0;) {\n    if (!handler || h[i].handler === handler) {\n      x = h.splice(i, 1)[0];\n      this.removeListener(x.node);\n    }\n  }\n\n  return this;\n};\n\nmodule.exports = Signal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-dataflow/src/Signal.js\n// module id = Yn+d\n// module chunks = 0","var util = require('./util'),\n    gen = module.exports;\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeros = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n  if (max === undefined) {\n    max = min === undefined ? 1 : min;\n    min = 0;\n  }\n  var d = max - min;\n  var f = function() {\n    return min + d * Math.random();\n  };\n  f.samples = function(n) {\n    return gen.zeros(n).map(f);\n  };\n  f.pdf = function(x) {\n    return (x >= min && x <= max) ? 1/d : 0;\n  };\n  f.cdf = function(x) {\n    return x < min ? 0 : x > max ? 1 : (x - min) / d;\n  };\n  f.icdf = function(p) {\n    return (p >= 0 && p <= 1) ? min + p*d : NaN;\n  };\n  return f;\n};\n\ngen.random.integer = function(a, b) {\n  if (b === undefined) {\n    b = a;\n    a = 0;\n  }\n  var d = b - a;\n  var f = function() {\n    return a + Math.floor(d * Math.random());\n  };\n  f.samples = function(n) {\n    return gen.zeros(n).map(f);\n  };\n  f.pdf = function(x) {\n    return (x === Math.floor(x) && x >= a && x < b) ? 1/d : 0;\n  };\n  f.cdf = function(x) {\n    var v = Math.floor(x);\n    return v < a ? 0 : v >= b ? 1 : (v - a + 1) / d;\n  };\n  f.icdf = function(p) {\n    return (p >= 0 && p <= 1) ? a - 1 + Math.floor(p*d) : NaN;\n  };\n  return f;\n};\n\ngen.random.normal = function(mean, stdev) {\n  mean = mean || 0;\n  stdev = stdev || 1;\n  var next;\n  var f = function() {\n    var x = 0, y = 0, rds, c;\n    if (next !== undefined) {\n      x = next;\n      next = undefined;\n      return x;\n    }\n    do {\n      x = Math.random()*2-1;\n      y = Math.random()*2-1;\n      rds = x*x + y*y;\n    } while (rds === 0 || rds > 1);\n    c = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n    next = mean + y*c*stdev;\n    return mean + x*c*stdev;\n  };\n  f.samples = function(n) {\n    return gen.zeros(n).map(f);\n  };\n  f.pdf = function(x) {\n    var exp = Math.exp(Math.pow(x-mean, 2) / (-2 * Math.pow(stdev, 2)));\n    return (1 / (stdev * Math.sqrt(2*Math.PI))) * exp;\n  };\n  f.cdf = function(x) {\n    // Approximation from West (2009)\n    // Better Approximations to Cumulative Normal Functions\n    var cd,\n        z = (x - mean) / stdev,\n        Z = Math.abs(z);\n    if (Z > 37) {\n      cd = 0;\n    } else {\n      var sum, exp = Math.exp(-Z*Z/2);\n      if (Z < 7.07106781186547) {\n        sum = 3.52624965998911e-02 * Z + 0.700383064443688;\n        sum = sum * Z + 6.37396220353165;\n        sum = sum * Z + 33.912866078383;\n        sum = sum * Z + 112.079291497871;\n        sum = sum * Z + 221.213596169931;\n        sum = sum * Z + 220.206867912376;\n        cd = exp * sum;\n        sum = 8.83883476483184e-02 * Z + 1.75566716318264;\n        sum = sum * Z + 16.064177579207;\n        sum = sum * Z + 86.7807322029461;\n        sum = sum * Z + 296.564248779674;\n        sum = sum * Z + 637.333633378831;\n        sum = sum * Z + 793.826512519948;\n        sum = sum * Z + 440.413735824752;\n        cd = cd / sum;\n      } else {\n        sum = Z + 0.65;\n        sum = Z + 4 / sum;\n        sum = Z + 3 / sum;\n        sum = Z + 2 / sum;\n        sum = Z + 1 / sum;\n        cd = exp / sum / 2.506628274631;\n      }\n    }\n    return z > 0 ? 1 - cd : cd;\n  };\n  f.icdf = function(p) {\n    // Approximation of Probit function using inverse error function.\n    if (p <= 0 || p >= 1) return NaN;\n    var x = 2*p - 1,\n        v = (8 * (Math.PI - 3)) / (3 * Math.PI * (4-Math.PI)),\n        a = (2 / (Math.PI*v)) + (Math.log(1 - Math.pow(x,2)) / 2),\n        b = Math.log(1 - (x*x)) / v,\n        s = (x > 0 ? 1 : -1) * Math.sqrt(Math.sqrt((a*a) - b) - a);\n    return mean + stdev * Math.SQRT2 * s;\n  };\n  return f;\n};\n\ngen.random.bootstrap = function(domain, smooth) {\n  // Generates a bootstrap sample from a set of observations.\n  // Smooth bootstrapping adds random zero-centered noise to the samples.\n  var val = domain.filter(util.isValid),\n      len = val.length,\n      err = smooth ? gen.random.normal(0, smooth) : null;\n  var f = function() {\n    return val[~~(Math.random()*len)] + (err ? err() : 0);\n  };\n  f.samples = function(n) {\n    return gen.zeros(n).map(f);\n  };\n  return f;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/generate.js\n// module id = YsQl\n// module chunks = 0","module.exports = function(def, config, property, defaultVal) {\n  if (def[property] !== undefined) {\n    return def[property];\n  } else if (config !== undefined && config[property] !== undefined) {\n    return config[property];\n  } else if (defaultVal !== undefined) {\n    return defaultVal;\n  }\n  return undefined;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/util/theme-val.js\n// module id = YvtE\n// module chunks = 0","module.exports = {\n  version: '__VERSION__',\n  dataflow: require('vega-dataflow'),\n  parse: require('./src/parse/'),\n  scene: {\n    Bounder: require('./src/scene/Bounder'),\n    Builder: require('./src/scene/Builder'),\n    Encoder: require('./src/scene/Encoder'),\n    GroupBuilder: require('./src/scene/GroupBuilder'),\n    visit: require('./src/scene/visit')\n  },\n  transforms: require('./src/transforms'),\n  Transform: require('./src/transforms/Transform'),\n  BatchTransform: require('./src/transforms/BatchTransform'),\n  Parameter: require('./src/transforms/Parameter'),\n  schema: require('./src/core/schema'),\n  config: require('./src/core/config'),\n  util: require('./src/util'),\n  logging: require('vega-logging'),\n  debug: require('vega-logging').debug\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/index.js\n// module id = YzNj\n// module chunks = 0","var json = require('./json');\n\nvar reader = function(data, format) {\n  var topojson = reader.topojson;\n  if (topojson == null) { throw Error('TopoJSON library not loaded.'); }\n\n  var t = json(data, format), obj;\n\n  if (format && format.feature) {\n    if ((obj = t.objects[format.feature])) {\n      return topojson.feature(t, obj).features;\n    } else {\n      throw Error('Invalid TopoJSON object: ' + format.feature);\n    }\n  } else if (format && format.mesh) {\n    if ((obj = t.objects[format.mesh])) {\n      return [topojson.mesh(t, t.objects[format.mesh])];\n    } else {\n      throw Error('Invalid TopoJSON object: ' + format.mesh);\n    }\n  } else {\n    throw Error('Missing TopoJSON feature or mesh parameter.');\n  }\n};\n\nreader.topojson = require('topojson');\nmodule.exports = reader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/formats/topojson.js\n// module id = Z8XL\n// module chunks = 0","\"use strict\";\nvar stringify = require('json-stable-stringify');\nvar util_1 = require('datalib/src/util');\nexports.keys = util_1.keys;\nexports.extend = util_1.extend;\nexports.duplicate = util_1.duplicate;\nexports.isArray = util_1.isArray;\nexports.vals = util_1.vals;\nexports.truncate = util_1.truncate;\nexports.toMap = util_1.toMap;\nexports.isObject = util_1.isObject;\nexports.isString = util_1.isString;\nexports.isNumber = util_1.isNumber;\nexports.isBoolean = util_1.isBoolean;\nvar util_2 = require('datalib/src/util');\nvar generate_1 = require('datalib/src/generate');\nexports.range = generate_1.range;\nvar encoding_1 = require('./encoding');\nexports.has = encoding_1.has;\nvar channel_1 = require('./channel');\nexports.Channel = channel_1.Channel;\nvar util_3 = require('datalib/src/util');\nfunction pick(obj, props) {\n    var copy = {};\n    props.forEach(function (prop) {\n        if (obj.hasOwnProperty(prop)) {\n            copy[prop] = obj[prop];\n        }\n    });\n    return copy;\n}\nexports.pick = pick;\nfunction omit(obj, props) {\n    var copy = util_2.duplicate(obj);\n    props.forEach(function (prop) {\n        delete copy[prop];\n    });\n    return copy;\n}\nexports.omit = omit;\nfunction hash(a) {\n    if (util_3.isString(a) || util_3.isNumber(a) || util_3.isBoolean(a)) {\n        return String(a);\n    }\n    return stringify(a);\n}\nexports.hash = hash;\nfunction contains(array, item) {\n    return array.indexOf(item) > -1;\n}\nexports.contains = contains;\nfunction without(array, excludedItems) {\n    return array.filter(function (item) {\n        return !contains(excludedItems, item);\n    });\n}\nexports.without = without;\nfunction union(array, other) {\n    return array.concat(without(other, array));\n}\nexports.union = union;\nfunction forEach(obj, f, thisArg) {\n    if (obj.forEach) {\n        obj.forEach.call(thisArg, f);\n    }\n    else {\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                f.call(thisArg, obj[k], k, obj);\n            }\n        }\n    }\n}\nexports.forEach = forEach;\nfunction reduce(obj, f, init, thisArg) {\n    if (obj.reduce) {\n        return obj.reduce.call(thisArg, f, init);\n    }\n    else {\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                init = f.call(thisArg, init, obj[k], k, obj);\n            }\n        }\n        return init;\n    }\n}\nexports.reduce = reduce;\nfunction map(obj, f, thisArg) {\n    if (obj.map) {\n        return obj.map.call(thisArg, f);\n    }\n    else {\n        var output = [];\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                output.push(f.call(thisArg, obj[k], k, obj));\n            }\n        }\n        return output;\n    }\n}\nexports.map = map;\nfunction some(arr, f) {\n    var i = 0;\n    for (var k = 0; k < arr.length; k++) {\n        if (f(arr[k], k, i++)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.some = some;\nfunction every(arr, f) {\n    var i = 0;\n    for (var k = 0; k < arr.length; k++) {\n        if (!f(arr[k], k, i++)) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.every = every;\nfunction flatten(arrays) {\n    return [].concat.apply([], arrays);\n}\nexports.flatten = flatten;\nfunction mergeDeep(dest) {\n    var src = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        src[_i - 1] = arguments[_i];\n    }\n    for (var i = 0; i < src.length; i++) {\n        dest = deepMerge_(dest, src[i]);\n    }\n    return dest;\n}\nexports.mergeDeep = mergeDeep;\n;\nfunction deepMerge_(dest, src) {\n    if (typeof src !== 'object' || src === null) {\n        return dest;\n    }\n    for (var p in src) {\n        if (!src.hasOwnProperty(p)) {\n            continue;\n        }\n        if (src[p] === undefined) {\n            continue;\n        }\n        if (typeof src[p] !== 'object' || src[p] === null) {\n            dest[p] = src[p];\n        }\n        else if (typeof dest[p] !== 'object' || dest[p] === null) {\n            dest[p] = mergeDeep(src[p].constructor === Array ? [] : {}, src[p]);\n        }\n        else {\n            mergeDeep(dest[p], src[p]);\n        }\n    }\n    return dest;\n}\nvar dlBin = require('datalib/src/bins/bins');\nfunction getbins(stats, maxbins) {\n    return dlBin({\n        min: stats.min,\n        max: stats.max,\n        maxbins: maxbins\n    });\n}\nexports.getbins = getbins;\nfunction unique(values, f) {\n    var results = [];\n    var u = {}, v, i, n;\n    for (i = 0, n = values.length; i < n; ++i) {\n        v = f ? f(values[i]) : values[i];\n        if (v in u) {\n            continue;\n        }\n        u[v] = 1;\n        results.push(values[i]);\n    }\n    return results;\n}\nexports.unique = unique;\n;\nfunction warning(message) {\n    console.warn('[VL Warning]', message);\n}\nexports.warning = warning;\nfunction error(message) {\n    console.error('[VL Error]', message);\n}\nexports.error = error;\nfunction differ(dict, other) {\n    for (var key in dict) {\n        if (dict.hasOwnProperty(key)) {\n            if (other[key] && dict[key] && other[key] !== dict[key]) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nexports.differ = differ;\n//# sourceMappingURL=util.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/util.js\n// module id = ZAUf\n// module chunks = 0","\"use strict\";\nexports.defaultLegendConfig = {\n    orient: undefined,\n    shortTimeLabels: false\n};\n//# sourceMappingURL=legend.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/legend.js\n// module id = ZE31\n// module chunks = 0","var tupleID = 0;\n\nfunction ingest(datum) {\n  datum = (datum === Object(datum)) ? datum : {data: datum};\n  datum._id = ++tupleID;\n  if (datum._prev) datum._prev = null;\n  return datum;\n}\n\nfunction idMap(a, ids) {\n  ids = ids || {};\n  for (var i=0, n=a.length; i<n; ++i) {\n    ids[a[i]._id] = 1;\n  }\n  return ids;\n}\n\nfunction copy(t, c) {\n  c = c || {};\n  for (var k in t) {\n    if (k !== '_prev' && k !== '_id') c[k] = t[k];\n  }\n  return c;\n}\n\nmodule.exports = {\n  ingest: ingest,\n  idMap: idMap,\n\n  derive: function(d) {\n    return ingest(copy(d));\n  },\n\n  rederive: function(d, t) {\n    return copy(d, t);\n  },\n\n  set: function(t, k, v) {\n    return t[k] === v ? 0 : (t[k] = v, 1);\n  },\n\n  prev: function(t) {\n    return t._prev || t;\n  },\n\n  prev_init: function(t) {\n    if (!t._prev) { t._prev = {_id: t._id}; }\n  },\n\n  prev_update: function(t) {\n    var p = t._prev, k, v;\n    if (p) for (k in t) {\n      if (k !== '_prev' && k !== '_id') {\n        p[k] = ((v=t[k]) instanceof Object && v._prev) ? v._prev : v;\n      }\n    }\n  },\n\n  reset: function() { tupleID = 0; },\n\n  idFilter: function(data) {\n    var ids = {};\n    for (var i=arguments.length; --i>0;) {\n      idMap(arguments[i], ids);\n    }\n    return data.filter(function(x) { return !ids[x._id]; });\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-dataflow/src/Tuple.js\n// module id = Zrjw\n// module chunks = 0","var Bounds = require('../../../util/Bounds'),\n    textBounds = require('../../../util/bound').text,\n    text = require('../../../util/text'),\n    util = require('./util'),\n    tempBounds = new Bounds();\n\nfunction draw(g, scene, bounds) {\n  if (!scene.items || !scene.items.length) return;\n\n  var items = scene.items,\n      o, opac, x, y, r, t, str;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    str = text.value(o.text);\n    if (!str) continue;\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac === 0) continue;\n\n    g.font = text.font(o);\n    g.textAlign = o.align || 'left';\n\n    x = (o.x || 0);\n    y = (o.y || 0);\n    if ((r = o.radius)) {\n      t = (o.theta || 0) - Math.PI/2;\n      x += r * Math.cos(t);\n      y += r * Math.sin(t);\n    }\n\n    if (o.angle) {\n      g.save();\n      g.translate(x, y);\n      g.rotate(o.angle * Math.PI/180);\n      x = y = 0; // reset x, y\n    }\n    x += (o.dx || 0);\n    y += (o.dy || 0) + text.offset(o);\n\n    if (o.fill && util.fill(g, o, opac)) {\n      g.fillText(str, x, y);\n    }\n    if (o.stroke && util.stroke(g, o, opac)) {\n      g.strokeText(str, x, y);\n    }\n    if (o.angle) g.restore();\n  }\n}\n\nfunction hit(g, o, x, y, gx, gy) {\n  if (o.fontSize <= 0) return false;\n  if (!o.angle) return true; // bounds sufficient if no rotation\n\n  // project point into space of unrotated bounds\n  var b = textBounds(o, tempBounds, true),\n      a = -o.angle * Math.PI / 180,\n      cos = Math.cos(a),\n      sin = Math.sin(a),\n      ox = o.x,\n      oy = o.y,\n      px = cos*gx - sin*gy + (ox - ox*cos + oy*sin),\n      py = sin*gx + cos*gy + (oy - ox*sin - oy*cos);\n\n  return b.contains(px, py);\n}\n\nmodule.exports = {\n  draw: draw,\n  pick: util.pick(hit)\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/render/canvas/marks/text.js\n// module id = ZvZD\n// module chunks = 0","var Base = require('./Transform').prototype;\n\nfunction BatchTransform() {\n  // Nearest appropriate collector.\n  // Set by the dataflow Graph during connection.\n  this._collector = null;\n}\n\nvar prototype = (BatchTransform.prototype = Object.create(Base));\nprototype.constructor = BatchTransform;\n\nprototype.init = function(graph) {\n  Base.init.call(this, graph);\n  return this.batch(true);\n};\n\nprototype.transform = function(input, reset) {\n  return this.batchTransform(input, this._collector.data(), reset);\n};\n\nprototype.batchTransform = function(/* input, data, reset */) {\n};\n\nmodule.exports = BatchTransform;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/BatchTransform.js\n// module id = acp7\n// module chunks = 0","var dl = require('datalib'),\n    log = require('vega-logging'),\n    Heap = require('./Heap'),\n    ChangeSet = require('./ChangeSet'),\n    DataSource = require('./DataSource'),\n    Collector = require('./Collector'),\n    Tuple = require('./Tuple'),\n    Signal = require('./Signal'),\n    Deps = require('./Dependencies');\n\nfunction Graph() {\n}\n\nvar prototype = Graph.prototype;\n\nprototype.init = function() {\n  this._stamp = 0;\n  this._rank  = 0;\n\n  this._data = {};\n  this._signals = {};\n  this._requestedIndexes = {};\n\n  this.doNotPropagate = {};\n};\n\nprototype.rank = function() {\n  return ++this._rank;\n};\n\nprototype.values = function(type, names, hash) {\n  var data = (type === Deps.SIGNALS ? this._signals : this._data),\n      n = (names !== undefined ? names : dl.keys(data)),\n      vals, i;\n\n  if (Array.isArray(n)) {\n    vals = hash || {};\n    for (i=0; i<n.length; ++i) {\n      vals[n[i]] = data[n[i]].values();\n    }\n    return vals;\n  } else {\n    return data[n].values();\n  }\n};\n\n// Retain for backwards-compatibility\nprototype.dataValues = function(names) {\n  return this.values(Deps.DATA, names);\n};\n\n// Retain for backwards-compatibility\nprototype.signalValues = function(names) {\n  return this.values(Deps.SIGNALS, names);\n};\n\nprototype.data = function(name, pipeline, facet) {\n  var db = this._data;\n  if (!arguments.length) {\n    var all = [], key;\n    for (key in db) { all.push(db[key]); }\n    return all;\n  } else if (arguments.length === 1) {\n    return db[name];\n  } else {\n    return (db[name] = new DataSource(this, name, facet).pipeline(pipeline));\n  }\n};\n\nprototype.signal = function(name, init) {\n  if (arguments.length === 1) {\n    var m = this;\n    return Array.isArray(name) ?\n      name.map(function(n) { return m._signals[n]; }) :\n      this._signals[name];\n  } else {\n    return (this._signals[name] = new Signal(this, name, init));\n  }\n};\n\nprototype.signalRef = function(ref) {\n  if (!Array.isArray(ref)) {\n    ref = dl.field(ref);\n  }\n\n  var value = this.signal(ref[0]).value();\n  if (ref.length > 1) {\n    for (var i=1, n=ref.length; i<n; ++i) {\n      value = value[ref[i]];\n    }\n  }\n  return value;\n};\n\nprototype.requestIndex = function(data, field) {\n  var ri  = this._requestedIndexes,\n      reg = ri[data] || (ri[data] = {}); \n  return (reg[field] = true, this);\n};\n\nprototype.buildIndexes = function() {\n  var ri = this._requestedIndexes,\n      data = dl.keys(ri),\n      i, len, j, jlen, d, src, fields, f;\n\n  for (i=0, len=data.length; i<len; ++i) {\n    src = this.data(d=data[i]);\n    if (!src) throw Error('Data source '+dl.str(d)+' does not exist.');\n\n    fields = dl.keys(ri[d]);\n    for (j=0, jlen=fields.length; j<jlen; ++j) {\n      if ((f=fields[j]) === null) continue;\n      src.getIndex(f);\n      ri[d][f] = null;\n    }\n  }\n\n  return this;\n};\n\n// Stamp should be specified with caution. It is necessary for inline datasources,\n// which need to be populated during the same cycle even though propagation has\n// passed that part of the dataflow graph. \n// If skipSignals is true, Signal nodes do not get reevaluated but their listeners\n// are queued for propagation. This is useful when setting signal values in batch\n// (e.g., time travel to the initial state).\nprototype.propagate = function(pulse, node, stamp, skipSignals) {\n  var pulses = {},\n      listeners, next, nplse, tpls, ntpls, i, len, isSg;\n\n  // new PQ with each propagation cycle so that we can pulse branches\n  // of the dataflow graph during a propagation (e.g., when creating\n  // a new inline datasource).\n  var pq = new Heap(function(a, b) {\n    // Sort on qrank (queue-rank).\n    // Rank can change during propagation due to rewiring.\n    return a._qrank - b._qrank;\n  });\n\n  if (pulse.stamp) throw Error('Pulse already has a non-zero stamp.');\n\n  pulse.stamp = stamp || ++this._stamp;\n  pulses[node._id] = pulse;\n  pq.push(node.qrank(true));\n\n  while (pq.size() > 0) {\n    node  = pq.peek();\n    isSg  = node instanceof Signal;\n    pulse = pulses[node._id];\n\n    if (node.rank() !== node.qrank()) {\n      // A node's rank might change during a propagation. Re-queue if so.\n      pq.replace(node.qrank(true));\n    } else {\n      // Evaluate node and propagate pulse.\n      pq.pop();\n      pulses[node._id] = null;\n      listeners = node._listeners;\n\n      if (!isSg || (isSg && !skipSignals)) {\n        pulse = this.evaluate(pulse, node);\n      }\n\n      // Propagate the pulse.\n      if (pulse !== this.doNotPropagate) {\n        // Ensure reflow pulses always send reflow pulses even if skipped.\n        if (!pulse.reflow && node.reflows()) {\n          pulse = ChangeSet.create(pulse, true);\n        }\n\n        for (i=0, len=listeners.length; i<len; ++i) {\n          next = listeners[i];\n\n          if ((nplse = pulses[next._id]) !== undefined) {\n            if (nplse === null) throw Error('Already propagated to node.');\n            if (nplse === pulse) continue;  // Re-queueing the same pulse.\n\n            // We've already queued this node. Ensure there should be at most one\n            // pulse with tuples (add/mod/rem), and the remainder will be reflows.\n            tpls  = pulse.add.length || pulse.mod.length || pulse.rem.length;\n            ntpls = nplse.add.length || nplse.mod.length || nplse.rem.length;\n\n            if (tpls && ntpls) throw Error('Multiple changeset pulses to same node');\n\n            // Combine reflow and tuples into a single pulse.\n            pulses[next._id] = tpls ? pulse : nplse;\n            pulses[next._id].reflow = pulse.reflow || nplse.reflow;\n          } else {\n            // First time we're seeing this node, queue it for propagation.\n            pq.push(next.qrank(true));\n            pulses[next._id] = pulse;\n          }\n        }\n      }\n    }\n  }\n\n  return this.done(pulse);\n};\n\n// Perform final bookkeeping on the graph, after propagation is complete.\n//  - For all updated datasources, synchronize their previous values.\nprototype.done = function(pulse) {\n  log.debug(pulse, ['bookkeeping']);\n  for (var d in pulse.data) { this.data(d).synchronize(); }\n  return this;\n};\n\n// Process a new branch of the dataflow graph prior to connection:\n// (1) Insert new Collector nodes as needed.\n// (2) Track + return mutation/routing status of the branch.\nprototype.preprocess = function(branch) {\n  var graph = this,\n      mutates = 0,\n      node, router, collector, collects;\n\n  for (var i=0; i<branch.length; ++i) {\n    node = branch[i];\n\n    // Batch nodes need access to a materialized dataset.\n    if (node.batch() && !node._collector) {\n      if (router || !collector) {\n        node = new Collector(graph);\n        branch.splice(i, 0, node);\n        router = false;\n      } else {\n        node._collector = collector;\n      }\n    }\n\n    if ((collects = node.collector())) collector = node;\n    router  = router  || node.router() && !collects;\n    mutates = mutates || node.mutates();\n\n    // A collector needs to be inserted after tuple-producing\n    // nodes for correct previous value tracking.\n    if (node.produces()) {\n      branch.splice(i+1, 0, new Collector(graph));\n      router = false;\n    }\n  }\n\n  return {router: router, collector: collector, mutates: mutates};\n};\n\nprototype.connect = function(branch) {\n  var collector, node, data, signals, i, n, j, m, x, y;\n\n  // connect the pipeline\n  for (i=0, n=branch.length; i<n; ++i) {\n    node = branch[i];\n    if (node.collector()) collector = node;\n\n    data = node.dependency(Deps.DATA);\n    for (j=0, m=data.length; j<m; ++j) {\n      if (!(x=this.data(y=data[j]))) {\n        throw new Error('Unknown data source ' + dl.str(y));\n      }\n\n      x.addListener(collector);\n    }\n\n    signals = node.dependency(Deps.SIGNALS);\n    for (j=0, m=signals.length; j<m; ++j) {\n      if (!(x=this.signal(y=signals[j]))) {\n        throw new Error('Unknown signal ' + dl.str(y));\n      }\n\n      x.addListener(collector);\n    }\n\n    if (i > 0) branch[i-1].addListener(node);\n  }\n\n  return branch;\n};\n\nprototype.disconnect = function(branch) {\n  var collector, node, data, signals, i, n, j, m;\n\n  for (i=0, n=branch.length; i<n; ++i) {\n    node = branch[i];\n    if (node.collector()) collector = node;\n\n    data = node.dependency(Deps.DATA);\n    for (j=0, m=data.length; j<m; ++j) {\n      this.data(data[j]).removeListener(collector);\n    }\n\n    signals = node.dependency(Deps.SIGNALS);\n    for (j=0, m=signals.length; j<m; ++j) {\n      this.signal(signals[j]).removeListener(collector);\n    }\n\n    node.disconnect();\n  }\n\n  return branch;\n};\n\nprototype.synchronize = function(branch) {\n  var ids = {},\n      node, data, i, n, j, m, d, id;\n\n  for (i=0, n=branch.length; i<n; ++i) {\n    node = branch[i];\n    if (!node.collector()) continue;\n\n    for (j=0, data=node.data(), m=data.length; j<m; ++j) {\n      id = (d = data[j])._id;\n      if (ids[id]) continue;\n      Tuple.prev_update(d);\n      ids[id] = 1;\n    }\n  }\n\n  return this;\n};\n\nprototype.reevaluate = function(pulse, node) {\n  var reflowed = pulse.reflow && node.last() >= pulse.stamp,\n      run = node.router() || pulse.add.length || pulse.rem.length;\n\n  return run || !reflowed || node.reevaluate(pulse);\n};\n\nprototype.evaluate = function(pulse, node) {\n  if (!this.reevaluate(pulse, node)) return pulse;\n  pulse = node.evaluate(pulse);\n  node.last(pulse.stamp);\n  return pulse;\n};\n\nmodule.exports = Graph;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-dataflow/src/Graph.js\n// module id = cM1m\n// module chunks = 0","\"use strict\";\n(function (AxisOrient) {\n    AxisOrient[AxisOrient[\"TOP\"] = 'top'] = \"TOP\";\n    AxisOrient[AxisOrient[\"RIGHT\"] = 'right'] = \"RIGHT\";\n    AxisOrient[AxisOrient[\"LEFT\"] = 'left'] = \"LEFT\";\n    AxisOrient[AxisOrient[\"BOTTOM\"] = 'bottom'] = \"BOTTOM\";\n})(exports.AxisOrient || (exports.AxisOrient = {}));\nvar AxisOrient = exports.AxisOrient;\nexports.defaultAxisConfig = {\n    offset: undefined,\n    grid: undefined,\n    labels: true,\n    labelMaxLength: 25,\n    tickSize: undefined,\n    characterWidth: 6\n};\nexports.defaultFacetAxisConfig = {\n    axisWidth: 0,\n    labels: true,\n    grid: false,\n    tickSize: 0\n};\n//# sourceMappingURL=axis.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/axis.js\n// module id = cihr\n// module chunks = 0","var d3 = require('d3'),\n    dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction Geo(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    lon: {type: 'field'},\n    lat: {type: 'field'}\n  });\n\n  this._output = {\n    'x': 'layout_x',\n    'y': 'layout_y'\n  };\n  return this.mutates(true);\n}\n\nGeo.Parameters = {\n  projection: {type: 'value', default: 'mercator'},\n  center:     {type: 'array<value>'},\n  translate:  {type: 'array<value>', default: require('./screen').center},\n  rotate:     {type: 'array<value>'},\n  scale:      {type: 'value'},\n  precision:  {type: 'value'},\n  clipAngle:  {type: 'value'},\n  clipExtent: {type: 'value'}\n};\n\nGeo.d3Projection = function() {\n  var p = this.param('projection'),\n      param = Geo.Parameters,\n      proj, name, value;\n\n  if (p !== this._mode) {\n    this._mode = p;\n    this._projection = d3.geo[p]();\n  }\n  proj = this._projection;\n\n  for (name in param) {\n    if (name === 'projection' || !proj[name]) continue;\n    value = this.param(name);\n    if (value === undefined || (dl.isArray(value) && value.length === 0)) {\n      continue;\n    }\n    if (value !== proj[name]()) {\n      proj[name](value);\n    }\n  }\n\n  return proj;\n};\n\nvar prototype = (Geo.prototype = Object.create(Transform.prototype));\nprototype.constructor = Geo;\n\nprototype.transform = function(input) {\n  log.debug(input, ['geo']);\n\n  var output = this._output,\n      lon = this.param('lon').accessor,\n      lat = this.param('lat').accessor,\n      proj = Geo.d3Projection.call(this);\n\n  function set(t) {\n    var ll = [lon(t), lat(t)];\n    var xy = proj(ll) || [null, null];\n    Tuple.set(t, output.x, xy[0]);\n    Tuple.set(t, output.y, xy[1]);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.x] = 1;\n  input.fields[output.y] = 1;\n  return input;\n};\n\nmodule.exports = Geo;\n\nGeo.baseSchema = {\n  \"projection\": {\n    \"description\": \"The type of cartographic projection to use.\",\n    \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n    \"default\": \"mercator\"\n  },\n  \"center\": {\n    \"description\": \"The center of the projection.\",\n    \"oneOf\": [\n      {\n        \"type\": \"array\",\n        \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n        \"minItems\": 2,\n        \"maxItems\": 2\n      },\n      {\"$ref\": \"#/refs/signal\"}\n    ]\n  },\n  \"translate\": {\n    \"description\": \"The translation of the projection.\",\n    \"oneOf\": [\n      {\n        \"type\": \"array\",\n        \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]},\n        \"minItems\": 2,\n        \"maxItems\": 2\n      },\n      {\"$ref\": \"#/refs/signal\"}\n    ]\n  },\n  \"rotate\": {\n    \"description\": \"The rotation of the projection.\",\n    \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n  },\n  \"scale\": {\n    \"description\": \"The scale of the projection.\",\n    \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n  },\n  \"precision\": {\n    \"description\": \"The desired precision of the projection.\",\n    \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n  },\n  \"clipAngle\": {\n    \"description\": \"The clip angle of the projection.\",\n    \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n  },\n  \"clipExtent\": {\n    \"description\": \"The clip extent of the projection.\",\n    \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]\n  }\n};\n\nGeo.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Geo transform\",\n  \"description\": \"Performs a cartographic projection. Given longitude and latitude values, sets corresponding x and y properties for a mark.\",\n  \"type\": \"object\",\n  \"properties\": dl.extend({\n    \"type\": {\"enum\": [\"geo\"]},\n    \"lon\": {\n      \"description\": \"The input longitude values.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"lat\": {\n      \"description\": \"The input latitude values.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"x\": {\"type\": \"string\", \"default\": \"layout_x\"},\n        \"y\": {\"type\": \"string\", \"default\": \"layout_y\"}\n      },\n      \"additionalProperties\": false\n    }\n  }, Geo.baseSchema),\n  \"required\": [\"type\", \"lon\", \"lat\"],\n  \"additionalProperties\": false\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Geo.js\n// module id = ct8e\n// module chunks = 0","var util = require('../../util');\n\nmodule.exports = function(data, format) {\n  var d = util.isObject(data) && !util.isBuffer(data) ?\n    data : JSON.parse(data);\n  if (format && format.property) {\n    d = util.accessor(format.property)(d);\n  }\n  return d;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/formats/json.js\n// module id = cwb4\n// module chunks = 0","var DEPS = require('./Dependencies').ALL,\n    nodeID = 0;\n\nfunction Node(graph) {\n  if (graph) this.init(graph);\n}\n\nvar Flags = Node.Flags = {\n  Router:     0x01, // Responsible for propagating tuples, cannot be skipped.\n  Collector:  0x02, // Holds a materialized dataset, pulse node to reflow.\n  Produces:   0x04, // Produces new tuples. \n  Mutates:    0x08, // Sets properties of incoming tuples.\n  Reflows:    0x10, // Forwards a reflow pulse.\n  Batch:      0x20  // Performs batch data processing, needs collector.\n};\n\nvar prototype = Node.prototype;\n\nprototype.init = function(graph) {\n  this._id = ++nodeID;\n  this._graph = graph;\n  this._rank  = graph.rank(); // Topological sort by rank\n  this._qrank = null; // Rank when enqueued for propagation\n  this._stamp = 0;    // Last stamp seen\n\n  this._listeners = [];\n  this._listeners._ids = {}; // To prevent duplicate listeners\n\n  // Initialize dependencies.\n  this._deps = {};\n  for (var i=0, n=DEPS.length; i<n; ++i) {\n    this._deps[DEPS[i]] = [];\n  }\n\n  // Initialize status flags.\n  this._flags = 0;\n\n  return this;\n};\n\nprototype.rank = function() {\n  return this._rank;\n};\n\nprototype.rerank = function() {\n  var g = this._graph, \n      q = [this],\n      cur;\n\n  while (q.length) {\n    cur = q.shift();\n    cur._rank = g.rank();\n    q.unshift.apply(q, cur.listeners());\n  }\n\n  return this;\n};\n\nprototype.qrank = function(/* set */) {\n  if (!arguments.length) return this._qrank;\n  return (this._qrank = this._rank, this);\n};\n\nprototype.last = function(stamp) { \n  if (!arguments.length) return this._stamp;\n  return (this._stamp = stamp, this);\n};\n\n// -- status flags ---\n\nprototype._setf = function(v, b) {\n  if (b) { this._flags |= v; } else { this._flags &= ~v; }\n  return this;\n};\n\nprototype.router = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Router);\n  return this._setf(Flags.Router, state);\n};\n\nprototype.collector = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Collector);\n  return this._setf(Flags.Collector, state);\n};\n\nprototype.produces = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Produces);\n  return this._setf(Flags.Produces, state);\n};\n\nprototype.mutates = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Mutates);\n  return this._setf(Flags.Mutates, state);\n};\n\nprototype.reflows = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Reflows);\n  return this._setf(Flags.Reflows, state);\n};\n\nprototype.batch = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Batch);\n  return this._setf(Flags.Batch, state);\n};\n\nprototype.dependency = function(type, deps) {\n  var d = this._deps[type],\n      n = d._names || (d._names = {});  // To prevent dupe deps\n\n  // Get dependencies of the given type\n  if (arguments.length === 1) {\n    return d;\n  }\n\n  if (deps === null) {\n    // Clear dependencies of the given type\n    d.splice(0, d.length);\n    d._names = {};\n  } else if (!Array.isArray(deps)) {\n    // Separate this case to avoid cost of array creation\n    if (n[deps]) return this;\n    d.push(deps);\n    n[deps] = 1;\n  } else {\n    for (var i=0, len=deps.length, dep; i<len; ++i) {\n      dep = deps[i];\n      if (n[dep]) continue;\n      d.push(dep);\n      n[dep] = 1;\n    }\n  }\n\n  return this;\n};\n\nprototype.listeners = function() {\n  return this._listeners;\n};\n\nprototype.addListener = function(l) {\n  if (!(l instanceof Node)) {\n    throw Error('Listener is not a Node');\n  }\n  if (this._listeners._ids[l._id]) return this;\n\n  this._listeners.push(l);\n  this._listeners._ids[l._id] = 1;\n  if (this._rank > l._rank) {\n    l.rerank();\n  }\n\n  return this;\n};\n\nprototype.removeListener = function(l) {\n  if (!this._listeners._ids[l._id]) return false;\n  \n  var idx = this._listeners.indexOf(l),\n      b = idx >= 0;\n\n  if (b) {\n    this._listeners.splice(idx, 1);\n    this._listeners._ids[l._id] = null;\n  }\n  return b;\n};\n\nprototype.disconnect = function() {\n  this._listeners = [];\n  this._listeners._ids = {};\n};\n\n// Evaluate this dataflow node for the current pulse.\n// Subclasses should override to perform custom processing.\nprototype.evaluate = function(pulse) {\n  return pulse;\n};\n\n// Should this node be re-evaluated for the current pulse?\n// Searches pulse to see if any dependencies have updated.\nprototype.reevaluate = function(pulse) {\n  var prop, dep, i, n, j, m;\n\n  for (i=0, n=DEPS.length; i<n; ++i) {\n    prop = DEPS[i];\n    dep = this._deps[prop];\n    for (j=0, m=dep.length; j<m; ++j) {\n      if (pulse[prop][dep[j]]) return true;\n    }\n  }\n\n  return false;\n};\n\nNode.reset = function() { nodeID = 0; };\n\nmodule.exports = Node;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-dataflow/src/Node.js\n// module id = dhxB\n// module chunks = 0","var Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction Lookup(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    on:      {type: 'data'},\n    onKey:   {type: 'field', default: null},\n    as:      {type: 'array<value>'},\n    keys:    {type: 'array<field>', default: ['data']},\n    default: {type: 'value'}\n  });\n\n  return this.mutates(true);\n}\n\nvar prototype = (Lookup.prototype = Object.create(Transform.prototype));\nprototype.constructor = Lookup;\n\nprototype.transform = function(input, reset) {\n  log.debug(input, ['lookup']);\n\n  var on = this.param('on'),\n      onLast = on.source.last(),\n      onData = on.source.values(),\n      onKey = this.param('onKey'),\n      onF = onKey.field,\n      keys = this.param('keys'),\n      get = keys.accessor,\n      as = this.param('as'),\n      defaultValue = this.param('default'),\n      lut = this._lut,\n      i, v;\n\n  // build lookup table on init, withKey modified, or tuple add/rem\n  if (lut == null || this._on !== onF || onF && onLast.fields[onF] ||\n      onLast.add.length || onLast.rem.length)\n  {\n    if (onF) { // build hash from withKey field\n      onKey = onKey.accessor;\n      for (lut={}, i=0; i<onData.length; ++i) {\n        lut[onKey(v = onData[i])] = v;\n      }\n    } else { // otherwise, use index-based lookup\n      lut = onData;\n    }\n    this._lut = lut;\n    this._on = onF;\n    reset = true;\n  }\n\n  function set(t) {\n    for (var i=0; i<get.length; ++i) {\n      var v = lut[get[i](t)] || defaultValue;\n      Tuple.set(t, as[i], v);\n    }\n  }\n\n  input.add.forEach(set);\n  var run = keys.field.some(function(f) { return input.fields[f]; });\n  if (run || reset) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  as.forEach(function(k) { input.fields[k] = 1; });\n  return input;\n};\n\nmodule.exports = Lookup;\n\nLookup.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Lookup transform\",\n  \"description\": \"Extends a data set by looking up values in another data set.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"lookup\"]},\n    \"on\": {\n      \"type\": \"string\",\n      \"description\": \"The name of the secondary data set on which to lookup values.\"\n    },\n    \"onKey\": {\n      \"description\": \"The key field to lookup, or null for index-based lookup.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"keys\": {\n      \"description\": \"One or more fields in the primary data set to match against the secondary data set.\",\n      \"type\": \"array\",\n      \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n    },\n    \"as\": {\n      \"type\": \"array\",\n      \"description\": \"The names of the fields in which to store looked-up values.\",\n      \"items\": {\"type\": \"string\"}\n    },\n    \"default\": {\n      // \"type\": \"any\",\n      \"description\": \"The default value to use if a lookup match fails.\"\n    }\n  },\n  \"required\": [\"type\", \"on\", \"as\", \"keys\"],\n  \"additionalProperties\": false\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Lookup.js\n// module id = ec8D\n// module chunks = 0","var dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Treeify(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: 'array<field>'}\n  });\n\n  this._output = {\n    'children': 'children',\n    'parent':   'parent'\n  };\n  return this.router(true).produces(true);\n}\n\nvar prototype = (Treeify.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Treeify;\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['treeifying']);\n\n  var fields = this.param('groupby').field,\n      childField = this._output.children,\n      parentField = this._output.parent,\n      summary = [{name:'*', ops: ['values'], as: [childField]}],\n      aggrs = fields.map(function(f) {\n        return dl.groupby(f).summarize(summary);\n      }),\n      prev = this._internal || [], curr = [], i, n;\n\n  function level(index, node, values) {\n    var vals = aggrs[index].execute(values);\n\n    node[childField] = vals;\n    vals.forEach(function(n) {\n      n[parentField] = node;\n      curr.push(Tuple.ingest(n));\n      if (index+1 < fields.length) level(index+1, n, n[childField]);\n      else n[childField].forEach(function(c) { c[parentField] = n; });\n    });\n  }\n\n  var root = Tuple.ingest({});\n  root[parentField] = null;\n  curr.push(root);\n  level(0, root, data);\n\n  // update changeset with internal nodes\n  for (i=0, n=curr.length; i<n; ++i) {\n    input.add.push(curr[i]);\n  }\n  for (i=0, n=prev.length; i<n; ++i) {\n    input.rem.push(prev[i]);\n  }\n  this._internal = curr;\n\n  return input;\n};\n\nmodule.exports = Treeify;\n\nTreeify.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Treeify transform\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"treeify\"]},\n    \"groupby\": {\n      \"description\": \"An ordered list of fields by which to group tuples into a tree.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ]\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"children\": {\"type\": \"string\", \"default\": \"children\"},\n        \"parent\": {\"type\": \"string\", \"default\": \"parent\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\", \"groupby\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Treeify.js\n// module id = ei6W\n// module chunks = 0","// Path parsing and rendering code adapted from fabric.js -- Thanks!\nvar cmdlen = { m:2, l:2, h:1, v:1, c:6, s:4, q:4, t:2, a:7 },\n    regexp = [/([MLHVCSQTAZmlhvcsqtaz])/g, /###/, /(\\d)([-+])/g, /\\s|,|###/];\n\nmodule.exports = function(pathstr) {\n  var result = [],\n      path,\n      curr,\n      chunks,\n      parsed, param,\n      cmd, len, i, j, n, m;\n\n  // First, break path into command sequence\n  path = pathstr\n    .slice()\n    .replace(regexp[0], '###$1')\n    .split(regexp[1])\n    .slice(1);\n\n  // Next, parse each command in turn\n  for (i=0, n=path.length; i<n; ++i) {\n    curr = path[i];\n    chunks = curr\n      .slice(1)\n      .trim()\n      .replace(regexp[2],'$1###$2')\n      .split(regexp[3]);\n    cmd = curr.charAt(0);\n\n    parsed = [cmd];\n    for (j=0, m=chunks.length; j<m; ++j) {\n      if ((param = +chunks[j]) === param) { // not NaN\n        parsed.push(param);\n      }\n    }\n\n    len = cmdlen[cmd.toLowerCase()];\n    if (parsed.length-1 > len) {\n      for (j=1, m=parsed.length; j<m; j+=len) {\n        result.push([cmd].concat(parsed.slice(j, j+len)));\n      }\n    }\n    else {\n      result.push(parsed);\n    }\n  }\n\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/path/parse.js\n// module id = esTF\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('./channel');\nvar encoding_1 = require('./encoding');\nvar mark_1 = require('./mark');\nvar util_1 = require('./util');\n(function (StackOffset) {\n    StackOffset[StackOffset[\"ZERO\"] = 'zero'] = \"ZERO\";\n    StackOffset[StackOffset[\"CENTER\"] = 'center'] = \"CENTER\";\n    StackOffset[StackOffset[\"NORMALIZE\"] = 'normalize'] = \"NORMALIZE\";\n    StackOffset[StackOffset[\"NONE\"] = 'none'] = \"NONE\";\n})(exports.StackOffset || (exports.StackOffset = {}));\nvar StackOffset = exports.StackOffset;\nfunction stack(mark, encoding, config) {\n    var stacked = (config && config.mark) ? config.mark.stacked : undefined;\n    if (util_1.contains([StackOffset.NONE, null, false], stacked)) {\n        return null;\n    }\n    if (!util_1.contains([mark_1.BAR, mark_1.AREA], mark)) {\n        return null;\n    }\n    if (!encoding_1.isAggregate(encoding)) {\n        return null;\n    }\n    var stackByChannels = channel_1.STACK_GROUP_CHANNELS.reduce(function (sc, channel) {\n        if (encoding_1.has(encoding, channel) && !encoding[channel].aggregate) {\n            sc.push(channel);\n        }\n        return sc;\n    }, []);\n    if (stackByChannels.length === 0) {\n        return null;\n    }\n    var hasXField = encoding_1.has(encoding, channel_1.X);\n    var hasYField = encoding_1.has(encoding, channel_1.Y);\n    var xIsAggregate = hasXField && !!encoding.x.aggregate;\n    var yIsAggregate = hasYField && !!encoding.y.aggregate;\n    if (xIsAggregate !== yIsAggregate) {\n        return {\n            groupbyChannel: xIsAggregate ? (hasYField ? channel_1.Y : null) : (hasXField ? channel_1.X : null),\n            fieldChannel: xIsAggregate ? channel_1.X : channel_1.Y,\n            stackByChannels: stackByChannels,\n            offset: stacked || StackOffset.ZERO\n        };\n    }\n    return null;\n}\nexports.stack = stack;\n//# sourceMappingURL=stack.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/stack.js\n// module id = f2i1\n// module chunks = 0","var dl = require('datalib'),\n    Deps = require('vega-dataflow').Dependencies;\n\nvar arrayType = /array/i,\n    dataType  = /data/i,\n    fieldType = /field/i,\n    exprType  = /expr/i,\n    valType   = /value/i;\n\nfunction Parameter(name, type, transform) {\n  this._name = name;\n  this._type = type;\n  this._transform = transform;\n\n  // If parameter is defined w/signals, it must be resolved\n  // on every pulse.\n  this._value = [];\n  this._accessors = [];\n  this._resolution = false;\n  this._signals = [];\n}\n\nvar prototype = Parameter.prototype;\n\nfunction get() {\n  var isArray = arrayType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  var val = isArray ? this._value : this._value[0],\n      acc = isArray ? this._accessors : this._accessors[0];\n\n  if (!dl.isValid(acc) && valType.test(this._type)) {\n    return val;\n  } else {\n    return isData ? { name: val, source: acc } :\n    isField ? { field: val, accessor: acc } : val;\n  }\n}\n\nprototype.get = function() {\n  var graph = this._transform._graph,\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type),\n      i, n, sig, idx, val;\n\n  // If we don't require resolution, return the value immediately.\n  if (!this._resolution) return get.call(this);\n\n  if (isData) {\n    this._accessors = this._value.map(function(v) { return graph.data(v); });\n    return get.call(this); // TODO: support signal as dataTypes\n  }\n\n  for (i=0, n=this._signals.length; i<n; ++i) {\n    sig = this._signals[i];\n    idx = sig.index;\n    val = sig.value(graph);\n\n    if (isField) {\n      this._accessors[idx] = this._value[idx] != val ?\n        dl.accessor(val) : this._accessors[idx];\n    }\n\n    this._value[idx] = val;\n  }\n\n  return get.call(this);\n};\n\nprototype.set = function(value) {\n  var p = this,\n      graph = p._transform._graph,\n      isExpr = exprType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  p._signals = [];\n  this._value = dl.array(value).map(function(v, i) {\n    var e;\n    if (dl.isString(v)) {\n      if (isExpr) {\n        e = graph.expr(v);\n        p._transform.dependency(Deps.FIELDS,  e.fields);\n        p._transform.dependency(Deps.SIGNALS, e.globals);\n        p._transform.dependency(Deps.DATA,    e.dataSources);\n        return e.fn;\n      } else if (isField) {  // Backwards compatibility\n        p._accessors[i] = dl.accessor(v);\n        p._transform.dependency(Deps.FIELDS, dl.field(v));\n      } else if (isData) {\n        p._resolution = true;\n        p._transform.dependency(Deps.DATA, v);\n      }\n      return v;\n    } else if (v.value !== undefined) {\n      return v.value;\n    } else if (v.field !== undefined) {\n      p._accessors[i] = dl.accessor(v.field);\n      p._transform.dependency(Deps.FIELDS, dl.field(v.field));\n      return v.field;\n    } else if (v.signal !== undefined) {\n      p._resolution = true;\n      p._transform.dependency(Deps.SIGNALS, dl.field(v.signal)[0]);\n      p._signals.push({\n        index: i,\n        value: function(graph) { return graph.signalRef(v.signal); }\n      });\n      return v.signal;\n    } else if (v.expr !== undefined) {\n      p._resolution = true;\n      e = graph.expr(v.expr);\n      p._transform.dependency(Deps.SIGNALS, e.globals);\n      p._signals.push({\n        index: i,\n        value: function() { return e.fn(); }\n      });\n      return v.expr;\n    }\n\n    return v;\n  });\n\n  return p._transform;\n};\n\nmodule.exports = Parameter;\n\n// Schema for field|value-type parameters.\nParameter.schema = {\n  \"type\": \"object\",\n  \"oneOf\": [{\n    \"properties\": {\"field\": {\"type\": \"string\"}},\n    \"required\": [\"field\"]\n  }, {\n    \"properties\": {\"value\": {\"type\": \"string\"}},\n    \"required\": [\"value\"]\n  }]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Parameter.js\n// module id = fRRI\n// module chunks = 0","var d3 = require('d3');\n\nfunction parseBg(bg) {\n  // return null if input is null or undefined\n  if (bg == null) return null;\n  // run through d3 rgb to sanity check\n  return d3.rgb(bg) + '';\n}\n\nmodule.exports = parseBg;\n\nparseBg.schema = {\"defs\": {\"background\": {\"type\": \"string\"}}};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/background.js\n// module id = fxxq\n// module chunks = 0","var util = require('../util');\n\nvar TYPES = '__types__';\n\nvar PARSERS = {\n  boolean: util.boolean,\n  integer: util.number,\n  number:  util.number,\n  date:    util.date,\n  string:  function(x) { return x == null || x === '' ? null : x + ''; }\n};\n\nvar TESTS = {\n  boolean: function(x) { return x==='true' || x==='false' || util.isBoolean(x); },\n  integer: function(x) { return TESTS.number(x) && (x=+x) === ~~x; },\n  number: function(x) { return !isNaN(+x) && !util.isDate(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); }\n};\n\nfunction annotation(data, types) {\n  if (!types) return data && data[TYPES] || null;\n  data[TYPES] = types;\n}\n\nfunction fieldNames(datum) {\n  return util.keys(datum);\n}\n\nfunction bracket(fieldName) {\n  return '[' + fieldName + ']';\n}\n\nfunction type(values, f) {\n  values = util.array(values);\n  f = util.$(f);\n  var v, i, n;\n\n  // if data array has type annotations, use them\n  if (values[TYPES]) {\n    v = f(values[TYPES]);\n    if (util.isString(v)) return v;\n  }\n\n  for (i=0, n=values.length; !util.isValid(v) && i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n  }\n\n  return util.isDate(v) ? 'date' :\n    util.isNumber(v)    ? 'number' :\n    util.isBoolean(v)   ? 'boolean' :\n    util.isString(v)    ? 'string' : null;\n}\n\nfunction typeAll(data, fields) {\n  if (!data.length) return;\n  var get = fields ? util.identity : (fields = fieldNames(data[0]), bracket);\n  return fields.reduce(function(types, f) {\n    return (types[f] = type(data, get(f)), types);\n  }, {});\n}\n\nfunction infer(values, f, ignore) {\n  values = util.array(values);\n  f = util.$(f);\n  var i, j, v;\n\n  // types to test for, in precedence order\n  var types = ['boolean', 'integer', 'number', 'date'];\n\n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if ((!ignore || !ignore.test(v)) && util.isValid(v) && !TESTS[types[j]](v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return 'string';\n  }\n\n  return types[0];\n}\n\nfunction inferAll(data, fields, ignore) {\n  var get = fields ? util.identity : (fields = fieldNames(data[0]), bracket);\n  return fields.reduce(function(types, f) {\n    types[f] = infer(data, get(f), ignore);\n    return types;\n  }, {});\n}\n\ntype.annotation = annotation;\ntype.all = typeAll;\ntype.infer = infer;\ntype.inferAll = inferAll;\ntype.parsers = PARSERS;\nmodule.exports = type;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/type.js\n// module id = ggRp\n// module chunks = 0","var util = require('../util');\nvar load = require('./load');\nvar read = require('./read');\n\nmodule.exports = util\n  .keys(read.formats)\n  .reduce(function(out, type) {\n    out[type] = function(opt, format, callback) {\n      // process arguments\n      if (util.isString(opt)) { opt = {url: opt}; }\n      if (arguments.length === 2 && util.isFunction(format)) {\n        callback = format;\n        format = undefined;\n      }\n\n      // set up read format\n      format = util.extend({parse: 'auto'}, format);\n      format.type = type;\n\n      // load data\n      var data = load(opt, callback ? function(error, data) {\n        if (error) { callback(error, null); return; }\n        try {\n          // data loaded, now parse it (async)\n          data = read(data, format);\n          callback(null, data);\n        } catch (e) {\n          callback(e, null);\n        }\n      } : undefined);\n\n      // data loaded, now parse it (sync)\n      if (!callback) return read(data, format);\n    };\n    return out;\n  }, {});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/readers.js\n// module id = gjoU\n// module chunks = 0","\"use strict\";\n(function (AggregateOp) {\n    AggregateOp[AggregateOp[\"VALUES\"] = 'values'] = \"VALUES\";\n    AggregateOp[AggregateOp[\"COUNT\"] = 'count'] = \"COUNT\";\n    AggregateOp[AggregateOp[\"VALID\"] = 'valid'] = \"VALID\";\n    AggregateOp[AggregateOp[\"MISSING\"] = 'missing'] = \"MISSING\";\n    AggregateOp[AggregateOp[\"DISTINCT\"] = 'distinct'] = \"DISTINCT\";\n    AggregateOp[AggregateOp[\"SUM\"] = 'sum'] = \"SUM\";\n    AggregateOp[AggregateOp[\"MEAN\"] = 'mean'] = \"MEAN\";\n    AggregateOp[AggregateOp[\"AVERAGE\"] = 'average'] = \"AVERAGE\";\n    AggregateOp[AggregateOp[\"VARIANCE\"] = 'variance'] = \"VARIANCE\";\n    AggregateOp[AggregateOp[\"VARIANCEP\"] = 'variancep'] = \"VARIANCEP\";\n    AggregateOp[AggregateOp[\"STDEV\"] = 'stdev'] = \"STDEV\";\n    AggregateOp[AggregateOp[\"STDEVP\"] = 'stdevp'] = \"STDEVP\";\n    AggregateOp[AggregateOp[\"MEDIAN\"] = 'median'] = \"MEDIAN\";\n    AggregateOp[AggregateOp[\"Q1\"] = 'q1'] = \"Q1\";\n    AggregateOp[AggregateOp[\"Q3\"] = 'q3'] = \"Q3\";\n    AggregateOp[AggregateOp[\"MODESKEW\"] = 'modeskew'] = \"MODESKEW\";\n    AggregateOp[AggregateOp[\"MIN\"] = 'min'] = \"MIN\";\n    AggregateOp[AggregateOp[\"MAX\"] = 'max'] = \"MAX\";\n    AggregateOp[AggregateOp[\"ARGMIN\"] = 'argmin'] = \"ARGMIN\";\n    AggregateOp[AggregateOp[\"ARGMAX\"] = 'argmax'] = \"ARGMAX\";\n})(exports.AggregateOp || (exports.AggregateOp = {}));\nvar AggregateOp = exports.AggregateOp;\nexports.AGGREGATE_OPS = [\n    AggregateOp.VALUES,\n    AggregateOp.COUNT,\n    AggregateOp.VALID,\n    AggregateOp.MISSING,\n    AggregateOp.DISTINCT,\n    AggregateOp.SUM,\n    AggregateOp.MEAN,\n    AggregateOp.AVERAGE,\n    AggregateOp.VARIANCE,\n    AggregateOp.VARIANCEP,\n    AggregateOp.STDEV,\n    AggregateOp.STDEVP,\n    AggregateOp.MEDIAN,\n    AggregateOp.Q1,\n    AggregateOp.Q3,\n    AggregateOp.MODESKEW,\n    AggregateOp.MIN,\n    AggregateOp.MAX,\n    AggregateOp.ARGMIN,\n    AggregateOp.ARGMAX,\n];\nexports.SUM_OPS = [\n    AggregateOp.COUNT,\n    AggregateOp.SUM,\n    AggregateOp.DISTINCT\n];\nexports.SHARED_DOMAIN_OPS = [\n    AggregateOp.MEAN,\n    AggregateOp.AVERAGE,\n    AggregateOp.STDEV,\n    AggregateOp.STDEVP,\n    AggregateOp.MEDIAN,\n    AggregateOp.Q1,\n    AggregateOp.Q3,\n    AggregateOp.MIN,\n    AggregateOp.MAX,\n];\n//# sourceMappingURL=aggregate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/aggregate.js\n// module id = h/tW\n// module chunks = 0","var d3 = require('d3'),\n    dl = require('datalib'),\n    log = require('vega-logging'),\n    Tuple = require('vega-dataflow').Tuple;\n\nvar DEPS = [\"signals\", \"scales\", \"data\", \"fields\"];\n\nfunction properties(model, mark, spec) {\n  var config = model.config(),\n      code = \"\",\n      names = dl.keys(spec),\n      exprs = [], // parsed expressions injected in the generated code\n      i, len, name, ref, vars = {},\n      deps = {\n        signals: {},\n        scales:  {},\n        data:    {},\n        fields:  {},\n        nested:  [],\n        _nRefs:  {},  // Temp stash to de-dupe nested refs.\n        reflow:  false\n      };\n\n  code += \"var o = trans ? {} : item, d=0, exprs=this.exprs, set=this.tpl.set, tmpl=signals||{}, t;\\n\" +\n          // Stash for dl.template\n          \"tmpl.datum  = item.datum;\\n\" +\n          \"tmpl.group  = group;\\n\" +\n          \"tmpl.parent = group.datum;\\n\";\n\n  function handleDep(p) {\n    if (ref[p] == null) return;\n    var k = dl.array(ref[p]), i, n;\n    for (i=0, n=k.length; i<n; ++i) {\n      deps[p][k[i]] = 1;\n    }\n  }\n\n  function handleNestedRefs(r) {\n    var k = (r.parent ? \"parent_\" : \"group_\")+r.level;\n    deps._nRefs[k] = r;\n  }\n\n  parseShape(model, config, spec);\n\n  for (i=0, len=names.length; i<len; ++i) {\n    ref = spec[name = names[i]];\n    code += (i > 0) ? \"\\n  \" : \"  \";\n    if (ref.rule) {\n      // a production rule valueref\n      ref = rule(model, name, ref.rule, exprs);\n      code += \"\\n  \" + ref.code;\n    } else if (dl.isArray(ref)) {\n      // a production rule valueref as an array\n      ref = rule(model, name, ref, exprs);\n      code += \"\\n  \" + ref.code;\n    } else {\n      // a simple valueref\n      ref = valueRef(config, name, ref);\n      code += \"d += set(o, \"+dl.str(name)+\", \"+ref.val+\");\";\n    }\n\n    vars[name] = true;\n    DEPS.forEach(handleDep);\n    deps.reflow = deps.reflow || ref.reflow;\n    if (ref.nested.length) ref.nested.forEach(handleNestedRefs);\n  }\n\n  // If nested references are present, sort them based on their level\n  // to speed up determination of whether encoders should be reeval'd.\n  dl.keys(deps._nRefs).forEach(function(k) { deps.nested.push(deps._nRefs[k]); });\n  deps.nested.sort(function(a, b) {\n    a = a.level;\n    b = b.level;\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  });\n\n  if (vars.x2) {\n    if (vars.x) {\n      code += \"\\n  if (o.x > o.x2) { \" +\n              \"\\n    t = o.x;\" +\n              \"\\n    d += set(o, 'x', o.x2);\" +\n              \"\\n    d += set(o, 'x2', t); \" +\n              \"\\n  };\";\n      code += \"\\n  d += set(o, 'width', (o.x2 - o.x));\";\n    } else if (vars.width) {\n      code += \"\\n  d += set(o, 'x', (o.x2 - o.width));\";\n    } else {\n      code += \"\\n  d += set(o, 'x', o.x2);\";\n    }\n  }\n\n  if (vars.xc) {\n    if (vars.width) {\n      code += \"\\n  d += set(o, 'x', (o.xc - o.width/2));\" ;\n    } else {\n      code += \"\\n  d += set(o, 'x', o.xc);\" ;\n    }\n  }\n\n  if (vars.y2) {\n    if (vars.y) {\n      code += \"\\n  if (o.y > o.y2) { \" +\n              \"\\n    t = o.y;\" +\n              \"\\n    d += set(o, 'y', o.y2);\" +\n              \"\\n    d += set(o, 'y2', t);\" +\n              \"\\n  };\";\n      code += \"\\n  d += set(o, 'height', (o.y2 - o.y));\";\n    } else if (vars.height) {\n      code += \"\\n  d += set(o, 'y', (o.y2 - o.height));\";\n    } else {\n      code += \"\\n  d += set(o, 'y', o.y2);\";\n    }\n  }\n\n  if (vars.yc) {\n    if (vars.height) {\n      code += \"\\n  d += set(o, 'y', (o.yc - o.height/2));\" ;\n    } else {\n      code += \"\\n  d += set(o, 'y', o.yc);\" ;\n    }\n  }\n\n  if (hasPath(mark, vars)) code += \"\\n  d += (item.touch(), 1);\";\n  code += \"\\n  if (trans) trans.interpolate(item, o);\";\n  code += \"\\n  return d > 0;\";\n\n  try {\n    /* jshint evil:true */\n    var encoder = Function('item', 'group', 'trans', 'db',\n      'signals', 'predicates', code);\n\n    encoder.tpl  = Tuple;\n    encoder.exprs = exprs;\n    encoder.util = dl;\n    encoder.d3   = d3; // For color spaces\n    dl.extend(encoder, dl.template.context);\n    return {\n      encode:  encoder,\n      signals: dl.keys(deps.signals),\n      scales:  dl.keys(deps.scales),\n      data:    dl.keys(deps.data),\n      fields:  dl.keys(deps.fields),\n      nested:  deps.nested,\n      reflow:  deps.reflow\n    };\n  } catch (e) {\n    log.error(e);\n    log.log(code);\n  }\n}\n\nfunction dependencies(a, b) {\n  if (!dl.isObject(a)) {\n    a = {reflow: false, nested: []};\n    DEPS.forEach(function(d) { a[d] = []; });\n  }\n\n  if (dl.isObject(b)) {\n    a.reflow = a.reflow || b.reflow;\n    a.nested.push.apply(a.nested, b.nested);\n    DEPS.forEach(function(d) { a[d].push.apply(a[d], b[d]); });\n  }\n\n  return a;\n}\n\nfunction hasPath(mark, vars) {\n  return vars.path ||\n    ((mark==='area' || mark==='line') &&\n      (vars.x || vars.x2 || vars.width ||\n       vars.y || vars.y2 || vars.height ||\n       vars.tension || vars.interpolate));\n}\n\nvar hb = /{{(.*?)}}/g;\nfunction parseShape(model, config, spec) {\n  var shape = spec.shape,\n      last = 0,\n      value, match;\n\n  if (shape && (value = shape.value)) {\n    if (config.shape && config.shape[value]) {\n      value = config.shape[value];\n    }\n\n    // Parse handlebars\n    shape = '';\n    while ((match = hb.exec(value)) !== null) {\n      shape += value.substring(last, match.index);\n      shape += model.expr(match[1]).fn();\n      last = hb.lastIndex;\n    }\n    spec.shape.value = shape + value.substring(last);\n  }\n}\n\nfunction rule(model, name, rules, exprs) {\n  var config  = model.config(),\n      deps = dependencies(),\n      inputs  = [],\n      code = '';\n\n  (rules||[]).forEach(function(r, i) {\n    var ref = valueRef(config, name, r);\n    dependencies(deps, ref);\n\n    if (r.test) {\n      // rule uses an expression instead of a predicate.\n      var exprFn = model.expr(r.test);\n      deps.signals.push.apply(deps.signals, exprFn.globals);\n      deps.data.push.apply(deps.data, exprFn.dataSources);\n\n      code += \"if (exprs[\" + exprs.length + \"](item.datum, item.mark.group.datum, null)) {\" +\n          \"\\n    d += set(o, \"+dl.str(name)+\", \" +ref.val+\");\";\n      code += rules[i+1] ? \"\\n  } else \" : \"  }\";\n\n      exprs.push(exprFn.fn);\n    } else {\n      var def = r.predicate,\n          predName = def && (def.name || def),\n          pred = model.predicate(predName),\n          p = 'predicates['+dl.str(predName)+']',\n          input = [], args = name+'_arg'+i;\n\n      if (dl.isObject(def)) {\n        dl.keys(def).forEach(function(k) {\n          if (k === 'name') return;\n          var ref = valueRef(config, i, def[k], true);\n          input.push(dl.str(k)+': '+ref.val);\n          dependencies(deps, ref);\n        });\n      }\n\n      if (predName) {\n        // append the predicates dependencies to our dependencies\n        deps.signals.push.apply(deps.signals, pred.signals);\n        deps.data.push.apply(deps.data, pred.data);\n        inputs.push(args+\" = {\\n    \"+input.join(\",\\n    \")+\"\\n  }\");\n        code += \"if (\"+p+\".call(\"+p+\",\"+args+\", db, signals, predicates)) {\" +\n          \"\\n    d += set(o, \"+dl.str(name)+\", \"+ref.val+\");\";\n        code += rules[i+1] ? \"\\n  } else \" : \"  }\";\n      } else {\n        code += \"{\" +\n          \"\\n    d += set(o, \"+dl.str(name)+\", \"+ref.val+\");\"+\n          \"\\n  }\\n\";\n      }\n    }\n  });\n\n  if (inputs.length) code = \"var \" + inputs.join(\",\\n      \") + \";\\n  \" + code;\n  return (deps.code = code, deps);\n}\n\nfunction valueRef(config, name, ref, predicateArg) {\n  if (ref == null) return null;\n\n  if (name==='fill' || name==='stroke') {\n    if (ref.c) {\n      return colorRef(config, 'hcl', ref.h, ref.c, ref.l);\n    } else if (ref.h || ref.s) {\n      return colorRef(config, 'hsl', ref.h, ref.s, ref.l);\n    } else if (ref.l || ref.a) {\n      return colorRef(config, 'lab', ref.l, ref.a, ref.b);\n    } else if (ref.r || ref.g || ref.b) {\n      return colorRef(config, 'rgb', ref.r, ref.g, ref.b);\n    }\n  }\n\n  // initialize value\n  var val = null, scale = null,\n      deps = dependencies(),\n      sgRef = null, fRef = null, sRef = null, tmpl = {};\n\n  if (ref.template !== undefined) {\n    val = dl.template.source(ref.template, 'tmpl', tmpl);\n    dl.keys(tmpl).forEach(function(k) {\n      var f = dl.field(k),\n          a = f.shift();\n      if (a === 'parent' || a === 'group') {\n        deps.nested.push({\n          parent: a === 'parent',\n          group:  a === 'group',\n          level:  1\n        });\n      } else if (a === 'datum') {\n        deps.fields.push(f[0]);\n      } else {\n        deps.signals.push(a);\n      }\n    });\n  }\n\n  if (ref.value !== undefined) {\n    val = dl.str(ref.value);\n  }\n\n  if (ref.signal !== undefined) {\n    sgRef = dl.field(ref.signal);\n    val = 'signals['+sgRef.map(dl.str).join('][')+']';\n    deps.signals.push(sgRef.shift());\n  }\n\n  if (ref.field !== undefined) {\n    ref.field = dl.isString(ref.field) ? {datum: ref.field} : ref.field;\n    fRef = fieldRef(ref.field);\n    val  = fRef.val;\n    dependencies(deps, fRef);\n  }\n\n  if (ref.scale !== undefined) {\n    sRef  = scaleRef(ref.scale);\n    scale = sRef.val;\n    dependencies(deps, sRef);\n    deps.scales.push(ref.scale.name || ref.scale);\n\n    // run through scale function if val specified.\n    // if no val, scale function is predicate arg.\n    if (val !== null || ref.band || ref.mult || ref.offset || !predicateArg) {\n      val = scale + (ref.band ? '.rangeBand()' :\n        '('+(val !== null ? val : 'item.datum.data')+')');\n    } else if (predicateArg) {\n      val = scale;\n    }\n  }\n\n  // multiply, offset, return value\n  val = '(' + (ref.mult?(dl.number(ref.mult)+' * '):'') + val + ')' +\n        (ref.offset ? ' + ' + dl.number(ref.offset) : '');\n\n  // Collate dependencies\n  return (deps.val = val, deps);\n}\n\nfunction colorRef(config, type, x, y, z) {\n  var xx = x ? valueRef(config, '', x) : config.color[type][0],\n      yy = y ? valueRef(config, '', y) : config.color[type][1],\n      zz = z ? valueRef(config, '', z) : config.color[type][2],\n      deps = dependencies();\n\n  [xx, yy, zz].forEach(function(v) {\n    if (dl.isArray) return;\n    dependencies(deps, v);\n  });\n\n  var val = '(this.d3.' + type + '(' + [xx.val, yy.val, zz.val].join(',') + ') + \"\")';\n  return (deps.val = val, deps);\n}\n\n// {field: {datum: \"foo\"} }  -> item.datum.foo\n// {field: {group: \"foo\"} }  -> group.foo\n// {field: {parent: \"foo\"} } -> group.datum.foo\nfunction fieldRef(ref) {\n  if (dl.isString(ref)) {\n    return {val: dl.field(ref).map(dl.str).join('][')};\n  }\n\n  // Resolve nesting/parent lookups\n  var l = ref.level || 1,\n      nested = (ref.group || ref.parent) && l,\n      scope = nested ? Array(l).join('group.mark.') : '',\n      r = fieldRef(ref.datum || ref.group || ref.parent || ref.signal),\n      val = r.val,\n      deps = dependencies(null, r);\n\n  if (ref.datum) {\n    val = 'item.datum['+val+']';\n    deps.fields.push(ref.datum);\n  } else if (ref.group) {\n    val = scope+'group['+val+']';\n    deps.nested.push({ level: l, group: true });\n  } else if (ref.parent) {\n    val = scope+'group.datum['+val+']';\n    deps.nested.push({ level: l, parent: true });\n  } else if (ref.signal) {\n    val = 'signals['+val+']';\n    deps.signals.push(dl.field(ref.signal)[0]);\n    deps.reflow = true;\n  }\n\n  return (deps.val = val, deps);\n}\n\n// {scale: \"x\"}\n// {scale: {name: \"x\"}},\n// {scale: fieldRef}\nfunction scaleRef(ref) {\n  var scale = null,\n      fr = null,\n      deps = dependencies();\n\n  if (dl.isString(ref)) {\n    scale = dl.str(ref);\n  } else if (ref.name) {\n    scale = dl.isString(ref.name) ? dl.str(ref.name) : (fr = fieldRef(ref.name)).val;\n  } else {\n    scale = (fr = fieldRef(ref)).val;\n  }\n\n  scale = '(item.mark._scaleRefs['+scale+'] = 1, group.scale('+scale+'))';\n  if (ref.invert) scale += '.invert';\n\n  // Mark scale refs as they're dealt with separately in mark._scaleRefs.\n  if (fr) fr.nested.forEach(function(g) { g.scale = true; });\n  return fr ? (fr.val = scale, fr) : (deps.val = scale, deps);\n}\n\nmodule.exports = properties;\n\nfunction valueSchema(type) {\n  type = dl.isArray(type) ? {\"enum\": type} : {\"type\": type};\n  var modType = type.type === \"number\" && type.type || \"string\";\n  var valRef  = {\n    \"type\": \"object\",\n    \"allOf\": [{\"$ref\": \"#/refs/\" + modType + \"Modifiers\"}, {\n      \"oneOf\": [{\n        \"$ref\": \"#/refs/signal\",\n        \"required\": [\"signal\"]\n      }, {\n        \"properties\": {\"value\": type},\n        \"required\": [\"value\"]\n      }, {\n        \"properties\": {\"field\": {\"$ref\": \"#/refs/field\"}},\n        \"required\": [\"field\"]\n      }, {\n        \"properties\": {\"band\": {\"type\": \"boolean\"}},\n        \"required\": [\"band\"]\n      }]\n    }]\n  };\n\n  if (type.type === \"string\") {\n    valRef.allOf[1].oneOf.push({\n      \"properties\": {\"template\": {\"type\": \"string\"}},\n      \"required\": [\"template\"]\n    });\n  }\n\n  return {\n    \"oneOf\": [{\n      \"type\": \"object\",\n      \"properties\": {\n        \"rule\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"allOf\": [{\"$ref\": \"#/defs/rule\"}, valRef]\n          }\n        }\n      },\n      \"additionalProperties\": false,\n      \"required\": [\"rule\"]\n    },\n    {\n      \"type\": \"array\",\n      \"items\": {\n        \"allOf\": [{\"$ref\": \"#/defs/rule\"}, valRef]\n      }\n    },\n    valRef]\n  };\n}\n\nproperties.schema = {\n  \"refs\": {\n    \"field\": {\n      \"title\": \"FieldRef\",\n      \"oneOf\": [\n        {\"type\": \"string\"},\n        {\n          \"oneOf\": [\n            {\"$ref\": \"#/refs/signal\"},\n            {\n              \"type\": \"object\",\n              \"properties\": {\"datum\": {\"$ref\": \"#/refs/field\"}},\n              \"required\": [\"datum\"],\n              \"additionalProperties\": false\n            },\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"group\": {\"$ref\": \"#/refs/field\"},\n                \"level\": {\"type\": \"number\"}\n              },\n              \"required\": [\"group\"],\n              \"additionalProperties\": false\n            },\n            {\n              \"type\": \"object\",\n              \"properties\": {\n                \"parent\": {\"$ref\": \"#/refs/field\"},\n                \"level\": {\"type\": \"number\"}\n              },\n              \"required\": [\"parent\"],\n              \"additionalProperties\": false\n            }\n          ]\n        }\n      ]\n    },\n\n    \"scale\": {\n      \"title\": \"ScaleRef\",\n      \"oneOf\": [\n        {\"$ref\": \"#/refs/field\"},\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": {\"$ref\": \"#/refs/field\"},\n            \"invert\": {\"type\": \"boolean\", \"default\": false}\n          },\n          \"required\": [\"name\"]\n        }\n      ]\n    },\n\n    \"stringModifiers\": {\n      \"properties\": {\n        \"scale\": {\"$ref\": \"#/refs/scale\"}\n      }\n    },\n\n    \"numberModifiers\": {\n      \"properties\": {\n        \"mult\": {\"type\": \"number\"},\n        \"offset\": {\"type\": \"number\"},\n        \"scale\": {\"$ref\": \"#/refs/scale\"}\n      }\n    },\n\n    \"value\": valueSchema({}, \"value\"),\n    \"numberValue\": valueSchema(\"number\", \"numberValue\"),\n    \"stringValue\": valueSchema(\"string\", \"stringValue\"),\n    \"booleanValue\": valueSchema(\"boolean\", \"booleanValue\"),\n    \"arrayValue\": valueSchema(\"array\", \"arrayValue\"),\n\n    \"colorValue\": {\n      \"title\": \"ColorRef\",\n      \"oneOf\": [{\"$ref\": \"#/refs/stringValue\"}, {\n        \"type\": \"object\",\n        \"properties\": {\n          \"r\": {\"$ref\": \"#/refs/numberValue\"},\n          \"g\": {\"$ref\": \"#/refs/numberValue\"},\n          \"b\": {\"$ref\": \"#/refs/numberValue\"}\n        },\n        \"required\": [\"r\", \"g\", \"b\"]\n      }, {\n        \"type\": \"object\",\n        \"properties\": {\n          \"h\": {\"$ref\": \"#/refs/numberValue\"},\n          \"s\": {\"$ref\": \"#/refs/numberValue\"},\n          \"l\": {\"$ref\": \"#/refs/numberValue\"}\n        },\n        \"required\": [\"h\", \"s\", \"l\"]\n      }, {\n        \"type\": \"object\",\n        \"properties\": {\n          \"l\": {\"$ref\": \"#/refs/numberValue\"},\n          \"a\": {\"$ref\": \"#/refs/numberValue\"},\n          \"b\": {\"$ref\": \"#/refs/numberValue\"}\n        },\n        \"required\": [\"l\", \"a\", \"b\"]\n      }, {\n        \"type\": \"object\",\n        \"properties\": {\n          \"h\": {\"$ref\": \"#/refs/numberValue\"},\n          \"c\": {\"$ref\": \"#/refs/numberValue\"},\n          \"l\": {\"$ref\": \"#/refs/numberValue\"}\n        },\n        \"required\": [\"h\", \"c\", \"l\"]\n      }]\n    }\n  },\n\n  \"defs\": {\n    \"rule\": {\n      \"anyOf\": [\n        {\n          \"type\": \"object\",\n          \"properties\": {\n            \"predicate\": {\n              \"oneOf\": [\n                {\"type\": \"string\"},\n                {\n                  \"type\": \"object\",\n                  \"properties\": {\"name\": { \"type\": \"string\" }},\n                  \"required\": [\"name\"]\n                }\n              ]\n            }\n          }\n        },\n        {\n          \"type\": \"object\",\n          \"properties\": {\"test\": {\"type\": \"string\"}}\n        }\n      ]\n    },\n    \"propset\": {\n      \"title\": \"Mark property set\",\n      \"type\": \"object\",\n      \"properties\": {\n        // Common Properties\n        \"x\": {\"$ref\": \"#/refs/numberValue\"},\n        \"x2\": {\"$ref\": \"#/refs/numberValue\"},\n        \"xc\": {\"$ref\": \"#/refs/numberValue\"},\n        \"width\": {\"$ref\": \"#/refs/numberValue\"},\n        \"y\": {\"$ref\": \"#/refs/numberValue\"},\n        \"y2\": {\"$ref\": \"#/refs/numberValue\"},\n        \"yc\": {\"$ref\": \"#/refs/numberValue\"},\n        \"height\": {\"$ref\": \"#/refs/numberValue\"},\n        \"opacity\": {\"$ref\": \"#/refs/numberValue\"},\n        \"fill\": {\"$ref\": \"#/refs/colorValue\"},\n        \"fillOpacity\": {\"$ref\": \"#/refs/numberValue\"},\n        \"stroke\": {\"$ref\": \"#/refs/colorValue\"},\n        \"strokeWidth\": {\"$ref\": \"#/refs/numberValue\"},\n        \"strokeOpacity\": {\"$ref\": \"#/refs/numberValue\"},\n        \"strokeDash\": {\"$ref\": \"#/refs/arrayValue\"},\n        \"strokeDashOffset\": {\"$ref\": \"#/refs/numberValue\"},\n        \"cursor\": {\"$ref\": \"#/refs/stringValue\"},\n\n        // Group-mark properties\n        \"clip\": {\"$ref\": \"#/refs/booleanValue\"},\n\n        // Symbol-mark properties\n        \"size\": {\"$ref\": \"#/refs/numberValue\"},\n        \"shape\": {\n          \"anyOf\": [\n            valueSchema([\"circle\", \"square\", \"cross\", \"diamond\",\n              \"triangle-up\", \"triangle-down\"]),\n            {\"$ref\": \"#/refs/stringValue\"}\n          ]\n        },\n\n        // Path-mark properties\n        \"path\": {\"$ref\": \"#/refs/stringValue\"},\n\n        // Arc-mark properties\n        \"innerRadius\": {\"$ref\": \"#/refs/numberValue\"},\n        \"outerRadius\": {\"$ref\": \"#/refs/numberValue\"},\n        \"startAngle\": {\"$ref\": \"#/refs/numberValue\"},\n        \"endAngle\": {\"$ref\": \"#/refs/numberValue\"},\n\n        // Area- and line-mark properties\n        \"interpolate\": valueSchema([\"linear\", \"linear-closed\",\n          \"step\", \"step-before\", \"step-after\",\n          \"basis\", \"basis-open\", \"basis-closed\", \n          \"cardinal\", \"cardinal-open\", \"cardinal-closed\",\n          \"bundle\", \"monotone\"]),\n        \"tension\": {\"$ref\": \"#/refs/numberValue\"},\n        \"orient\": valueSchema([\"horizontal\", \"vertical\"]),\n\n        // Image-mark properties\n        \"url\": {\"$ref\": \"#/refs/stringValue\"},\n        \"align\": valueSchema([\"left\", \"right\", \"center\"]),\n        \"baseline\": valueSchema([\"top\", \"middle\", \"bottom\", \"alphabetic\"]),\n\n        // Text-mark properties\n        \"text\": {\"$ref\": \"#/refs/stringValue\"},\n        \"dx\": {\"$ref\": \"#/refs/numberValue\"},\n        \"dy\": {\"$ref\": \"#/refs/numberValue\"},\n        \"radius\":{\"$ref\": \"#/refs/numberValue\"},\n        \"theta\": {\"$ref\": \"#/refs/numberValue\"},\n        \"angle\": {\"$ref\": \"#/refs/numberValue\"},\n        \"font\": {\"$ref\": \"#/refs/stringValue\"},\n        \"fontSize\": {\"$ref\": \"#/refs/numberValue\"},\n        \"fontWeight\": {\"$ref\": \"#/refs/stringValue\"},\n        \"fontStyle\": {\"$ref\": \"#/refs/stringValue\"}\n      },\n\n      \"additionalProperties\": false\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/properties.js\n// module id = h36N\n// module chunks = 0","\"use strict\";\nvar fielddef_1 = require('../../fielddef');\nvar type_1 = require('../../type');\nvar util_1 = require('../../util');\nvar formatParse;\n(function (formatParse) {\n    function parse(model) {\n        var calcFieldMap = (model.transform().calculate || []).reduce(function (fieldMap, formula) {\n            fieldMap[formula.field] = true;\n            return fieldMap;\n        }, {});\n        var parseComponent = {};\n        model.forEach(function (fieldDef) {\n            if (fieldDef.type === type_1.TEMPORAL) {\n                parseComponent[fieldDef.field] = 'date';\n            }\n            else if (fieldDef.type === type_1.QUANTITATIVE) {\n                if (fielddef_1.isCount(fieldDef) || calcFieldMap[fieldDef.field]) {\n                    return;\n                }\n                parseComponent[fieldDef.field] = 'number';\n            }\n        });\n        return parseComponent;\n    }\n    formatParse.parseUnit = parse;\n    function parseFacet(model) {\n        var parseComponent = parse(model);\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source && childDataComponent.formatParse) {\n            util_1.extend(parseComponent, childDataComponent.formatParse);\n            delete childDataComponent.formatParse;\n        }\n        return parseComponent;\n    }\n    formatParse.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var parseComponent = parse(model);\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (model.compatibleSource(child) && !util_1.differ(childDataComponent.formatParse, parseComponent)) {\n                util_1.extend(parseComponent, childDataComponent.formatParse);\n                delete childDataComponent.formatParse;\n            }\n        });\n        return parseComponent;\n    }\n    formatParse.parseLayer = parseLayer;\n})(formatParse = exports.formatParse || (exports.formatParse = {}));\n//# sourceMappingURL=formatparse.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/formatparse.js\n// module id = hBex\n// module chunks = 0","var dl = require('datalib');\n\nvar TIME    = 'time',\n    UTC     = 'utc',\n    STRING  = 'string',\n    ORDINAL = 'ordinal',\n    NUMBER  = 'number';\n\nfunction getTickFormat(scale, tickCount, tickFormatType, tickFormatString) {\n  var formatType = tickFormatType || inferFormatType(scale);\n  return getFormatter(scale, tickCount, formatType, tickFormatString);\n}\n\nfunction inferFormatType(scale) {\n  switch (scale.type) {\n    case TIME:    return TIME;\n    case UTC:     return UTC;\n    case ORDINAL: return STRING;\n    default:      return NUMBER;\n  }\n}\n\n// Adapted from d3 log scale\n// TODO customize? replace with range-size-aware filtering?\nfunction logFilter(scale, domain, count, f) {\n  if (count == null) return f;\n  var base = scale.base(),\n      k = Math.min(base, scale.ticks().length / count),\n      v = domain[0] > 0 ? (e = 1e-12, Math.ceil) : (e = -1e-12, Math.floor),\n      e;\n  function log(x) {\n    return (domain[0] < 0 ?\n      -Math.log(x > 0 ? 0 : -x) :\n      Math.log(x < 0 ? 0 : x)) / Math.log(base);\n  }\n  function pow(x) {\n    return domain[0] < 0 ? -Math.pow(base, -x) : Math.pow(base, x);\n  }\n  return function(d) {\n    return pow(v(log(d) + e)) / d >= k ? f(d) : '';\n  };\n}\n\nfunction getFormatter(scale, tickCount, formatType, str) {\n  var fmt = dl.format,\n      log = scale.type === 'log',\n      domain;\n\n  switch (formatType) {\n    case NUMBER:\n      domain = scale.domain();\n      return log ?\n        logFilter(scale, domain, tickCount, fmt.auto.number(str || null)) :\n        fmt.auto.linear(domain, tickCount, str || null);\n    case TIME: return (str ? fmt : fmt.auto).time(str);\n    case UTC:  return (str ? fmt : fmt.auto).utc(str);\n    default:   return String;\n  }\n}\n\nmodule.exports = {\n  getTickFormat: getTickFormat\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/util/format.js\n// module id = hv1v\n// module chunks = 0","var Renderer = require('../Renderer'),\n    ImageLoader = require('../../util/ImageLoader'),\n    SVG = require('../../util/svg'),\n    text = require('../../util/text'),\n    DOM = require('../../util/dom'),\n    openTag = DOM.openTag,\n    closeTag = DOM.closeTag,\n    MARKS = require('./marks');\n\nfunction SVGStringRenderer(loadConfig) {\n  Renderer.call(this);\n\n  this._loader = new ImageLoader(loadConfig);\n\n  this._text = {\n    head: '',\n    root: '',\n    foot: '',\n    defs: '',\n    body: ''\n  };\n\n  this._defs = {\n    clip_id:  1,\n    gradient: {},\n    clipping: {}\n  };\n}\n\nvar base = Renderer.prototype;\nvar prototype = (SVGStringRenderer.prototype = Object.create(base));\nprototype.constructor = SVGStringRenderer;\n\nprototype.resize = function(width, height, padding) {\n  base.resize.call(this, width, height, padding);\n  var p = this._padding,\n      t = this._text;\n\n  var attr = {\n    'class':  'marks',\n    'width':  this._width + p.left + p.right,\n    'height': this._height + p.top + p.bottom,\n  };\n  for (var key in SVG.metadata) {\n    attr[key] = SVG.metadata[key];\n  }\n\n  t.head = openTag('svg', attr);\n  t.root = openTag('g', {\n    transform: 'translate(' + p.left + ',' + p.top + ')'\n  });\n  t.foot = closeTag('g') + closeTag('svg');\n\n  return this;\n};\n\nprototype.svg = function() {\n  var t = this._text;\n  return t.head + t.defs + t.root + t.body + t.foot;\n};\n\nprototype.render = function(scene) {\n  this._text.body = this.mark(scene);\n  this._text.defs = this.buildDefs();\n  return this;\n};\n\nprototype.reset = function() {\n  this._defs.clip_id = 0;\n  return this;\n};\n\nprototype.buildDefs = function() {\n  var all = this._defs,\n      defs = '',\n      i, id, def, stops;\n\n  for (id in all.gradient) {\n    def = all.gradient[id];\n    stops = def.stops;\n\n    defs += openTag('linearGradient', {\n      id: id,\n      x1: def.x1,\n      x2: def.x2,\n      y1: def.y1,\n      y2: def.y2\n    });\n    \n    for (i=0; i<stops.length; ++i) {\n      defs += openTag('stop', {\n        offset: stops[i].offset,\n        'stop-color': stops[i].color\n      }) + closeTag('stop');\n    }\n    \n    defs += closeTag('linearGradient');\n  }\n  \n  for (id in all.clipping) {\n    def = all.clipping[id];\n\n    defs += openTag('clipPath', {id: id});\n\n    defs += openTag('rect', {\n      x: 0,\n      y: 0,\n      width: def.width,\n      height: def.height\n    }) + closeTag('rect');\n\n    defs += closeTag('clipPath');\n  }\n  \n  return (defs.length > 0) ? openTag('defs') + defs + closeTag('defs') : '';\n};\n\nprototype.imageURL = function(url) {\n  return this._loader.imageURL(url);\n};\n\nvar object;\n\nfunction emit(name, value, ns, prefixed) {\n  object[prefixed || name] = value;\n}\n\nprototype.attributes = function(attr, item) {\n  object = {};\n  attr(emit, item, this);\n  return object;\n};\n\nprototype.mark = function(scene) {\n  var mdef = MARKS[scene.marktype],\n      tag  = mdef.tag,\n      attr = mdef.attr,\n      nest = mdef.nest || false,\n      data = nest ?\n          (scene.items && scene.items.length ? [scene.items[0]] : []) :\n          (scene.items || []),\n      defs = this._defs,\n      str = '',\n      style, i, item;\n\n  if (tag !== 'g' && scene.interactive === false) {\n    style = 'style=\"pointer-events: none;\"';\n  }\n\n  // render opening group tag\n  str += openTag('g', {\n    'class': DOM.cssClass(scene)\n  }, style);\n\n  // render contained elements\n  for (i=0; i<data.length; ++i) {\n    item = data[i];\n    style = (tag !== 'g') ? styles(item, scene, tag, defs) : null;\n    str += openTag(tag, this.attributes(attr, item), style);\n    if (tag === 'text') {\n      str += escape_text(text.value(item.text));\n    } else if (tag === 'g') {\n      str += openTag('rect',\n        this.attributes(mdef.background, item),\n        styles(item, scene, 'bgrect', defs)) + closeTag('rect');\n      str += this.markGroup(item);\n    }\n    str += closeTag(tag);\n  }\n\n  // render closing group tag\n  return str + closeTag('g');\n};\n\nprototype.markGroup = function(scene) {\n  var str = '',\n      axes = scene.axisItems || [],\n      items = scene.items || [],\n      legends = scene.legendItems || [],\n      j, m;\n\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].layer === 'back') {\n      str += this.mark(axes[j]);\n    }\n  }\n  for (j=0, m=items.length; j<m; ++j) {\n    str += this.mark(items[j]);\n  }\n  for (j=0, m=axes.length; j<m; ++j) {\n    if (axes[j].layer !== 'back') {\n      str += this.mark(axes[j]);\n    }\n  }\n  for (j=0, m=legends.length; j<m; ++j) {\n    str += this.mark(legends[j]);\n  }\n\n  return str;\n};\n\nfunction styles(o, mark, tag, defs) {\n  if (o == null) return '';\n  var i, n, prop, name, value, s = '';\n\n  if (tag === 'bgrect' && mark.interactive === false) {\n    s += 'pointer-events: none;';\n  }\n\n  if (tag === 'text') {\n    s += 'font: ' + text.font(o) + ';';\n  }\n\n  for (i=0, n=SVG.styleProperties.length; i<n; ++i) {\n    prop = SVG.styleProperties[i];\n    name = SVG.styles[prop];\n    value = o[prop];\n\n    if (value == null) {\n      if (name === 'fill') {\n        s += (s.length ? ' ' : '') + 'fill: none;';\n      }\n    } else {\n      if (value.id) {\n        // ensure definition is included\n        defs.gradient[value.id] = value;\n        value = 'url(#' + value.id + ')';\n      }\n      s += (s.length ? ' ' : '') + name + ': ' + value + ';';\n    }\n  }\n\n  return s ? 'style=\"' + s + '\"' : null;\n}\n\nfunction escape_text(s) {\n  return s.replace(/&/g, '&amp;')\n          .replace(/</g, '&lt;')\n          .replace(/>/g, '&gt;');\n}\n\nmodule.exports = SVGStringRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/render/svg/SVGStringRenderer.js\n// module id = iHbP\n// module chunks = 0","var text = require('../../util/text'),\n    SVG = require('../../util/svg'),\n    symbolTypes = SVG.symbolTypes,\n    textAlign = SVG.textAlign,\n    path = SVG.path;\n\nfunction translateItem(o) {\n  return translate(o.x || 0, o.y || 0);\n}\n\nfunction translate(x, y) {\n  return 'translate(' + x + ',' + y + ')';\n}\n\nmodule.exports = {\n  arc: {\n    tag:  'path',\n    type: 'arc',\n    attr: function(emit, o) {\n      emit('transform', translateItem(o));\n      emit('d', path.arc(o));\n    }\n  },\n  area: {\n    tag:  'path',\n    type: 'area',\n    nest: true,\n    attr: function(emit, o) {\n      var items = o.mark.items;\n      if (items.length) emit('d', path.area(items));\n    }\n  },\n  group: {\n    tag:  'g',\n    type: 'group',\n    attr: function(emit, o, renderer) {\n      var id = null, defs, c;\n      emit('transform', translateItem(o));\n      if (o.clip) {\n        defs = renderer._defs;\n        id = o.clip_id || (o.clip_id = 'clip' + defs.clip_id++);\n        c = defs.clipping[id] || (defs.clipping[id] = {id: id});\n        c.width = o.width || 0;\n        c.height = o.height || 0;\n      }\n      emit('clip-path', id ? ('url(#' + id + ')') : null);\n    },\n    background: function(emit, o) {\n      emit('class', 'background');\n      emit('width', o.width || 0);\n      emit('height', o.height || 0);\n    }\n  },\n  image: {\n    tag:  'image',\n    type: 'image',\n    attr: function(emit, o, renderer) {\n      var x = o.x || 0,\n          y = o.y || 0,\n          w = o.width || 0,\n          h = o.height || 0,\n          url = renderer.imageURL(o.url);\n\n      x = x - (o.align === 'center' ? w/2 : o.align === 'right' ? w : 0);\n      y = y - (o.baseline === 'middle' ? h/2 : o.baseline === 'bottom' ? h : 0);\n\n      emit('href', url, 'http://www.w3.org/1999/xlink', 'xlink:href');\n      emit('transform', translate(x, y));\n      emit('width', w);\n      emit('height', h);\n    }\n  },\n  line: {\n    tag:  'path',\n    type: 'line',\n    nest: true,\n    attr: function(emit, o) {\n      var items = o.mark.items;\n      if (items.length) emit('d', path.line(items));\n    }\n  },\n  path: {\n    tag:  'path',\n    type: 'path',\n    attr: function(emit, o) {\n      emit('transform', translateItem(o));\n      emit('d', o.path);\n    }\n  },\n  rect: {\n    tag:  'rect',\n    type: 'rect',\n    nest: false,\n    attr: function(emit, o) {\n      emit('transform', translateItem(o));\n      emit('width', o.width || 0);\n      emit('height', o.height || 0);\n    }\n  },\n  rule: {\n    tag:  'line',\n    type: 'rule',\n    attr: function(emit, o) {\n      emit('transform', translateItem(o));\n      emit('x2', o.x2 != null ? o.x2 - (o.x||0) : 0);\n      emit('y2', o.y2 != null ? o.y2 - (o.y||0) : 0);\n    }\n  },\n  symbol: {\n    tag:  'path',\n    type: 'symbol',\n    attr: function(emit, o) {\n      var pathStr = !o.shape || symbolTypes[o.shape] ?\n        path.symbol(o) : path.resize(o.shape, o.size);\n\n      emit('transform', translateItem(o));\n      emit('d', pathStr);\n    }\n  },\n  text: {\n    tag:  'text',\n    type: 'text',\n    nest: false,\n    attr: function(emit, o) {\n      var dx = (o.dx || 0),\n          dy = (o.dy || 0) + text.offset(o),\n          x = (o.x || 0),\n          y = (o.y || 0),\n          a = o.angle || 0,\n          r = o.radius || 0, t;\n\n      if (r) {\n        t = (o.theta || 0) - Math.PI/2;\n        x += r * Math.cos(t);\n        y += r * Math.sin(t);\n      }\n\n      emit('text-anchor', textAlign[o.align] || 'start');\n\n      if (a) {\n        t = translate(x, y) + ' rotate('+a+')';\n        if (dx || dy) t += ' ' + translate(dx, dy);\n      } else {\n        t = translate(x+dx, y+dy);\n      }\n      emit('transform', t);\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/render/svg/marks.js\n// module id = ifCQ\n// module chunks = 0","function Heap(comparator) {\n  this.cmp = comparator;\n  this.nodes = [];\n}\n\nvar prototype = Heap.prototype;\n\nprototype.size = function() {\n  return this.nodes.length;\n};\n\nprototype.clear = function() {\n  return (this.nodes = [], this);\n};\n\nprototype.peek = function() {\n  return this.nodes[0];\n};\n\nprototype.push = function(x) {\n  var array = this.nodes;\n  array.push(x);\n  return _siftdown(array, 0, array.length-1, this.cmp);\n};\n\nprototype.pop = function() {\n  var array = this.nodes,\n      last = array.pop(),\n      item;\n\n  if (array.length) {\n    item = array[0];\n    array[0] = last;\n    _siftup(array, 0, this.cmp);\n  } else {\n    item = last;\n  }\n  return item;\n};\n\nprototype.replace = function(item) {\n  var array = this.nodes,\n      retval = array[0];\n  array[0] = item;\n  _siftup(array, 0, this.cmp);\n  return retval;\n};\n\nprototype.pushpop = function(item) {\n  var array = this.nodes, ref = array[0];\n  if (array.length && this.cmp(ref, item) < 0) {\n    array[0] = item;\n    item = ref;\n    _siftup(array, 0, this.cmp);\n  }\n  return item;\n};\n\nfunction _siftdown(array, start, idx, cmp) {\n  var item, parent, pidx;\n\n  item = array[idx];\n  while (idx > start) {\n    pidx = (idx - 1) >> 1;\n    parent = array[pidx];\n    if (cmp(item, parent) < 0) {\n      array[idx] = parent;\n      idx = pidx;\n      continue;\n    }\n    break;\n  }\n  return (array[idx] = item);\n}\n\nfunction _siftup(array, idx, cmp) {\n  var start = idx,\n      end = array.length,\n      item = array[idx],\n      cidx = 2 * idx + 1, ridx;\n\n  while (cidx < end) {\n    ridx = cidx + 1;\n    if (ridx < end && cmp(array[cidx], array[ridx]) >= 0) {\n      cidx = ridx;\n    }\n    array[idx] = array[cidx];\n    idx = cidx;\n    cidx = 2 * idx + 1;\n  }\n  array[idx] = item;\n  return _siftdown(array, start, idx, cmp);\n}\n\nmodule.exports = Heap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-dataflow/src/Heap.js\n// module id = j/ps\n// module chunks = 0","\"use strict\";\n(function (Mark) {\n    Mark[Mark[\"AREA\"] = 'area'] = \"AREA\";\n    Mark[Mark[\"BAR\"] = 'bar'] = \"BAR\";\n    Mark[Mark[\"LINE\"] = 'line'] = \"LINE\";\n    Mark[Mark[\"POINT\"] = 'point'] = \"POINT\";\n    Mark[Mark[\"TEXT\"] = 'text'] = \"TEXT\";\n    Mark[Mark[\"TICK\"] = 'tick'] = \"TICK\";\n    Mark[Mark[\"RULE\"] = 'rule'] = \"RULE\";\n    Mark[Mark[\"CIRCLE\"] = 'circle'] = \"CIRCLE\";\n    Mark[Mark[\"SQUARE\"] = 'square'] = \"SQUARE\";\n    Mark[Mark[\"ERRORBAR\"] = 'errorBar'] = \"ERRORBAR\";\n})(exports.Mark || (exports.Mark = {}));\nvar Mark = exports.Mark;\nexports.AREA = Mark.AREA;\nexports.BAR = Mark.BAR;\nexports.LINE = Mark.LINE;\nexports.POINT = Mark.POINT;\nexports.TEXT = Mark.TEXT;\nexports.TICK = Mark.TICK;\nexports.RULE = Mark.RULE;\nexports.CIRCLE = Mark.CIRCLE;\nexports.SQUARE = Mark.SQUARE;\nexports.ERRORBAR = Mark.ERRORBAR;\nexports.PRIMITIVE_MARKS = [exports.AREA, exports.BAR, exports.LINE, exports.POINT, exports.TEXT, exports.TICK, exports.RULE, exports.CIRCLE, exports.SQUARE];\n//# sourceMappingURL=mark.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/mark.js\n// module id = j8cM\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../channel');\nvar encoding_1 = require('../encoding');\nvar fielddef_1 = require('../fielddef');\nvar scale_1 = require('../scale');\nvar util_1 = require('../util');\nvar NameMap = (function () {\n    function NameMap() {\n        this._nameMap = {};\n    }\n    NameMap.prototype.rename = function (oldName, newName) {\n        this._nameMap[oldName] = newName;\n    };\n    NameMap.prototype.get = function (name) {\n        while (this._nameMap[name]) {\n            name = this._nameMap[name];\n        }\n        return name;\n    };\n    return NameMap;\n}());\nvar Model = (function () {\n    function Model(spec, parent, parentGivenName) {\n        this._warnings = [];\n        this._parent = parent;\n        this._name = spec.name || parentGivenName;\n        this._dataNameMap = parent ? parent._dataNameMap : new NameMap();\n        this._scaleNameMap = parent ? parent._scaleNameMap : new NameMap();\n        this._sizeNameMap = parent ? parent._sizeNameMap : new NameMap();\n        this._data = spec.data;\n        this._description = spec.description;\n        this._transform = spec.transform;\n        this.component = { data: null, layout: null, mark: null, scale: null, axis: null, axisGroup: null, gridGroup: null, legend: null };\n    }\n    Model.prototype.parse = function () {\n        this.parseData();\n        this.parseSelectionData();\n        this.parseLayoutData();\n        this.parseScale();\n        this.parseAxis();\n        this.parseLegend();\n        this.parseAxisGroup();\n        this.parseGridGroup();\n        this.parseMark();\n    };\n    Model.prototype.assembleScales = function () {\n        return util_1.flatten(util_1.vals(this.component.scale).map(function (scales) {\n            var arr = [scales.main];\n            if (scales.colorLegend) {\n                arr.push(scales.colorLegend);\n            }\n            if (scales.binColorLegend) {\n                arr.push(scales.binColorLegend);\n            }\n            return arr;\n        }));\n    };\n    Model.prototype.assembleAxes = function () {\n        return util_1.vals(this.component.axis);\n    };\n    Model.prototype.assembleLegends = function () {\n        return util_1.vals(this.component.legend);\n    };\n    Model.prototype.assembleGroup = function () {\n        var group = {};\n        group.marks = this.assembleMarks();\n        var scales = this.assembleScales();\n        if (scales.length > 0) {\n            group.scales = scales;\n        }\n        var axes = this.assembleAxes();\n        if (axes.length > 0) {\n            group.axes = axes;\n        }\n        var legends = this.assembleLegends();\n        if (legends.length > 0) {\n            group.legends = legends;\n        }\n        return group;\n    };\n    Model.prototype.reduce = function (f, init, t) {\n        return encoding_1.channelMappingReduce(this.channels(), this.mapping(), f, init, t);\n    };\n    Model.prototype.forEach = function (f, t) {\n        encoding_1.channelMappingForEach(this.channels(), this.mapping(), f, t);\n    };\n    Model.prototype.parent = function () {\n        return this._parent;\n    };\n    Model.prototype.name = function (text, delimiter) {\n        if (delimiter === void 0) { delimiter = '_'; }\n        return (this._name ? this._name + delimiter : '') + text;\n    };\n    Model.prototype.description = function () {\n        return this._description;\n    };\n    Model.prototype.data = function () {\n        return this._data;\n    };\n    Model.prototype.renameData = function (oldName, newName) {\n        this._dataNameMap.rename(oldName, newName);\n    };\n    Model.prototype.dataName = function (dataSourceType) {\n        return this._dataNameMap.get(this.name(String(dataSourceType)));\n    };\n    Model.prototype.renameSize = function (oldName, newName) {\n        this._sizeNameMap.rename(oldName, newName);\n    };\n    Model.prototype.channelSizeName = function (channel) {\n        return this.sizeName(channel === channel_1.X || channel === channel_1.COLUMN ? 'width' : 'height');\n    };\n    Model.prototype.sizeName = function (size) {\n        return this._sizeNameMap.get(this.name(size, '_'));\n    };\n    Model.prototype.transform = function () {\n        return this._transform || {};\n    };\n    Model.prototype.field = function (channel, opt) {\n        if (opt === void 0) { opt = {}; }\n        var fieldDef = this.fieldDef(channel);\n        if (fieldDef.bin) {\n            opt = util_1.extend({\n                binSuffix: this.scale(channel).type === scale_1.ScaleType.ORDINAL ? '_range' : '_start'\n            }, opt);\n        }\n        return fielddef_1.field(fieldDef, opt);\n    };\n    Model.prototype.scale = function (channel) {\n        return this._scale[channel];\n    };\n    Model.prototype.isOrdinalScale = function (channel) {\n        var scale = this.scale(channel);\n        return scale && scale.type === scale_1.ScaleType.ORDINAL;\n    };\n    Model.prototype.renameScale = function (oldName, newName) {\n        this._scaleNameMap.rename(oldName, newName);\n    };\n    Model.prototype.scaleName = function (channel) {\n        return this._scaleNameMap.get(this.name(channel + ''));\n    };\n    Model.prototype.sort = function (channel) {\n        return (this.mapping()[channel] || {}).sort;\n    };\n    Model.prototype.axis = function (channel) {\n        return this._axis[channel];\n    };\n    Model.prototype.legend = function (channel) {\n        return this._legend[channel];\n    };\n    Model.prototype.config = function () {\n        return this._config;\n    };\n    Model.prototype.addWarning = function (message) {\n        util_1.warning(message);\n        this._warnings.push(message);\n    };\n    Model.prototype.warnings = function () {\n        return this._warnings;\n    };\n    Model.prototype.isUnit = function () {\n        return false;\n    };\n    Model.prototype.isFacet = function () {\n        return false;\n    };\n    Model.prototype.isLayer = function () {\n        return false;\n    };\n    return Model;\n}());\nexports.Model = Model;\n//# sourceMappingURL=model.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/model.js\n// module id = jGoH\n// module chunks = 0","module.exports = {\n  'NaN':     'NaN',\n  'E':       'Math.E',\n  'LN2':     'Math.LN2',\n  'LN10':    'Math.LN10',\n  'LOG2E':   'Math.LOG2E',\n  'LOG10E':  'Math.LOG10E',\n  'PI':      'Math.PI',\n  'SQRT1_2': 'Math.SQRT1_2',\n  'SQRT2':   'Math.SQRT2'\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-expression/src/constants.js\n// module id = jJJB\n// module chunks = 0","\"use strict\";\nvar data_1 = require('../../data');\nvar util_1 = require('../../util');\nvar nullfilter_1 = require('./nullfilter');\nvar filter_1 = require('./filter');\nvar bin_1 = require('./bin');\nvar formula_1 = require('./formula');\nvar timeunit_1 = require('./timeunit');\nvar source;\n(function (source) {\n    function parse(model) {\n        var data = model.data();\n        if (data) {\n            var sourceData = { name: model.dataName(data_1.SOURCE) };\n            if (data.values && data.values.length > 0) {\n                sourceData.values = data.values;\n                sourceData.format = { type: 'json' };\n            }\n            else if (data.url) {\n                sourceData.url = data.url;\n                var defaultExtension = /(?:\\.([^.]+))?$/.exec(sourceData.url)[1];\n                if (!util_1.contains(['json', 'csv', 'tsv', 'topojson'], defaultExtension)) {\n                    defaultExtension = 'json';\n                }\n                var dataFormat = data.format || {};\n                var formatType = dataFormat.type || data['formatType'];\n                sourceData.format =\n                    util_1.extend({ type: formatType ? formatType : defaultExtension }, dataFormat.property ? { property: dataFormat.property } : {}, dataFormat.feature ?\n                        { feature: dataFormat.feature } :\n                        dataFormat.mesh ?\n                            { mesh: dataFormat.mesh } :\n                            {});\n            }\n            return sourceData;\n        }\n        else if (!model.parent()) {\n            return { name: model.dataName(data_1.SOURCE) };\n        }\n        return undefined;\n    }\n    source.parseUnit = parse;\n    function parseFacet(model) {\n        var sourceData = parse(model);\n        if (!model.child().component.data.source) {\n            model.child().renameData(model.child().dataName(data_1.SOURCE), model.dataName(data_1.SOURCE));\n        }\n        return sourceData;\n    }\n    source.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var sourceData = parse(model);\n        model.children().forEach(function (child) {\n            var childData = child.component.data;\n            if (model.compatibleSource(child)) {\n                var canMerge = !childData.filter && !childData.formatParse && !childData.nullFilter;\n                if (canMerge) {\n                    child.renameData(child.dataName(data_1.SOURCE), model.dataName(data_1.SOURCE));\n                    delete childData.source;\n                }\n                else {\n                    childData.source = {\n                        name: child.dataName(data_1.SOURCE),\n                        source: model.dataName(data_1.SOURCE)\n                    };\n                }\n            }\n        });\n        return sourceData;\n    }\n    source.parseLayer = parseLayer;\n    function assemble(model, component) {\n        if (component.source) {\n            var sourceData = component.source;\n            if (component.formatParse) {\n                component.source.format = component.source.format || {};\n                component.source.format.parse = component.formatParse;\n            }\n            sourceData.transform = [].concat(nullfilter_1.nullFilter.assemble(component), formula_1.formula.assemble(component), filter_1.filter.assemble(component), bin_1.bin.assemble(component), timeunit_1.timeUnit.assemble(component));\n            return sourceData;\n        }\n        return null;\n    }\n    source.assemble = assemble;\n})(source = exports.source || (exports.source = {}));\n//# sourceMappingURL=source.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/source.js\n// module id = jMte\n// module chunks = 0","var json = require('./json');\n\nmodule.exports = function(tree, format) {\n  return toTable(json(tree, format), format);\n};\n\nfunction toTable(root, fields) {\n  var childrenField = fields && fields.children || 'children',\n      parentField = fields && fields.parent || 'parent',\n      table = [];\n\n  function visit(node, parent) {\n    node[parentField] = parent;\n    table.push(node);\n    var children = node[childrenField];\n    if (children) {\n      for (var i=0; i<children.length; ++i) {\n        visit(children[i], node);\n      }\n    }\n  }\n\n  visit(root, null);\n  return (table.root = root, table);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/formats/treejson.js\n// module id = jbgm\n// module chunks = 0","var dl = require('datalib'),\n    df = require('vega-dataflow'),\n    ChangeSet = df.ChangeSet,\n    Tuple = df.Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Cross(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    with: {type: 'data'},\n    diagonal: {type: 'value', default: 'true'},\n    filter: {type: 'expr'}\n  });\n\n  this._output = {'left': 'a', 'right': 'b'};\n  this._lastWith = null; // Last time we crossed w/with-ds.\n  this._cids  = {};\n  this._cache = {};\n\n  return this.router(true).produces(true);\n}\n\nvar prototype = (Cross.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Cross;\n\n// Each cached incoming tuple also has a flag to determine whether\n// any tuples were filtered.\nfunction _cache(x, t) {\n  var c = this._cache,\n      cross = c[x._id] || (c[x._id] = {c: [], f: false});\n  cross.c.push(t);\n}\n\nfunction _cid(left, x, y) {\n  return left ? x._id+'_'+y._id : y._id+'_'+x._id;\n}\n\nfunction add(output, left, data, diag, test, mids, x) {\n  var as = this._output,\n      cache = this._cache,\n      cids  = this._cids,\n      oadd  = output.add,\n      fltrd = false,\n      i = 0, len = data.length,\n      t = {}, y, cid;\n\n  for (; i<len; ++i) {\n    y = data[i];\n    cid = _cid(left, x, y);\n    if (cids[cid]) continue;\n    if (x._id === y._id && !diag) continue;\n\n    Tuple.set(t, as.left, left ? x : y);\n    Tuple.set(t, as.right, left ? y : x);\n\n    // Only ingest a tuple if we keep it around. Otherwise, flag the\n    // caches as filtered.\n    if (!test || test(t)) {\n      oadd.push(t=Tuple.ingest(t));\n      _cache.call(this, x, t);\n      if (x._id !== y._id) _cache.call(this, y, t);\n      mids[t._id] = 1;\n      cids[cid] = true;\n      t = {};\n    } else {\n      if (cache[y._id]) cache[y._id].f = true;\n      fltrd = true;\n    }\n  }\n\n  if (cache[x._id]) cache[x._id].f = fltrd;\n}\n\nfunction mod(output, left, data, diag, test, mids, rids, x) {\n  var as = this._output,\n      cache = this._cache,\n      cids  = this._cids,\n      cross = cache[x._id],\n      tpls  = cross && cross.c,\n      fltrd = !cross || cross.f,\n      omod  = output.mod,\n      orem  = output.rem,\n      i, t, y, l, cid;\n\n  // If we have cached values, iterate through them for lazy\n  // removal, and to re-run the filter.\n  if (tpls) {\n    for (i=tpls.length-1; i>=0; --i) {\n      t = tpls[i];\n      l = x === t[as.left]; // Cache has tpls w/x both on left & right.\n      y = l ? t[as.right] : t[as.left];\n      cid = _cid(l, x, y);\n\n      // Lazy removal: y was previously rem'd, so clean up the cache.\n      if (!cache[y._id]) {\n        cids[cid] = false;\n        tpls.splice(i, 1);\n        continue;\n      }\n\n      if (!test || test(t)) {\n        if (mids[t._id]) continue;\n        omod.push(t);\n        mids[t._id] = 1;\n      } else {\n        if (!rids[t._id]) orem.push.apply(orem, tpls.splice(i, 1));\n        rids[t._id] = 1;\n        cids[cid] = false;\n        cross.f = true;\n      }\n    }\n  }\n\n  // If we have a filter param, call add to catch any tuples that may\n  // have previously been filtered.\n  if (test && fltrd) add.call(this, output, left, data, diag, test, mids, x);\n}\n\nfunction rem(output, left, rids, x) {\n  var as = this._output,\n      cross = this._cache[x._id],\n      cids  = this._cids,\n      orem  = output.rem,\n      i, len, t, y, l;\n  if (!cross) return;\n\n  for (i=0, len=cross.c.length; i<len; ++i) {\n    t = cross.c[i];\n    l = x === t[as.left];\n    y = l ? t[as.right] : t[as.left];\n    cids[_cid(l, x, y)] = false;\n    if (!rids[t._id]) {\n      orem.push(t);\n      rids[t._id] = 1;\n    }\n  }\n\n  this._cache[x._id] = null;\n}\n\nfunction purge(output, rids) {\n  var cache = this._cache,\n      keys  = dl.keys(cache),\n      rem = output.rem,\n      i, len, j, jlen, cross, t;\n\n  for (i=0, len=keys.length; i<len; ++i) {\n    cross = cache[keys[i]];\n    for (j=0, jlen=cross.c.length; j<jlen; ++j) {\n      t = cross.c[j];\n      if (rids[t._id]) continue;\n      rem.push(t);\n      rids[t._id] = 1;\n    }\n  }\n\n  this._cache = {};\n  this._cids = {};\n  this._lastWith = null;\n}\n\nprototype.batchTransform = function(input, data, reset) {\n  log.debug(input, ['crossing']);\n\n  var w = this.param('with'),\n      diag = this.param('diagonal'),\n      as = this._output,\n      test = this.param('filter') || null,\n      selfCross = (!w.name),\n      woutput = selfCross ? input : w.source.last(),\n      wdata   = selfCross ? data : w.source.values(),\n      output  = ChangeSet.create(input),\n      mids = {}, rids = {}; // Track IDs to prevent dupe mod/rem tuples.\n\n  // If signal values (for diag or test) have changed, purge the cache\n  // and re-run cross in batch mode. Otherwise stream cross values.\n  if (reset) {\n    purge.call(this, output, rids);\n    data.forEach(add.bind(this, output, true, wdata, diag, test, mids));\n    this._lastWith = woutput.stamp;\n  } else {\n    input.rem.forEach(rem.bind(this, output, true, rids));\n    input.add.forEach(add.bind(this, output, true, wdata, diag, test, mids));\n\n    if (woutput.stamp > this._lastWith) {\n      woutput.rem.forEach(rem.bind(this, output, false, rids));\n      woutput.add.forEach(add.bind(this, output, false, data, diag, test, mids));\n      woutput.mod.forEach(mod.bind(this, output, false, data, diag, test, mids, rids));\n      this._lastWith = woutput.stamp;\n    }\n\n    // Mods need to come after all removals have been run.\n    input.mod.forEach(mod.bind(this, output, true, wdata, diag, test, mids, rids));\n  }\n\n  output.fields[as.left]  = 1;\n  output.fields[as.right] = 1;\n  return output;\n};\n\nmodule.exports = Cross;\n\nCross.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Cross transform\",\n  \"description\": \"Compute the cross-product of two data sets.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"cross\"]},\n    \"with\": {\n      \"type\": \"string\",\n      \"description\": \"The name of the secondary data set to cross with the primary data. \" +\n        \"If unspecified, the primary data is crossed with itself.\"\n    },\n    \"diagonal\": {\n      \"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"If false, items along the \\\"diagonal\\\" of the cross-product \" +\n        \"(those elements with the same index in their respective array) \" +\n        \"will not be included in the output.\",\n      \"default\": true\n    },\n    \"filter\": {\n      \"type\": \"string\",\n      \"description\": \"A string containing an expression (in JavaScript syntax) \" +\n        \"to filter the resulting data elements.\"\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"left\": {\"type\": \"string\", \"default\": \"a\"},\n        \"right\": {\"type\": \"string\", \"default\": \"b\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Cross.js\n// module id = juLC\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../channel');\nvar fielddef_1 = require('../fielddef');\nvar mark_1 = require('../mark');\nvar type_1 = require('../type');\nvar util_1 = require('../util');\nvar common_1 = require('./common');\nvar scale_1 = require('./scale');\nfunction parseLegendComponent(model) {\n    return [channel_1.COLOR, channel_1.SIZE, channel_1.SHAPE].reduce(function (legendComponent, channel) {\n        if (model.legend(channel)) {\n            legendComponent[channel] = parseLegend(model, channel);\n        }\n        return legendComponent;\n    }, {});\n}\nexports.parseLegendComponent = parseLegendComponent;\nfunction getLegendDefWithScale(model, channel) {\n    switch (channel) {\n        case channel_1.COLOR:\n            var fieldDef = model.fieldDef(channel_1.COLOR);\n            var scale = model.scaleName(useColorLegendScale(fieldDef) ?\n                scale_1.COLOR_LEGEND :\n                channel_1.COLOR);\n            return model.config().mark.filled ? { fill: scale } : { stroke: scale };\n        case channel_1.SIZE:\n            return { size: model.scaleName(channel_1.SIZE) };\n        case channel_1.SHAPE:\n            return { shape: model.scaleName(channel_1.SHAPE) };\n    }\n    return null;\n}\nfunction parseLegend(model, channel) {\n    var fieldDef = model.fieldDef(channel);\n    var legend = model.legend(channel);\n    var config = model.config();\n    var def = getLegendDefWithScale(model, channel);\n    def.title = title(legend, fieldDef, config);\n    var format = common_1.numberFormat(fieldDef, legend.format, config);\n    if (format) {\n        def.format = format;\n    }\n    ['offset', 'orient', 'values'].forEach(function (property) {\n        var value = legend[property];\n        if (value !== undefined) {\n            def[property] = value;\n        }\n    });\n    var props = (typeof legend !== 'boolean' && legend.properties) || {};\n    ['title', 'symbols', 'legend', 'labels'].forEach(function (group) {\n        var value = properties[group] ?\n            properties[group](fieldDef, props[group], model, channel) :\n            props[group];\n        if (value !== undefined && util_1.keys(value).length > 0) {\n            def.properties = def.properties || {};\n            def.properties[group] = value;\n        }\n    });\n    return def;\n}\nexports.parseLegend = parseLegend;\nfunction title(legend, fieldDef, config) {\n    if (typeof legend !== 'boolean' && legend.title) {\n        return legend.title;\n    }\n    return fielddef_1.title(fieldDef, config);\n}\nexports.title = title;\nfunction useColorLegendScale(fieldDef) {\n    return fieldDef.type === type_1.ORDINAL || fieldDef.bin || fieldDef.timeUnit;\n}\nexports.useColorLegendScale = useColorLegendScale;\nvar properties;\n(function (properties) {\n    function symbols(fieldDef, symbolsSpec, model, channel) {\n        var symbols = {};\n        var mark = model.mark();\n        var legend = model.legend(channel);\n        switch (mark) {\n            case mark_1.BAR:\n            case mark_1.TICK:\n            case mark_1.TEXT:\n                symbols.shape = { value: 'square' };\n                break;\n            case mark_1.CIRCLE:\n            case mark_1.SQUARE:\n                symbols.shape = { value: mark };\n                break;\n            case mark_1.POINT:\n            case mark_1.LINE:\n            case mark_1.AREA:\n                break;\n        }\n        var filled = model.config().mark.filled;\n        var config = channel === channel_1.COLOR ?\n            util_1.without(common_1.FILL_STROKE_CONFIG, [filled ? 'fill' : 'stroke', 'strokeDash', 'strokeDashOffset']) :\n            util_1.without(common_1.FILL_STROKE_CONFIG, ['strokeDash', 'strokeDashOffset']);\n        config = util_1.without(config, ['strokeDash', 'strokeDashOffset']);\n        common_1.applyMarkConfig(symbols, model, config);\n        if (filled) {\n            symbols.strokeWidth = { value: 0 };\n        }\n        var value;\n        if (model.has(channel_1.COLOR) && channel === channel_1.COLOR) {\n            if (useColorLegendScale(fieldDef)) {\n                value = { scale: model.scaleName(channel_1.COLOR), field: 'data' };\n            }\n        }\n        else if (model.fieldDef(channel_1.COLOR).value) {\n            value = { value: model.fieldDef(channel_1.COLOR).value };\n        }\n        if (value !== undefined) {\n            if (filled) {\n                symbols.fill = value;\n            }\n            else {\n                symbols.stroke = value;\n            }\n        }\n        else if (channel !== channel_1.COLOR) {\n            symbols[filled ? 'fill' : 'stroke'] = symbols[filled ? 'fill' : 'stroke'] ||\n                { value: model.config().mark.color };\n        }\n        if (legend.symbolColor !== undefined) {\n            symbols.fill = { value: legend.symbolColor };\n        }\n        if (legend.symbolShape !== undefined) {\n            symbols.shape = { value: legend.symbolShape };\n        }\n        if (legend.symbolSize !== undefined) {\n            symbols.size = { value: legend.symbolSize };\n        }\n        if (legend.symbolStrokeWidth !== undefined) {\n            symbols.strokeWidth = { value: legend.symbolStrokeWidth };\n        }\n        symbols = util_1.extend(symbols, symbolsSpec || {});\n        return util_1.keys(symbols).length > 0 ? symbols : undefined;\n    }\n    properties.symbols = symbols;\n    function labels(fieldDef, labelsSpec, model, channel) {\n        var legend = model.legend(channel);\n        var config = model.config();\n        var labels = {};\n        if (channel === channel_1.COLOR) {\n            if (fieldDef.type === type_1.ORDINAL) {\n                labelsSpec = util_1.extend({\n                    text: {\n                        scale: model.scaleName(scale_1.COLOR_LEGEND),\n                        field: 'data'\n                    }\n                }, labelsSpec || {});\n            }\n            else if (fieldDef.bin) {\n                labelsSpec = util_1.extend({\n                    text: {\n                        scale: model.scaleName(scale_1.COLOR_LEGEND_LABEL),\n                        field: 'data'\n                    }\n                }, labelsSpec || {});\n            }\n            else if (fieldDef.type === type_1.TEMPORAL) {\n                labelsSpec = util_1.extend({\n                    text: {\n                        template: common_1.timeTemplate('datum.data', fieldDef.timeUnit, legend.format, legend.shortTimeLabels, config)\n                    }\n                }, labelsSpec || {});\n            }\n        }\n        if (legend.labelAlign !== undefined) {\n            labels.align = { value: legend.labelAlign };\n        }\n        if (legend.labelColor !== undefined) {\n            labels.stroke = { value: legend.labelColor };\n        }\n        if (legend.labelFont !== undefined) {\n            labels.font = { value: legend.labelFont };\n        }\n        if (legend.labelFontSize !== undefined) {\n            labels.fontSize = { value: legend.labelFontSize };\n        }\n        if (legend.labelBaseline !== undefined) {\n            labels.baseline = { value: legend.labelBaseline };\n        }\n        labels = util_1.extend(labels, labelsSpec || {});\n        return util_1.keys(labels).length > 0 ? labels : undefined;\n    }\n    properties.labels = labels;\n    function title(fieldDef, titleSpec, model, channel) {\n        var legend = model.legend(channel);\n        var titles = {};\n        if (legend.titleColor !== undefined) {\n            titles.stroke = { value: legend.titleColor };\n        }\n        if (legend.titleFont !== undefined) {\n            titles.font = { value: legend.titleFont };\n        }\n        if (legend.titleFontSize !== undefined) {\n            titles.fontSize = { value: legend.titleFontSize };\n        }\n        if (legend.titleFontWeight !== undefined) {\n            titles.fontWeight = { value: legend.titleFontWeight };\n        }\n        titles = util_1.extend(titles, titleSpec || {});\n        return util_1.keys(titles).length > 0 ? titles : undefined;\n    }\n    properties.title = title;\n})(properties = exports.properties || (exports.properties = {}));\n//# sourceMappingURL=legend.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/legend.js\n// module id = jxr4\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar fielddef_1 = require('../../fielddef');\nvar common_1 = require('../common');\nvar area;\n(function (area) {\n    function markType() {\n        return 'area';\n    }\n    area.markType = markType;\n    function properties(model) {\n        var p = {};\n        var config = model.config();\n        var orient = config.mark.orient;\n        if (orient) {\n            p.orient = { value: orient };\n        }\n        var stack = model.stack();\n        var _x = x(model.encoding().x, model.scaleName(channel_1.X), orient, stack);\n        if (_x) {\n            p.x = _x;\n        }\n        var _y = y(model.encoding().y, model.scaleName(channel_1.Y), orient, stack);\n        if (_y) {\n            p.y = _y;\n        }\n        var _x2 = x2(model.encoding().x, model.encoding().x2, model.scaleName(channel_1.X), orient, stack);\n        if (_x2) {\n            p.x2 = _x2;\n        }\n        var _y2 = y2(model.encoding().y, model.encoding().y2, model.scaleName(channel_1.Y), orient, stack);\n        if (_y2) {\n            p.y2 = _y2;\n        }\n        common_1.applyColorAndOpacity(p, model);\n        common_1.applyMarkConfig(p, model, ['interpolate', 'tension']);\n        return p;\n    }\n    area.properties = properties;\n    function x(fieldDef, scaleName, orient, stack) {\n        if (stack && channel_1.X === stack.fieldChannel) {\n            return {\n                scale: scaleName,\n                field: fielddef_1.field(fieldDef, { suffix: '_start' })\n            };\n        }\n        else if (fielddef_1.isMeasure(fieldDef)) {\n            if (orient === 'horizontal') {\n                if (fieldDef && fieldDef.field) {\n                    return {\n                        scale: scaleName,\n                        field: fielddef_1.field(fieldDef)\n                    };\n                }\n                else {\n                    return {\n                        scale: scaleName,\n                        value: 0\n                    };\n                }\n            }\n            else {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef)\n                };\n            }\n        }\n        else if (fielddef_1.isDimension(fieldDef)) {\n            return {\n                scale: scaleName,\n                field: fielddef_1.field(fieldDef, { binSuffix: '_mid' })\n            };\n        }\n        return undefined;\n    }\n    area.x = x;\n    function x2(xFieldDef, x2FieldDef, scaleName, orient, stack) {\n        if (stack && channel_1.X === stack.fieldChannel) {\n            if (orient === 'horizontal') {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(xFieldDef, { suffix: '_end' })\n                };\n            }\n        }\n        else if (fielddef_1.isMeasure(x2FieldDef)) {\n            if (orient === 'horizontal') {\n                if (x2FieldDef && x2FieldDef.field) {\n                    return {\n                        scale: scaleName,\n                        field: fielddef_1.field(x2FieldDef)\n                    };\n                }\n                else {\n                    return {\n                        scale: scaleName,\n                        value: 0\n                    };\n                }\n            }\n        }\n        return undefined;\n    }\n    area.x2 = x2;\n    function y(fieldDef, scaleName, orient, stack) {\n        if (stack && channel_1.Y === stack.fieldChannel) {\n            return {\n                scale: scaleName,\n                field: fielddef_1.field(fieldDef, { suffix: '_start' })\n            };\n        }\n        else if (fielddef_1.isMeasure(fieldDef)) {\n            if (orient !== 'horizontal') {\n                if (fieldDef && fieldDef.field) {\n                    return {\n                        scale: scaleName,\n                        field: fielddef_1.field(fieldDef)\n                    };\n                }\n                else {\n                    return { field: { group: 'height' } };\n                }\n            }\n            else {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef)\n                };\n            }\n        }\n        else if (fielddef_1.isDimension(fieldDef)) {\n            return {\n                scale: scaleName,\n                field: fielddef_1.field(fieldDef, { binSuffix: '_mid' })\n            };\n        }\n        return undefined;\n    }\n    area.y = y;\n    function y2(yFieldDef, y2FieldDef, scaleName, orient, stack) {\n        if (stack && channel_1.Y === stack.fieldChannel) {\n            if (orient !== 'horizontal') {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(yFieldDef, { suffix: '_end' })\n                };\n            }\n        }\n        else if (fielddef_1.isMeasure(yFieldDef)) {\n            if (orient !== 'horizontal') {\n                if (y2FieldDef && y2FieldDef.field) {\n                    return {\n                        scale: scaleName,\n                        field: fielddef_1.field(y2FieldDef)\n                    };\n                }\n                else {\n                    return {\n                        scale: scaleName,\n                        value: 0\n                    };\n                }\n            }\n        }\n        return undefined;\n    }\n    area.y2 = y2;\n    function labels(model) {\n        return undefined;\n    }\n    area.labels = labels;\n})(area = exports.area || (exports.area = {}));\n//# sourceMappingURL=area.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/mark/area.js\n// module id = k2D6\n// module chunks = 0","\"use strict\";\nvar util_1 = require('../../util');\nvar time_1 = require('./../time');\nvar timeUnitDomain;\n(function (timeUnitDomain) {\n    function parse(model) {\n        return model.reduce(function (timeUnitDomainMap, fieldDef, channel) {\n            if (fieldDef.timeUnit) {\n                var domain = time_1.rawDomain(fieldDef.timeUnit, channel);\n                if (domain) {\n                    timeUnitDomainMap[fieldDef.timeUnit] = true;\n                }\n            }\n            return timeUnitDomainMap;\n        }, {});\n    }\n    timeUnitDomain.parseUnit = parse;\n    function parseFacet(model) {\n        return util_1.extend(parse(model), model.child().component.data.timeUnitDomain);\n    }\n    timeUnitDomain.parseFacet = parseFacet;\n    function parseLayer(model) {\n        return util_1.extend(parse(model), model.children().forEach(function (child) {\n            return child.component.data.timeUnitDomain;\n        }));\n    }\n    timeUnitDomain.parseLayer = parseLayer;\n    function assemble(component) {\n        return util_1.keys(component.timeUnitDomain).reduce(function (timeUnitData, tu) {\n            var timeUnit = tu;\n            var domain = time_1.rawDomain(timeUnit, null);\n            if (domain) {\n                timeUnitData.push({\n                    name: timeUnit,\n                    values: domain,\n                    transform: [{\n                            type: 'formula',\n                            field: 'date',\n                            expr: time_1.parseExpression(timeUnit, 'datum.data', true)\n                        }]\n                });\n            }\n            return timeUnitData;\n        }, []);\n    }\n    timeUnitDomain.assemble = assemble;\n})(timeUnitDomain = exports.timeUnitDomain || (exports.timeUnitDomain = {}));\n//# sourceMappingURL=timeunitdomain.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/timeunitdomain.js\n// module id = k66X\n// module chunks = 0","\"use strict\";\nvar data_1 = require('../../data');\nvar fielddef_1 = require('../../fielddef');\nvar stackScale;\n(function (stackScale) {\n    function parseUnit(model) {\n        var stackProps = model.stack();\n        if (stackProps) {\n            var groupbyChannel = stackProps.groupbyChannel;\n            var fieldChannel = stackProps.fieldChannel;\n            return {\n                name: model.dataName(data_1.STACKED_SCALE),\n                source: model.dataName(data_1.SUMMARY),\n                transform: [{\n                        type: 'aggregate',\n                        groupby: [model.field(groupbyChannel)],\n                        summarize: [{ ops: ['sum'], field: model.field(fieldChannel) }]\n                    }]\n            };\n        }\n        return null;\n    }\n    stackScale.parseUnit = parseUnit;\n    ;\n    function parseFacet(model) {\n        var child = model.child();\n        var childDataComponent = child.component.data;\n        if (!childDataComponent.source && childDataComponent.stackScale) {\n            var stackComponent = childDataComponent.stackScale;\n            var newName = model.dataName(data_1.STACKED_SCALE);\n            child.renameData(stackComponent.name, newName);\n            stackComponent.name = newName;\n            stackComponent.source = model.dataName(data_1.SUMMARY);\n            stackComponent.transform[0].groupby = model.reduce(function (groupby, fieldDef) {\n                groupby.push(fielddef_1.field(fieldDef));\n                return groupby;\n            }, stackComponent.transform[0].groupby);\n            delete childDataComponent.stackScale;\n            return stackComponent;\n        }\n        return null;\n    }\n    stackScale.parseFacet = parseFacet;\n    function parseLayer(model) {\n        return null;\n    }\n    stackScale.parseLayer = parseLayer;\n    function assemble(component) {\n        return component.stackScale;\n    }\n    stackScale.assemble = assemble;\n})(stackScale = exports.stackScale || (exports.stackScale = {}));\n//# sourceMappingURL=stackscale.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/stackscale.js\n// module id = kowr\n// module chunks = 0","var bound = require('../util/bound');\n\nvar sets = [\n  'items',\n  'axisItems',\n  'legendItems'\n];\n\nvar keys = [\n  'marktype', 'name', 'interactive', 'clip',\n  'items', 'axisItems', 'legendItems', 'layer',\n  'x', 'y', 'width', 'height', 'align', 'baseline',             // layout\n  'fill', 'fillOpacity', 'opacity',                             // fill\n  'stroke', 'strokeOpacity', 'strokeWidth', 'strokeCap',        // stroke\n  'strokeDash', 'strokeDashOffset',                             // stroke dash\n  'startAngle', 'endAngle', 'innerRadius', 'outerRadius',       // arc\n  'interpolate', 'tension', 'orient',                           // area, line\n  'url',                                                        // image\n  'path',                                                       // path\n  'x2', 'y2',                                                   // rule\n  'size', 'shape',                                              // symbol\n  'text', 'angle', 'theta', 'radius', 'dx', 'dy',               // text\n  'font', 'fontSize', 'fontWeight', 'fontStyle', 'fontVariant'  // font\n];\n\nfunction toJSON(scene, indent) {\n  return JSON.stringify(scene, keys, indent);\n}\n\nfunction fromJSON(json) {\n  var scene = (typeof json === 'string' ? JSON.parse(json) : json);\n  return initialize(scene);\n}\n\nfunction initialize(scene) {\n  var type = scene.marktype,\n      i, n, s, m, items;\n\n  for (s=0, m=sets.length; s<m; ++s) {\n    if ((items = scene[sets[s]])) {\n      for (i=0, n=items.length; i<n; ++i) {\n        items[i][type ? 'mark' : 'group'] = scene;\n        if (!type || type === 'group') {\n          initialize(items[i]);\n        }\n      }\n    }\n  }\n\n  if (type) bound.mark(scene);\n  return scene;\n}\n\nmodule.exports = {\n  toJSON:   toJSON,\n  fromJSON: fromJSON\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/util/scene.js\n// module id = l/hG\n// module chunks = 0","var dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    parseMark = require('../parse/mark'),\n    util = require('../util');\n\nvar axisBounds = new (require('vega-scenegraph').Bounds)();\nvar ORDINAL = 'ordinal';\n\nfunction axs(model, config) {\n  var scale,\n      orient = config.orient,\n      offset = 0,\n      titleOffset = config.titleOffset,\n      axisDef = {},\n      layer = 'front',\n      grid = false,\n      title = null,\n      tickMajorSize = config.tickSize,\n      tickMinorSize = config.tickSize,\n      tickEndSize = config.tickSize,\n      tickPadding = config.tickPadding || config.padding,\n      tickValues = null,\n      tickFormatString = null,\n      tickFormatType = null,\n      tickSubdivide = 0,\n      tickCount = config.ticks,\n      gridLineStyle = {},\n      tickLabelStyle = {},\n      majorTickStyle = {},\n      minorTickStyle = {},\n      titleStyle = {},\n      domainStyle = {},\n      m = { // Axis marks as references for updates\n        gridLines:  {},\n        majorTicks: {},\n        minorTicks: {},\n        tickLabels: {},\n        domain: {},\n        title:  {}\n      };\n\n  var axis = {};\n\n  function reset() {\n    axisDef.type = null;\n  }\n\n  function ingest(d) {\n    return {data: d};\n  }\n\n  function getTicks(format) {\n    var major = tickValues || (scale.ticks ? scale.ticks(tickCount) : scale.domain()),\n        minor = axisSubdivide(scale, major, tickSubdivide).map(ingest);\n    major = major.map(function(d) { return (d = ingest(d), d.label = format(d.data), d); });\n    return [major, minor];\n  }\n\n  axis.def = function() {\n    if (!axisDef.type) axis_def(scale);\n\n    var format = util.getTickFormat(scale, tickCount, tickFormatType, tickFormatString),\n        ticks  = getTicks(format),\n        tdata  = title ? [title].map(ingest) : [];\n\n    axisDef.marks[0].from = function() { return grid ? ticks[0] : []; };\n    axisDef.marks[1].from = function() { return ticks[0]; };\n    axisDef.marks[2].from = function() { return ticks[1]; };\n    axisDef.marks[3].from = axisDef.marks[1].from;\n    axisDef.marks[4].from = function() { return [1]; };\n    axisDef.marks[5].from = function() { return tdata; };\n    axisDef.offset = offset;\n    axisDef.orient = orient;\n    axisDef.layer = layer;\n    if (titleOffset === 'auto') titleAutoOffset(axisDef);\n\n    return axisDef;\n  };\n\n  function titleAutoOffset(axisDef) {\n    var orient = axisDef.orient,\n        update = axisDef.marks[5].properties.update,\n        fn = update.encode,\n        min = config.titleOffsetAutoMin,\n        max = config.titleOffsetAutoMax,\n        pad = config.titleOffsetAutoMargin;\n\n    // Offset axis title using bounding box of axis domain and labels\n    // Assumes other components are **encoded and bounded** beforehand\n    update.encode = function(item, group, trans, db, signals, preds) {\n      var dirty = fn.call(fn, item, group, trans, db, signals, preds),\n          field = (orient==='bottom' || orient==='top') ? 'y' : 'x';\n      if (titleStyle[field] != null) return dirty;\n\n      axisBounds.clear()\n        .union(group.items[3].bounds)\n        .union(group.items[4].bounds);\n\n      var o = trans ? {} : item,\n          method = (orient==='left' || orient==='right') ? 'width' : 'height',\n          sign = (orient==='top' || orient==='left') ? -1 : 1,\n          off = ~~(axisBounds[method]() + item.fontSize/2 + pad);\n\n      Tuple.set(o, field, sign * Math.min(Math.max(min, off), max));\n      if (trans) trans.interpolate(item, o);\n      return true;\n    };\n  }\n\n  function axis_def(scale) {\n    // setup scale mapping\n    var newScale, oldScale, range;\n    if (scale.type === ORDINAL) {\n      newScale = {scale: scale.scaleName, offset: 0.5 + scale.rangeBand()/2};\n      oldScale = newScale;\n    } else {\n      newScale = {scale: scale.scaleName, offset: 0.5};\n      oldScale = {scale: scale.scaleName+':prev', offset: 0.5};\n    }\n    range = axisScaleRange(scale);\n\n    // setup axis marks\n    dl.extend(m.gridLines, axisTicks(config));\n    dl.extend(m.majorTicks, axisTicks(config));\n    dl.extend(m.minorTicks, axisTicks(config));\n    dl.extend(m.tickLabels, axisTickLabels(config));\n    dl.extend(m.domain, axisDomain(config));\n    dl.extend(m.title, axisTitle(config));\n    m.gridLines.properties.enter.stroke = {value: config.gridColor};\n    m.gridLines.properties.enter.strokeOpacity = {value: config.gridOpacity};\n    m.gridLines.properties.enter.strokeWidth = {value: config.gridWidth};\n    m.gridLines.properties.enter.strokeDash = {value: config.gridDash};\n\n    // extend axis marks based on axis orientation\n    axisTicksExtend(orient, m.gridLines, oldScale, newScale, Infinity, scale, config, offset);\n    axisTicksExtend(orient, m.majorTicks, oldScale, newScale, tickMajorSize, scale, config);\n    axisTicksExtend(orient, m.minorTicks, oldScale, newScale, tickMinorSize, scale, config);\n\n    axisLabelExtend(orient, m.tickLabels, oldScale, newScale, tickMajorSize, tickPadding);\n\n    axisDomainExtend(orient, m.domain, range, tickEndSize);\n    axisTitleExtend(orient, m.title, range, +titleOffset || -1);\n\n    // add / override custom style properties\n    dl.extend(m.gridLines.properties.update, gridLineStyle);\n    dl.extend(m.majorTicks.properties.update, majorTickStyle);\n    dl.extend(m.minorTicks.properties.update, minorTickStyle);\n    dl.extend(m.tickLabels.properties.update, tickLabelStyle);\n    dl.extend(m.domain.properties.update, domainStyle);\n    dl.extend(m.title.properties.update, titleStyle);\n\n    var marks = [m.gridLines, m.majorTicks, m.minorTicks, m.tickLabels, m.domain, m.title];\n    dl.extend(axisDef, {\n      type: 'group',\n      interactive: false,\n      properties: {\n        enter: {\n          encode: axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        },\n        update: {\n          encode: axisUpdate,\n          scales: [scale.scaleName],\n          signals: [], data: []\n        }\n      }\n    });\n\n    axisDef.marks = marks.map(function(m) { return parseMark(model, m); });\n  }\n\n  axis.scale = function(x) {\n    if (!arguments.length) return scale;\n    if (scale !== x) { scale = x; reset(); }\n    return axis;\n  };\n\n  axis.orient = function(x) {\n    if (!arguments.length) return orient;\n    if (orient !== x) {\n      orient = x in axisOrients ? x + '' : config.orient;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.title = function(x) {\n    if (!arguments.length) return title;\n    if (title !== x) { title = x; reset(); }\n    return axis;\n  };\n\n  axis.tickCount = function(x) {\n    if (!arguments.length) return tickCount;\n    tickCount = x;\n    return axis;\n  };\n\n  axis.tickValues = function(x) {\n    if (!arguments.length) return tickValues;\n    tickValues = x;\n    return axis;\n  };\n\n  axis.tickFormat = function(x) {\n    if (!arguments.length) return tickFormatString;\n    if (tickFormatString !== x) {\n      tickFormatString = x;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.tickFormatType = function(x) {\n    if (!arguments.length) return tickFormatType;\n    if (tickFormatType !== x) {\n      tickFormatType = x;\n      reset();\n    }\n    return axis;\n  };\n\n  axis.tickSize = function(x, y) {\n    if (!arguments.length) return tickMajorSize;\n    var n = arguments.length - 1,\n        major = +x,\n        minor = n > 1 ? +y : tickMajorSize,\n        end   = n > 0 ? +arguments[n] : tickMajorSize;\n\n    if (tickMajorSize !== major ||\n        tickMinorSize !== minor ||\n        tickEndSize !== end) {\n      reset();\n    }\n\n    tickMajorSize = major;\n    tickMinorSize = minor;\n    tickEndSize = end;\n    return axis;\n  };\n\n  axis.tickSubdivide = function(x) {\n    if (!arguments.length) return tickSubdivide;\n    tickSubdivide = +x;\n    return axis;\n  };\n\n  axis.offset = function(x) {\n    if (!arguments.length) return offset;\n    offset = dl.isObject(x) ? x : +x;\n    return axis;\n  };\n\n  axis.tickPadding = function(x) {\n    if (!arguments.length) return tickPadding;\n    if (tickPadding !== +x) { tickPadding = +x; reset(); }\n    return axis;\n  };\n\n  axis.titleOffset = function(x) {\n    if (!arguments.length) return titleOffset;\n    if (titleOffset !== x) { titleOffset = x; reset(); }\n    return axis;\n  };\n\n  axis.layer = function(x) {\n    if (!arguments.length) return layer;\n    if (layer !== x) { layer = x; reset(); }\n    return axis;\n  };\n\n  axis.grid = function(x) {\n    if (!arguments.length) return grid;\n    if (grid !== x) { grid = x; reset(); }\n    return axis;\n  };\n\n  axis.gridLineProperties = function(x) {\n    if (!arguments.length) return gridLineStyle;\n    if (gridLineStyle !== x) { gridLineStyle = x; }\n    return axis;\n  };\n\n  axis.majorTickProperties = function(x) {\n    if (!arguments.length) return majorTickStyle;\n    if (majorTickStyle !== x) { majorTickStyle = x; }\n    return axis;\n  };\n\n  axis.minorTickProperties = function(x) {\n    if (!arguments.length) return minorTickStyle;\n    if (minorTickStyle !== x) { minorTickStyle = x; }\n    return axis;\n  };\n\n  axis.tickLabelProperties = function(x) {\n    if (!arguments.length) return tickLabelStyle;\n    if (tickLabelStyle !== x) { tickLabelStyle = x; }\n    return axis;\n  };\n\n  axis.titleProperties = function(x) {\n    if (!arguments.length) return titleStyle;\n    if (titleStyle !== x) { titleStyle = x; }\n    return axis;\n  };\n\n  axis.domainProperties = function(x) {\n    if (!arguments.length) return domainStyle;\n    if (domainStyle !== x) { domainStyle = x; }\n    return axis;\n  };\n\n  axis.reset = function() {\n    reset();\n    return axis;\n  };\n\n  return axis;\n}\n\nvar axisOrients = {top: 1, right: 1, bottom: 1, left: 1};\n\nfunction axisSubdivide(scale, ticks, m) {\n  var subticks = [];\n  if (m && ticks.length > 1) {\n    var extent = axisScaleExtent(scale.domain()),\n        i = -1,\n        n = ticks.length,\n        d = (ticks[1] - ticks[0]) / ++m,\n        j,\n        v;\n    while (++i < n) {\n      for (j = m; --j > 0;) {\n        if ((v = +ticks[i] - j * d) >= extent[0]) {\n          subticks.push(v);\n        }\n      }\n    }\n    for (--i, j = 0; ++j < m && (v = +ticks[i] + j * d) < extent[1];) {\n      subticks.push(v);\n    }\n  }\n  return subticks;\n}\n\nfunction axisScaleExtent(domain) {\n  var start = domain[0], stop = domain[domain.length - 1];\n  return start < stop ? [start, stop] : [stop, start];\n}\n\nfunction axisScaleRange(scale) {\n  return scale.rangeExtent ?\n    scale.rangeExtent() :\n    axisScaleExtent(scale.range());\n}\n\nvar axisAlign = {\n  bottom: 'center',\n  top: 'center',\n  left: 'right',\n  right: 'left'\n};\n\nvar axisBaseline = {\n  bottom: 'top',\n  top: 'bottom',\n  left: 'middle',\n  right: 'middle'\n};\n\nfunction axisLabelExtend(orient, labels, oldScale, newScale, size, pad) {\n  size = Math.max(size, 0) + pad;\n  if (orient === 'left' || orient === 'top') {\n    size *= -1;\n  }\n  if (orient === 'top' || orient === 'bottom') {\n    dl.extend(labels.properties.enter, {\n      x: oldScale,\n      y: {value: size},\n    });\n    dl.extend(labels.properties.update, {\n      x: newScale,\n      y: {value: size},\n      align: {value: 'center'},\n      baseline: {value: axisBaseline[orient]}\n    });\n  } else {\n    dl.extend(labels.properties.enter, {\n      x: {value: size},\n      y: oldScale,\n    });\n    dl.extend(labels.properties.update, {\n      x: {value: size},\n      y: newScale,\n      align: {value: axisAlign[orient]},\n      baseline: {value: 'middle'}\n    });\n  }\n}\n\nfunction axisTicksExtend(orient, ticks, oldRef, newRef, size, scale, config, offset) {\n  var sign = (orient === 'left' || orient === 'top') ? -1 : 1;\n  if (size === Infinity) {\n    size = (orient === 'top' || orient === 'bottom') ?\n      {field: {group: 'height', level: 2}, mult: -sign, offset: offset*-sign} :\n      {field: {group: 'width',  level: 2}, mult: -sign, offset: offset*-sign};\n  } else {\n    size = {value: sign * size, offset: offset};\n  }\n\n  // Update offset of tick placement to be in between ordinal marks\n  // instead of directly aligned with.\n  if (config.tickPlacement === 'between' && scale.type === ORDINAL) {\n    var rng = scale.range(),\n        tickOffset = 0.5 + (scale.rangeBand() || (rng[1] - rng[0]) / 2);\n    newRef = oldRef = dl.duplicate(newRef);\n    newRef.offset = oldRef.offset = tickOffset;\n  }\n\n  if (orient === 'top' || orient === 'bottom') {\n    dl.extend(ticks.properties.enter, {\n      x:  oldRef,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.update, {\n      x:  newRef,\n      y:  {value: 0},\n      y2: size\n    });\n    dl.extend(ticks.properties.exit, {\n      x:  newRef,\n    });\n  } else {\n    dl.extend(ticks.properties.enter, {\n      x:  {value: 0},\n      x2: size,\n      y:  oldRef\n    });\n    dl.extend(ticks.properties.update, {\n      x:  {value: 0},\n      x2: size,\n      y:  newRef\n    });\n    dl.extend(ticks.properties.exit, {\n      y:  newRef,\n    });\n  }\n}\n\nfunction axisTitleExtend(orient, title, range, offset) {\n  var update = title.properties.update,\n      mid = ~~((range[0] + range[1]) / 2),\n      sign = (orient === 'top' || orient === 'left') ? -1 : 1;\n\n  if (orient === 'bottom' || orient === 'top') {\n    update.x = {value: mid};\n    update.angle = {value: 0};\n    if (offset >= 0) update.y = {value: sign * offset};\n  } else {\n    update.y = {value: mid};\n    update.angle = {value: orient === 'left' ? -90 : 90};\n    if (offset >= 0) update.x = {value: sign * offset};\n  }\n}\n\nfunction axisDomainExtend(orient, domain, range, size) {\n  var path;\n  if (orient === 'top' || orient === 'left') {\n    size = -1 * size;\n  }\n  if (orient === 'bottom' || orient === 'top') {\n    path = 'M' + range[0] + ',' + size + 'V0H' + range[1] + 'V' + size;\n  } else {\n    path = 'M' + size + ',' + range[0] + 'H0V' + range[1] + 'H' + size;\n  }\n  domain.properties.update.path = {value: path};\n}\n\nfunction axisUpdate(item, group, trans) {\n  var o = trans ? {} : item,\n      offset = item.mark.def.offset,\n      orient = item.mark.def.orient,\n      width  = group.width,\n      height = group.height; // TODO fallback to global w,h?\n\n  if (dl.isArray(offset)) {\n    var ofx = offset[0],\n        ofy = offset[1];\n\n    switch (orient) {\n      case 'left':   { Tuple.set(o, 'x', -ofx); Tuple.set(o, 'y', ofy); break; }\n      case 'right':  { Tuple.set(o, 'x', width + ofx); Tuple.set(o, 'y', ofy); break; }\n      case 'bottom': { Tuple.set(o, 'x', ofx); Tuple.set(o, 'y', height + ofy); break; }\n      case 'top':    { Tuple.set(o, 'x', ofx); Tuple.set(o, 'y', -ofy); break; }\n      default:       { Tuple.set(o, 'x', ofx); Tuple.set(o, 'y', ofy); }\n    }\n  } else {\n    if (dl.isObject(offset)) {\n      offset = -group.scale(offset.scale)(offset.value);\n    }\n\n    switch (orient) {\n      case 'left':   { Tuple.set(o, 'x', -offset); Tuple.set(o, 'y', 0); break; }\n      case 'right':  { Tuple.set(o, 'x', width + offset); Tuple.set(o, 'y', 0); break; }\n      case 'bottom': { Tuple.set(o, 'x', 0); Tuple.set(o, 'y', height + offset); break; }\n      case 'top':    { Tuple.set(o, 'x', 0); Tuple.set(o, 'y', -offset); break; }\n      default:       { Tuple.set(o, 'x', 0); Tuple.set(o, 'y', 0); }\n    }\n  }\n\n  if (trans) trans.interpolate(item, o);\n  return true;\n}\n\nfunction axisTicks(config) {\n  return {\n    type: 'rule',\n    interactive: false,\n    key: 'data',\n    properties: {\n      enter: {\n        stroke: {value: config.tickColor},\n        strokeWidth: {value: config.tickWidth},\n        opacity: {value: 1e-6}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction axisTickLabels(config) {\n  return {\n    type: 'text',\n    interactive: true,\n    key: 'data',\n    properties: {\n      enter: {\n        fill: {value: config.tickLabelColor},\n        font: {value: config.tickLabelFont},\n        fontSize: {value: config.tickLabelFontSize},\n        opacity: {value: 1e-6},\n        text: {field: 'label'}\n      },\n      exit: { opacity: {value: 1e-6} },\n      update: { opacity: {value: 1} }\n    }\n  };\n}\n\nfunction axisTitle(config) {\n  return {\n    type: 'text',\n    interactive: true,\n    properties: {\n      enter: {\n        font: {value: config.titleFont},\n        fontSize: {value: config.titleFontSize},\n        fontWeight: {value: config.titleFontWeight},\n        fill: {value: config.titleColor},\n        align: {value: 'center'},\n        baseline: {value: 'middle'},\n        text: {field: 'data'}\n      },\n      update: {}\n    }\n  };\n}\n\nfunction axisDomain(config) {\n  return {\n    type: 'path',\n    interactive: false,\n    properties: {\n      enter: {\n        x: {value: 0.5},\n        y: {value: 0.5},\n        stroke: {value: config.axisColor},\n        strokeWidth: {value: config.axisWidth}\n      },\n      update: {}\n    }\n  };\n}\n\nmodule.exports = axs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/axis.js\n// module id = lKLM\n// module chunks = 0","var util = require('../util');\nvar Aggregator = require('./aggregator');\n\nmodule.exports = function() {\n  // flatten arguments into a single array\n  var args = [].reduce.call(arguments, function(a, x) {\n    return a.concat(util.array(x));\n  }, []);\n  // create and return an aggregator\n  return new Aggregator()\n    .groupby(args)\n    .summarize({'*':'values'});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/aggregate/groupby.js\n// module id = lkhv\n// module chunks = 0","module.exports = function(b) {\n  function noop() { }\n  function add(x,y) { b.add(x, y); }\n\n  return {\n    bounds: function(_) {\n      if (!arguments.length) return b;\n      return (b = _, this);\n    },\n    beginPath: noop,\n    closePath: noop,\n    moveTo: add,\n    lineTo: add,\n    quadraticCurveTo: function(x1, y1, x2, y2) {\n      b.add(x1, y1);\n      b.add(x2, y2);\n    },\n    bezierCurveTo: function(x1, y1, x2, y2, x3, y3) {\n      b.add(x1, y1);\n      b.add(x2, y2);\n      b.add(x3, y3);\n    }\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/util/BoundsContext.js\n// module id = m2QP\n// module chunks = 0","var d3_time = require('d3-time');\n\nvar tempDate = new Date(),\n    baseDate = new Date(0, 0, 1).setFullYear(0), // Jan 1, 0 AD\n    utcBaseDate = new Date(Date.UTC(0, 0, 1)).setUTCFullYear(0);\n\nfunction date(d) {\n  return (tempDate.setTime(+d), tempDate);\n}\n\n// create a time unit entry\nfunction entry(type, date, unit, step, min, max) {\n  var e = {\n    type: type,\n    date: date,\n    unit: unit\n  };\n  if (step) {\n    e.step = step;\n  } else {\n    e.minstep = 1;\n  }\n  if (min != null) e.min = min;\n  if (max != null) e.max = max;\n  return e;\n}\n\nfunction create(type, unit, base, step, min, max) {\n  return entry(type,\n    function(d) { return unit.offset(base, d); },\n    function(d) { return unit.count(base, d); },\n    step, min, max);\n}\n\nvar locale = [\n  create('second', d3_time.second, baseDate),\n  create('minute', d3_time.minute, baseDate),\n  create('hour',   d3_time.hour,   baseDate),\n  create('day',    d3_time.day,    baseDate, [1, 7]),\n  create('month',  d3_time.month,  baseDate, [1, 3, 6]),\n  create('year',   d3_time.year,   baseDate),\n\n  // periodic units\n  entry('seconds',\n    function(d) { return new Date(1970, 0, 1, 0, 0, d); },\n    function(d) { return date(d).getSeconds(); },\n    null, 0, 59\n  ),\n  entry('minutes',\n    function(d) { return new Date(1970, 0, 1, 0, d); },\n    function(d) { return date(d).getMinutes(); },\n    null, 0, 59\n  ),\n  entry('hours',\n    function(d) { return new Date(1970, 0, 1, d); },\n    function(d) { return date(d).getHours(); },\n    null, 0, 23\n  ),\n  entry('weekdays',\n    function(d) { return new Date(1970, 0, 4+d); },\n    function(d) { return date(d).getDay(); },\n    [1], 0, 6\n  ),\n  entry('dates',\n    function(d) { return new Date(1970, 0, d); },\n    function(d) { return date(d).getDate(); },\n    [1], 1, 31\n  ),\n  entry('months',\n    function(d) { return new Date(1970, d % 12, 1); },\n    function(d) { return date(d).getMonth(); },\n    [1], 0, 11\n  )\n];\n\nvar utc = [\n  create('second', d3_time.utcSecond, utcBaseDate),\n  create('minute', d3_time.utcMinute, utcBaseDate),\n  create('hour',   d3_time.utcHour,   utcBaseDate),\n  create('day',    d3_time.utcDay,    utcBaseDate, [1, 7]),\n  create('month',  d3_time.utcMonth,  utcBaseDate, [1, 3, 6]),\n  create('year',   d3_time.utcYear,   utcBaseDate),\n\n  // periodic units\n  entry('seconds',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, 0, 0, d)); },\n    function(d) { return date(d).getUTCSeconds(); },\n    null, 0, 59\n  ),\n  entry('minutes',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, 0, d)); },\n    function(d) { return date(d).getUTCMinutes(); },\n    null, 0, 59\n  ),\n  entry('hours',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, d)); },\n    function(d) { return date(d).getUTCHours(); },\n    null, 0, 23\n  ),\n  entry('weekdays',\n    function(d) { return new Date(Date.UTC(1970, 0, 4+d)); },\n    function(d) { return date(d).getUTCDay(); },\n    [1], 0, 6\n  ),\n  entry('dates',\n    function(d) { return new Date(Date.UTC(1970, 0, d)); },\n    function(d) { return date(d).getUTCDate(); },\n    [1], 1, 31\n  ),\n  entry('months',\n    function(d) { return new Date(Date.UTC(1970, d % 12, 1)); },\n    function(d) { return date(d).getUTCMonth(); },\n    [1], 0, 11\n  )\n];\n\nvar STEPS = [\n  [31536e6, 5],  // 1-year\n  [7776e6, 4],   // 3-month\n  [2592e6, 4],   // 1-month\n  [12096e5, 3],  // 2-week\n  [6048e5, 3],   // 1-week\n  [1728e5, 3],   // 2-day\n  [864e5, 3],    // 1-day\n  [432e5, 2],    // 12-hour\n  [216e5, 2],    // 6-hour\n  [108e5, 2],    // 3-hour\n  [36e5, 2],     // 1-hour\n  [18e5, 1],     // 30-minute\n  [9e5, 1],      // 15-minute\n  [3e5, 1],      // 5-minute\n  [6e4, 1],      // 1-minute\n  [3e4, 0],      // 30-second\n  [15e3, 0],     // 15-second\n  [5e3, 0],      // 5-second\n  [1e3, 0]       // 1-second\n];\n\nfunction find(units, span, minb, maxb) {\n  var step = STEPS[0], i, n, bins;\n\n  for (i=1, n=STEPS.length; i<n; ++i) {\n    step = STEPS[i];\n    if (span > step[0]) {\n      bins = span / step[0];\n      if (bins > maxb) {\n        return units[STEPS[i-1][1]];\n      }\n      if (bins >= minb) {\n        return units[step[1]];\n      }\n    }\n  }\n  return units[STEPS[n-1][1]];\n}\n\nfunction toUnitMap(units) {\n  var map = {}, i, n;\n  for (i=0, n=units.length; i<n; ++i) {\n    map[units[i].type] = units[i];\n  }\n  map.find = function(span, minb, maxb) {\n    return find(units, span, minb, maxb);\n  };\n  return map;\n}\n\nmodule.exports = toUnitMap(locale);\nmodule.exports.utc = toUnitMap(utc);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/time.js\n// module id = mgrV\n// module chunks = 0","var dsv = require('./dsv');\n\nmodule.exports = {\n  json: require('./json'),\n  topojson: require('./topojson'),\n  treejson: require('./treejson'),\n  dsv: dsv,\n  csv: dsv.delimiter(','),\n  tsv: dsv.delimiter('\\t')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/formats/index.js\n// module id = nIY2\n// module chunks = 0","\"use strict\";\nvar bin_1 = require('../../bin');\nvar channel_1 = require('../../channel');\nvar fielddef_1 = require('../../fielddef');\nvar util_1 = require('../../util');\nvar bin;\n(function (bin_2) {\n    function parse(model) {\n        return model.reduce(function (binComponent, fieldDef, channel) {\n            var bin = model.fieldDef(channel).bin;\n            if (bin) {\n                var binTrans = util_1.extend({\n                    type: 'bin',\n                    field: fieldDef.field,\n                    output: {\n                        start: fielddef_1.field(fieldDef, { binSuffix: '_start' }),\n                        mid: fielddef_1.field(fieldDef, { binSuffix: '_mid' }),\n                        end: fielddef_1.field(fieldDef, { binSuffix: '_end' })\n                    }\n                }, typeof bin === 'boolean' ? {} : bin);\n                if (!binTrans.maxbins && !binTrans.step) {\n                    binTrans.maxbins = bin_1.autoMaxBins(channel);\n                }\n                var transform = [binTrans];\n                var isOrdinalColor = model.isOrdinalScale(channel) || channel === channel_1.COLOR;\n                if (isOrdinalColor) {\n                    transform.push({\n                        type: 'formula',\n                        field: fielddef_1.field(fieldDef, { binSuffix: '_range' }),\n                        expr: fielddef_1.field(fieldDef, { datum: true, binSuffix: '_start' }) +\n                            ' + \\'-\\' + ' +\n                            fielddef_1.field(fieldDef, { datum: true, binSuffix: '_end' })\n                    });\n                }\n                var key = util_1.hash(bin) + '_' + fieldDef.field + 'oc:' + isOrdinalColor;\n                binComponent[key] = transform;\n            }\n            return binComponent;\n        }, {});\n    }\n    bin_2.parseUnit = parse;\n    function parseFacet(model) {\n        var binComponent = parse(model);\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source) {\n            util_1.extend(binComponent, childDataComponent.bin);\n            delete childDataComponent.bin;\n        }\n        return binComponent;\n    }\n    bin_2.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var binComponent = parse(model);\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (!childDataComponent.source) {\n                util_1.extend(binComponent, childDataComponent.bin);\n                delete childDataComponent.bin;\n            }\n        });\n        return binComponent;\n    }\n    bin_2.parseLayer = parseLayer;\n    function assemble(component) {\n        return util_1.flatten(util_1.vals(component.bin));\n    }\n    bin_2.assemble = assemble;\n})(bin = exports.bin || (exports.bin = {}));\n//# sourceMappingURL=bin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/bin.js\n// module id = nOes\n// module chunks = 0","var util = require('./util'),\n    type = require('./import/type'),\n    stats = require('./stats'),\n    template = require('./template');\n\nmodule.exports = {\n  table:   formatTable,  // format a data table\n  summary: formatSummary // format a data table summary\n};\n\nvar FMT = {\n  'date':    '|time:\"%m/%d/%Y %H:%M:%S\"',\n  'number':  '|number:\".4f\"',\n  'integer': '|number:\"d\"'\n};\n\nvar POS = {\n  'number':  'left',\n  'integer': 'left'\n};\n\nfunction formatTable(data, opt) {\n  opt = util.extend({separator:' ', minwidth: 8, maxwidth: 15}, opt);\n  var fields = opt.fields || util.keys(data[0]),\n      types = type.all(data);\n\n  if (opt.start || opt.limit) {\n    var a = opt.start || 0,\n        b = opt.limit ? a + opt.limit : data.length;\n    data = data.slice(a, b);\n  }\n\n  // determine char width of fields\n  var lens = fields.map(function(name) {\n    var format = FMT[types[name]] || '',\n        t = template('{{' + name + format + '}}'),\n        l = stats.max(data, function(x) { return t(x).length; });\n    l = Math.max(Math.min(name.length, opt.minwidth), l);\n    return opt.maxwidth > 0 ? Math.min(l, opt.maxwidth) : l;\n  });\n\n  // print header row\n  var head = fields.map(function(name, i) {\n    return util.truncate(util.pad(name, lens[i], 'center'), lens[i]);\n  }).join(opt.separator);\n\n  // build template function for each row\n  var tmpl = template(fields.map(function(name, i) {\n    return '{{' +\n      name +\n      (FMT[types[name]] || '') +\n      ('|pad:' + lens[i] + ',' + (POS[types[name]] || 'right')) +\n      ('|truncate:' + lens[i]) +\n    '}}';\n  }).join(opt.separator));\n\n  // print table\n  return head + \"\\n\" + data.map(tmpl).join('\\n');\n}\n\nfunction formatSummary(s) {\n  s = s ? s.__summary__ ? s : stats.summary(s) : this;\n  var str = [], i, n;\n  for (i=0, n=s.length; i<n; ++i) {\n    str.push('-- ' + s[i].field + ' --');\n    if (s[i].type === 'string' || s[i].distinct < 10) {\n      str.push(printCategoricalProfile(s[i]));\n    } else {\n      str.push(printQuantitativeProfile(s[i]));\n    }\n    str.push('');\n  }\n  return str.join('\\n');\n}\n\nfunction printQuantitativeProfile(p) {\n  return [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'min:      ' + p.min,\n    'max:      ' + p.max,\n    'median:   ' + p.median,\n    'mean:     ' + p.mean,\n    'stdev:    ' + p.stdev,\n    'modeskew: ' + p.modeskew\n  ].join('\\n');\n}\n\nfunction printCategoricalProfile(p) {\n  var list = [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'top values: '\n  ];\n  var u = p.unique;\n  var top = util.keys(u)\n    .sort(function(a,b) { return u[b] - u[a]; })\n    .slice(0, 6)\n    .map(function(v) { return ' \\'' + v + '\\' (' + u[v] + ')'; });\n  return list.concat(top).join('\\n');\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/format-tables.js\n// module id = nXcD\n// module chunks = 0","/*\n  The following expression parser is based on Esprima (http://esprima.org/).\n  Original header comment and license for Esprima is included here:\n\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/* istanbul ignore next */\nmodule.exports = (function() {\n  'use strict';\n\n  var Token,\n      TokenName,\n      Syntax,\n      PropertyKind,\n      Messages,\n      Regex,\n      source,\n      strict,\n      index,\n      lineNumber,\n      lineStart,\n      length,\n      lookahead,\n      state,\n      extra;\n\n  Token = {\n      BooleanLiteral: 1,\n      EOF: 2,\n      Identifier: 3,\n      Keyword: 4,\n      NullLiteral: 5,\n      NumericLiteral: 6,\n      Punctuator: 7,\n      StringLiteral: 8,\n      RegularExpression: 9\n  };\n\n  TokenName = {};\n  TokenName[Token.BooleanLiteral] = 'Boolean';\n  TokenName[Token.EOF] = '<end>';\n  TokenName[Token.Identifier] = 'Identifier';\n  TokenName[Token.Keyword] = 'Keyword';\n  TokenName[Token.NullLiteral] = 'Null';\n  TokenName[Token.NumericLiteral] = 'Numeric';\n  TokenName[Token.Punctuator] = 'Punctuator';\n  TokenName[Token.StringLiteral] = 'String';\n  TokenName[Token.RegularExpression] = 'RegularExpression';\n\n  Syntax = {\n      AssignmentExpression: 'AssignmentExpression',\n      ArrayExpression: 'ArrayExpression',\n      BinaryExpression: 'BinaryExpression',\n      CallExpression: 'CallExpression',\n      ConditionalExpression: 'ConditionalExpression',\n      ExpressionStatement: 'ExpressionStatement',\n      Identifier: 'Identifier',\n      Literal: 'Literal',\n      LogicalExpression: 'LogicalExpression',\n      MemberExpression: 'MemberExpression',\n      ObjectExpression: 'ObjectExpression',\n      Program: 'Program',\n      Property: 'Property',\n      UnaryExpression: 'UnaryExpression'\n  };\n\n  PropertyKind = {\n      Data: 1,\n      Get: 2,\n      Set: 4\n  };\n\n  // Error messages should be identical to V8.\n  Messages = {\n      UnexpectedToken:  'Unexpected token %0',\n      UnexpectedNumber:  'Unexpected number',\n      UnexpectedString:  'Unexpected string',\n      UnexpectedIdentifier:  'Unexpected identifier',\n      UnexpectedReserved:  'Unexpected reserved word',\n      UnexpectedEOS:  'Unexpected end of input',\n      NewlineAfterThrow:  'Illegal newline after throw',\n      InvalidRegExp: 'Invalid regular expression',\n      UnterminatedRegExp:  'Invalid regular expression: missing /',\n      InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n      InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n      MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n      NoCatchOrFinally:  'Missing catch or finally after try',\n      UnknownLabel: 'Undefined label \\'%0\\'',\n      Redeclaration: '%0 \\'%1\\' has already been declared',\n      IllegalContinue: 'Illegal continue statement',\n      IllegalBreak: 'Illegal break statement',\n      IllegalReturn: 'Illegal return statement',\n      StrictModeWith:  'Strict mode code may not include a with statement',\n      StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n      StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n      StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n      StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n      StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n      StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n      StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n      StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n      AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n      AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n      StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n      StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictReservedWord:  'Use of future reserved word in strict mode'\n  };\n\n  // See also tools/generate-unicode-regex.py.\n  Regex = {\n      NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n      NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n  };\n\n  // Ensure the condition is true, otherwise throw an error.\n  // This is only to have a better contract semantic, i.e. another safety net\n  // to catch a logic error. The condition shall be fulfilled in normal case.\n  // Do NOT use this to enforce a certain condition on any user input.\n\n  function assert(condition, message) {\n      if (!condition) {\n          throw new Error('ASSERT: ' + message);\n      }\n  }\n\n  function isDecimalDigit(ch) {\n      return (ch >= 0x30 && ch <= 0x39);   // 0..9\n  }\n\n  function isHexDigit(ch) {\n      return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n  }\n\n  function isOctalDigit(ch) {\n      return '01234567'.indexOf(ch) >= 0;\n  }\n\n  // 7.2 White Space\n\n  function isWhiteSpace(ch) {\n      return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n          (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n  }\n\n  // 7.3 Line Terminators\n\n  function isLineTerminator(ch) {\n      return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n  }\n\n  // 7.6 Identifier Names and Identifiers\n\n  function isIdentifierStart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n  }\n\n  function isIdentifierPart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n  }\n\n  // 7.6.1.2 Future Reserved Words\n\n  function isFutureReservedWord(id) {\n      switch (id) {\n      case 'class':\n      case 'enum':\n      case 'export':\n      case 'extends':\n      case 'import':\n      case 'super':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  function isStrictModeReservedWord(id) {\n      switch (id) {\n      case 'implements':\n      case 'interface':\n      case 'package':\n      case 'private':\n      case 'protected':\n      case 'public':\n      case 'static':\n      case 'yield':\n      case 'let':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  // 7.6.1.1 Keywords\n\n  function isKeyword(id) {\n      if (strict && isStrictModeReservedWord(id)) {\n          return true;\n      }\n\n      // 'const' is specialized as Keyword in V8.\n      // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n      // Some others are from future reserved words.\n\n      switch (id.length) {\n      case 2:\n          return (id === 'if') || (id === 'in') || (id === 'do');\n      case 3:\n          return (id === 'var') || (id === 'for') || (id === 'new') ||\n              (id === 'try') || (id === 'let');\n      case 4:\n          return (id === 'this') || (id === 'else') || (id === 'case') ||\n              (id === 'void') || (id === 'with') || (id === 'enum');\n      case 5:\n          return (id === 'while') || (id === 'break') || (id === 'catch') ||\n              (id === 'throw') || (id === 'const') || (id === 'yield') ||\n              (id === 'class') || (id === 'super');\n      case 6:\n          return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n              (id === 'switch') || (id === 'export') || (id === 'import');\n      case 7:\n          return (id === 'default') || (id === 'finally') || (id === 'extends');\n      case 8:\n          return (id === 'function') || (id === 'continue') || (id === 'debugger');\n      case 10:\n          return (id === 'instanceof');\n      default:\n          return false;\n      }\n  }\n\n  function skipComment() {\n      var ch, start;\n\n      start = (index === 0);\n      while (index < length) {\n          ch = source.charCodeAt(index);\n\n          if (isWhiteSpace(ch)) {\n              ++index;\n          } else if (isLineTerminator(ch)) {\n              ++index;\n              if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                  ++index;\n              }\n              ++lineNumber;\n              lineStart = index;\n              start = true;\n          } else {\n              break;\n          }\n      }\n  }\n\n  function scanHexEscape(prefix) {\n      var i, len, ch, code = 0;\n\n      len = (prefix === 'u') ? 4 : 2;\n      for (i = 0; i < len; ++i) {\n          if (index < length && isHexDigit(source[index])) {\n              ch = source[index++];\n              code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n          } else {\n              return '';\n          }\n      }\n      return String.fromCharCode(code);\n  }\n\n  function scanUnicodeCodePointEscape() {\n      var ch, code, cu1, cu2;\n\n      ch = source[index];\n      code = 0;\n\n      // At least, one hex digit is required.\n      if (ch === '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      while (index < length) {\n          ch = source[index++];\n          if (!isHexDigit(ch)) {\n              break;\n          }\n          code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n      }\n\n      if (code > 0x10FFFF || ch !== '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      // UTF-16 Encoding\n      if (code <= 0xFFFF) {\n          return String.fromCharCode(code);\n      }\n      cu1 = ((code - 0x10000) >> 10) + 0xD800;\n      cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n      return String.fromCharCode(cu1, cu2);\n  }\n\n  function getEscapedIdentifier() {\n      var ch, id;\n\n      ch = source.charCodeAt(index++);\n      id = String.fromCharCode(ch);\n\n      // '\\u' (U+005C, U+0075) denotes an escaped character.\n      if (ch === 0x5C) {\n          if (source.charCodeAt(index) !== 0x75) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          ++index;\n          ch = scanHexEscape('u');\n          if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          id = ch;\n      }\n\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (!isIdentifierPart(ch)) {\n              break;\n          }\n          ++index;\n          id += String.fromCharCode(ch);\n\n          // '\\u' (U+005C, U+0075) denotes an escaped character.\n          if (ch === 0x5C) {\n              id = id.substr(0, id.length - 1);\n              if (source.charCodeAt(index) !== 0x75) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              ++index;\n              ch = scanHexEscape('u');\n              if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              id += ch;\n          }\n      }\n\n      return id;\n  }\n\n  function getIdentifier() {\n      var start, ch;\n\n      start = index++;\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (ch === 0x5C) {\n              // Blackslash (U+005C) marks Unicode escape sequence.\n              index = start;\n              return getEscapedIdentifier();\n          }\n          if (isIdentifierPart(ch)) {\n              ++index;\n          } else {\n              break;\n          }\n      }\n\n      return source.slice(start, index);\n  }\n\n  function scanIdentifier() {\n      var start, id, type;\n\n      start = index;\n\n      // Backslash (U+005C) starts an escaped character.\n      id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n      // There is no keyword or literal with only one character.\n      // Thus, it must be an identifier.\n      if (id.length === 1) {\n          type = Token.Identifier;\n      } else if (isKeyword(id)) {\n          type = Token.Keyword;\n      } else if (id === 'null') {\n          type = Token.NullLiteral;\n      } else if (id === 'true' || id === 'false') {\n          type = Token.BooleanLiteral;\n      } else {\n          type = Token.Identifier;\n      }\n\n      return {\n          type: type,\n          value: id,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.7 Punctuators\n\n  function scanPunctuator() {\n      var start = index,\n          code = source.charCodeAt(index),\n          code2,\n          ch1 = source[index],\n          ch2,\n          ch3,\n          ch4;\n\n      switch (code) {\n\n      // Check for most common single-character punctuators.\n      case 0x2E:  // . dot\n      case 0x28:  // ( open bracket\n      case 0x29:  // ) close bracket\n      case 0x3B:  // ; semicolon\n      case 0x2C:  // , comma\n      case 0x7B:  // { open curly brace\n      case 0x7D:  // } close curly brace\n      case 0x5B:  // [\n      case 0x5D:  // ]\n      case 0x3A:  // :\n      case 0x3F:  // ?\n      case 0x7E:  // ~\n          ++index;\n          if (extra.tokenize) {\n              if (code === 0x28) {\n                  extra.openParenToken = extra.tokens.length;\n              } else if (code === 0x7B) {\n                  extra.openCurlyToken = extra.tokens.length;\n              }\n          }\n          return {\n              type: Token.Punctuator,\n              value: String.fromCharCode(code),\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n\n      default:\n          code2 = source.charCodeAt(index + 1);\n\n          // '=' (U+003D) marks an assignment or comparison operator.\n          if (code2 === 0x3D) {\n              switch (code) {\n              case 0x2B:  // +\n              case 0x2D:  // -\n              case 0x2F:  // /\n              case 0x3C:  // <\n              case 0x3E:  // >\n              case 0x5E:  // ^\n              case 0x7C:  // |\n              case 0x25:  // %\n              case 0x26:  // &\n              case 0x2A:  // *\n                  index += 2;\n                  return {\n                      type: Token.Punctuator,\n                      value: String.fromCharCode(code) + String.fromCharCode(code2),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n\n              case 0x21: // !\n              case 0x3D: // =\n                  index += 2;\n\n                  // !== and ===\n                  if (source.charCodeAt(index) === 0x3D) {\n                      ++index;\n                  }\n                  return {\n                      type: Token.Punctuator,\n                      value: source.slice(start, index),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n              }\n          }\n      }\n\n      // 4-character punctuator: >>>=\n\n      ch4 = source.substr(index, 4);\n\n      if (ch4 === '>>>=') {\n          index += 4;\n          return {\n              type: Token.Punctuator,\n              value: ch4,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 3-character punctuators: === !== >>> <<= >>=\n\n      ch3 = ch4.substr(0, 3);\n\n      if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n          index += 3;\n          return {\n              type: Token.Punctuator,\n              value: ch3,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // Other 2-character punctuators: ++ -- << >> && ||\n      ch2 = ch3.substr(0, 2);\n\n      if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n          index += 2;\n          return {\n              type: Token.Punctuator,\n              value: ch2,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 1-character punctuators: < > = ! + - * % & | ^ /\n\n      if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n          ++index;\n          return {\n              type: Token.Punctuator,\n              value: ch1,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n  }\n\n  // 7.8.3 Numeric Literals\n\n  function scanHexLiteral(start) {\n      var number = '';\n\n      while (index < length) {\n          if (!isHexDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (number.length === 0) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt('0x' + number, 16),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanOctalLiteral(start) {\n      var number = '0' + source[index++];\n      while (index < length) {\n          if (!isOctalDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt(number, 8),\n          octal: true,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanNumericLiteral() {\n      var number, start, ch;\n\n      ch = source[index];\n      assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n          'Numeric literal must start with a decimal digit or a decimal point');\n\n      start = index;\n      number = '';\n      if (ch !== '.') {\n          number = source[index++];\n          ch = source[index];\n\n          // Hex number starts with '0x'.\n          // Octal number starts with '0'.\n          if (number === '0') {\n              if (ch === 'x' || ch === 'X') {\n                  ++index;\n                  return scanHexLiteral(start);\n              }\n              if (isOctalDigit(ch)) {\n                  return scanOctalLiteral(start);\n              }\n\n              // decimal number starts with '0' such as '09' is illegal.\n              if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          }\n\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === '.') {\n          number += source[index++];\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === 'e' || ch === 'E') {\n          number += source[index++];\n\n          ch = source[index];\n          if (ch === '+' || ch === '-') {\n              number += source[index++];\n          }\n          if (isDecimalDigit(source.charCodeAt(index))) {\n              while (isDecimalDigit(source.charCodeAt(index))) {\n                  number += source[index++];\n              }\n          } else {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseFloat(number),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.8.4 String Literals\n\n  function scanStringLiteral() {\n      var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n      startLineNumber = lineNumber;\n      startLineStart = lineStart;\n\n      quote = source[index];\n      assert((quote === '\\'' || quote === '\"'),\n          'String literal must starts with a quote');\n\n      start = index;\n      ++index;\n\n      while (index < length) {\n          ch = source[index++];\n\n          if (ch === quote) {\n              quote = '';\n              break;\n          } else if (ch === '\\\\') {\n              ch = source[index++];\n              if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                  switch (ch) {\n                  case 'u':\n                  case 'x':\n                      if (source[index] === '{') {\n                          ++index;\n                          str += scanUnicodeCodePointEscape();\n                      } else {\n                          restore = index;\n                          unescaped = scanHexEscape(ch);\n                          if (unescaped) {\n                              str += unescaped;\n                          } else {\n                              index = restore;\n                              str += ch;\n                          }\n                      }\n                      break;\n                  case 'n':\n                      str += '\\n';\n                      break;\n                  case 'r':\n                      str += '\\r';\n                      break;\n                  case 't':\n                      str += '\\t';\n                      break;\n                  case 'b':\n                      str += '\\b';\n                      break;\n                  case 'f':\n                      str += '\\f';\n                      break;\n                  case 'v':\n                      str += '\\x0B';\n                      break;\n\n                  default:\n                      if (isOctalDigit(ch)) {\n                          code = '01234567'.indexOf(ch);\n\n                          // \\0 is not octal escape sequence\n                          if (code !== 0) {\n                              octal = true;\n                          }\n\n                          if (index < length && isOctalDigit(source[index])) {\n                              octal = true;\n                              code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                              // 3 digits are only allowed when string starts\n                              // with 0, 1, 2, 3\n                              if ('0123'.indexOf(ch) >= 0 &&\n                                      index < length &&\n                                      isOctalDigit(source[index])) {\n                                  code = code * 8 + '01234567'.indexOf(source[index++]);\n                              }\n                          }\n                          str += String.fromCharCode(code);\n                      } else {\n                          str += ch;\n                      }\n                      break;\n                  }\n              } else {\n                  ++lineNumber;\n                  if (ch ===  '\\r' && source[index] === '\\n') {\n                      ++index;\n                  }\n                  lineStart = index;\n              }\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              break;\n          } else {\n              str += ch;\n          }\n      }\n\n      if (quote !== '') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.StringLiteral,\n          value: str,\n          octal: octal,\n          startLineNumber: startLineNumber,\n          startLineStart: startLineStart,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function testRegExp(pattern, flags) {\n      var tmp = pattern,\n          value;\n\n      if (flags.indexOf('u') >= 0) {\n          // Replace each astral symbol and every Unicode code point\n          // escape sequence with a single ASCII symbol to avoid throwing on\n          // regular expressions that are only valid in combination with the\n          // `/u` flag.\n          // Note: replacing with the ASCII symbol `x` might cause false\n          // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n          // perfectly valid pattern that is equivalent to `[a-b]`, but it\n          // would be replaced by `[x-b]` which throws an error.\n          tmp = tmp\n              .replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function ($0, $1) {\n                  if (parseInt($1, 16) <= 0x10FFFF) {\n                      return 'x';\n                  }\n                  throwError({}, Messages.InvalidRegExp);\n              })\n              .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n      }\n\n      // First, detect invalid regular expressions.\n      try {\n          value = new RegExp(tmp);\n      } catch (e) {\n          throwError({}, Messages.InvalidRegExp);\n      }\n\n      // Return a regular expression object for this pattern-flag pair, or\n      // `null` in case the current environment doesn't support the flags it\n      // uses.\n      try {\n          return new RegExp(pattern, flags);\n      } catch (exception) {\n          return null;\n      }\n  }\n\n  function scanRegExpBody() {\n      var ch, str, classMarker, terminated, body;\n\n      ch = source[index];\n      assert(ch === '/', 'Regular expression literal must start with a slash');\n      str = source[index++];\n\n      classMarker = false;\n      terminated = false;\n      while (index < length) {\n          ch = source[index++];\n          str += ch;\n          if (ch === '\\\\') {\n              ch = source[index++];\n              // ECMA-262 7.8.5\n              if (isLineTerminator(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnterminatedRegExp);\n              }\n              str += ch;\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnterminatedRegExp);\n          } else if (classMarker) {\n              if (ch === ']') {\n                  classMarker = false;\n              }\n          } else {\n              if (ch === '/') {\n                  terminated = true;\n                  break;\n              } else if (ch === '[') {\n                  classMarker = true;\n              }\n          }\n      }\n\n      if (!terminated) {\n          throwError({}, Messages.UnterminatedRegExp);\n      }\n\n      // Exclude leading and trailing slash.\n      body = str.substr(1, str.length - 2);\n      return {\n          value: body,\n          literal: str\n      };\n  }\n\n  function scanRegExpFlags() {\n      var ch, str, flags, restore;\n\n      str = '';\n      flags = '';\n      while (index < length) {\n          ch = source[index];\n          if (!isIdentifierPart(ch.charCodeAt(0))) {\n              break;\n          }\n\n          ++index;\n          if (ch === '\\\\' && index < length) {\n              ch = source[index];\n              if (ch === 'u') {\n                  ++index;\n                  restore = index;\n                  ch = scanHexEscape('u');\n                  if (ch) {\n                      flags += ch;\n                      for (str += '\\\\u'; restore < index; ++restore) {\n                          str += source[restore];\n                      }\n                  } else {\n                      index = restore;\n                      flags += 'u';\n                      str += '\\\\u';\n                  }\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              } else {\n                  str += '\\\\';\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          } else {\n              flags += ch;\n              str += ch;\n          }\n      }\n\n      return {\n          value: flags,\n          literal: str\n      };\n  }\n\n  function scanRegExp() {\n      var start, body, flags, value;\n\n      lookahead = null;\n      skipComment();\n      start = index;\n\n      body = scanRegExpBody();\n      flags = scanRegExpFlags();\n      value = testRegExp(body.value, flags.value);\n\n      if (extra.tokenize) {\n          return {\n              type: Token.RegularExpression,\n              value: value,\n              regex: {\n                  pattern: body.value,\n                  flags: flags.value\n              },\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      return {\n          literal: body.literal + flags.literal,\n          value: value,\n          regex: {\n              pattern: body.value,\n              flags: flags.value\n          },\n          start: start,\n          end: index\n      };\n  }\n\n  function collectRegex() {\n      var pos, loc, regex, token;\n\n      skipComment();\n\n      pos = index;\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      regex = scanRegExp();\n\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (!extra.tokenize) {\n          // Pop the previous token, which is likely '/' or '/='\n          if (extra.tokens.length > 0) {\n              token = extra.tokens[extra.tokens.length - 1];\n              if (token.range[0] === pos && token.type === 'Punctuator') {\n                  if (token.value === '/' || token.value === '/=') {\n                      extra.tokens.pop();\n                  }\n              }\n          }\n\n          extra.tokens.push({\n              type: 'RegularExpression',\n              value: regex.literal,\n              regex: regex.regex,\n              range: [pos, index],\n              loc: loc\n          });\n      }\n\n      return regex;\n  }\n\n  function isIdentifierName(token) {\n      return token.type === Token.Identifier ||\n          token.type === Token.Keyword ||\n          token.type === Token.BooleanLiteral ||\n          token.type === Token.NullLiteral;\n  }\n\n  function advanceSlash() {\n      var prevToken,\n          checkToken;\n      // Using the following algorithm:\n      // https://github.com/mozilla/sweet.js/wiki/design\n      prevToken = extra.tokens[extra.tokens.length - 1];\n      if (!prevToken) {\n          // Nothing before that: it cannot be a division.\n          return collectRegex();\n      }\n      if (prevToken.type === 'Punctuator') {\n          if (prevToken.value === ']') {\n              return scanPunctuator();\n          }\n          if (prevToken.value === ')') {\n              checkToken = extra.tokens[extra.openParenToken - 1];\n              if (checkToken &&\n                      checkToken.type === 'Keyword' &&\n                      (checkToken.value === 'if' ||\n                       checkToken.value === 'while' ||\n                       checkToken.value === 'for' ||\n                       checkToken.value === 'with')) {\n                  return collectRegex();\n              }\n              return scanPunctuator();\n          }\n          if (prevToken.value === '}') {\n              // Dividing a function by anything makes little sense,\n              // but we have to check for that.\n              if (extra.tokens[extra.openCurlyToken - 3] &&\n                      extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                  // Anonymous function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 4];\n                  if (!checkToken) {\n                      return scanPunctuator();\n                  }\n              } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                      extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                  // Named function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 5];\n                  if (!checkToken) {\n                      return collectRegex();\n                  }\n              } else {\n                  return scanPunctuator();\n              }\n              return scanPunctuator();\n          }\n          return collectRegex();\n      }\n      if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n          return collectRegex();\n      }\n      return scanPunctuator();\n  }\n\n  function advance() {\n      var ch;\n\n      skipComment();\n\n      if (index >= length) {\n          return {\n              type: Token.EOF,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: index,\n              end: index\n          };\n      }\n\n      ch = source.charCodeAt(index);\n\n      if (isIdentifierStart(ch)) {\n          return scanIdentifier();\n      }\n\n      // Very common: ( and ) and ;\n      if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n          return scanPunctuator();\n      }\n\n      // String literal starts with single quote (U+0027) or double quote (U+0022).\n      if (ch === 0x27 || ch === 0x22) {\n          return scanStringLiteral();\n      }\n\n\n      // Dot (.) U+002E can also start a floating-point number, hence the need\n      // to check the next character.\n      if (ch === 0x2E) {\n          if (isDecimalDigit(source.charCodeAt(index + 1))) {\n              return scanNumericLiteral();\n          }\n          return scanPunctuator();\n      }\n\n      if (isDecimalDigit(ch)) {\n          return scanNumericLiteral();\n      }\n\n      // Slash (/) U+002F can also start a regex.\n      if (extra.tokenize && ch === 0x2F) {\n          return advanceSlash();\n      }\n\n      return scanPunctuator();\n  }\n\n  function collectToken() {\n      var loc, token, value, entry;\n\n      skipComment();\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      token = advance();\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (token.type !== Token.EOF) {\n          value = source.slice(token.start, token.end);\n          entry = {\n              type: TokenName[token.type],\n              value: value,\n              range: [token.start, token.end],\n              loc: loc\n          };\n          if (token.regex) {\n              entry.regex = {\n                  pattern: token.regex.pattern,\n                  flags: token.regex.flags\n              };\n          }\n          extra.tokens.push(entry);\n      }\n\n      return token;\n  }\n\n  function lex() {\n      var token;\n\n      token = lookahead;\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      return token;\n  }\n\n  function peek() {\n      var pos, line, start;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n  }\n\n  function Position() {\n      this.line = lineNumber;\n      this.column = index - lineStart;\n  }\n\n  function SourceLocation() {\n      this.start = new Position();\n      this.end = null;\n  }\n\n  function WrappingSourceLocation(startToken) {\n      if (startToken.type === Token.StringLiteral) {\n          this.start = {\n              line: startToken.startLineNumber,\n              column: startToken.start - startToken.startLineStart\n          };\n      } else {\n          this.start = {\n              line: startToken.lineNumber,\n              column: startToken.start - startToken.lineStart\n          };\n      }\n      this.end = null;\n  }\n\n  function Node() {\n      // Skip comment.\n      index = lookahead.start;\n      if (lookahead.type === Token.StringLiteral) {\n          lineNumber = lookahead.startLineNumber;\n          lineStart = lookahead.startLineStart;\n      } else {\n          lineNumber = lookahead.lineNumber;\n          lineStart = lookahead.lineStart;\n      }\n      if (extra.range) {\n          this.range = [index, 0];\n      }\n      if (extra.loc) {\n          this.loc = new SourceLocation();\n      }\n  }\n\n  function WrappingNode(startToken) {\n      if (extra.range) {\n          this.range = [startToken.start, 0];\n      }\n      if (extra.loc) {\n          this.loc = new WrappingSourceLocation(startToken);\n      }\n  }\n\n  WrappingNode.prototype = Node.prototype = {\n\n      finish: function () {\n          if (extra.range) {\n              this.range[1] = index;\n          }\n          if (extra.loc) {\n              this.loc.end = new Position();\n              if (extra.source) {\n                  this.loc.source = extra.source;\n              }\n          }\n      },\n\n      finishArrayExpression: function (elements) {\n          this.type = Syntax.ArrayExpression;\n          this.elements = elements;\n          this.finish();\n          return this;\n      },\n\n      finishAssignmentExpression: function (operator, left, right) {\n          this.type = Syntax.AssignmentExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishBinaryExpression: function (operator, left, right) {\n          this.type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression : Syntax.BinaryExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishCallExpression: function (callee, args) {\n          this.type = Syntax.CallExpression;\n          this.callee = callee;\n          this.arguments = args;\n          this.finish();\n          return this;\n      },\n\n      finishConditionalExpression: function (test, consequent, alternate) {\n          this.type = Syntax.ConditionalExpression;\n          this.test = test;\n          this.consequent = consequent;\n          this.alternate = alternate;\n          this.finish();\n          return this;\n      },\n\n      finishExpressionStatement: function (expression) {\n          this.type = Syntax.ExpressionStatement;\n          this.expression = expression;\n          this.finish();\n          return this;\n      },\n\n      finishIdentifier: function (name) {\n          this.type = Syntax.Identifier;\n          this.name = name;\n          this.finish();\n          return this;\n      },\n\n      finishLiteral: function (token) {\n          this.type = Syntax.Literal;\n          this.value = token.value;\n          this.raw = source.slice(token.start, token.end);\n          if (token.regex) {\n              if (this.raw == '//') {\n                this.raw = '/(?:)/';\n              }\n              this.regex = token.regex;\n          }\n          this.finish();\n          return this;\n      },\n\n      finishMemberExpression: function (accessor, object, property) {\n          this.type = Syntax.MemberExpression;\n          this.computed = accessor === '[';\n          this.object = object;\n          this.property = property;\n          this.finish();\n          return this;\n      },\n\n      finishObjectExpression: function (properties) {\n          this.type = Syntax.ObjectExpression;\n          this.properties = properties;\n          this.finish();\n          return this;\n      },\n\n      finishProgram: function (body) {\n          this.type = Syntax.Program;\n          this.body = body;\n          this.finish();\n          return this;\n      },\n\n      finishProperty: function (kind, key, value) {\n          this.type = Syntax.Property;\n          this.key = key;\n          this.value = value;\n          this.kind = kind;\n          this.finish();\n          return this;\n      },\n\n      finishUnaryExpression: function (operator, argument) {\n          this.type = Syntax.UnaryExpression;\n          this.operator = operator;\n          this.argument = argument;\n          this.prefix = true;\n          this.finish();\n          return this;\n      }\n  };\n\n  // Return true if there is a line terminator before the next token.\n\n  function peekLineTerminator() {\n      var pos, line, start, found;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      skipComment();\n      found = lineNumber !== line;\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n\n      return found;\n  }\n\n  // Throw an exception\n\n  function throwError(token, messageFormat) {\n      var error,\n          args = Array.prototype.slice.call(arguments, 2),\n          msg = messageFormat.replace(\n              /%(\\d)/g,\n              function (whole, index) {\n                  assert(index < args.length, 'Message reference must be in range');\n                  return args[index];\n              }\n          );\n\n      if (typeof token.lineNumber === 'number') {\n          error = new Error('Line ' + token.lineNumber + ': ' + msg);\n          error.index = token.start;\n          error.lineNumber = token.lineNumber;\n          error.column = token.start - lineStart + 1;\n      } else {\n          error = new Error('Line ' + lineNumber + ': ' + msg);\n          error.index = index;\n          error.lineNumber = lineNumber;\n          error.column = index - lineStart + 1;\n      }\n\n      error.description = msg;\n      throw error;\n  }\n\n  function throwErrorTolerant() {\n      try {\n          throwError.apply(null, arguments);\n      } catch (e) {\n          if (extra.errors) {\n              extra.errors.push(e);\n          } else {\n              throw e;\n          }\n      }\n  }\n\n\n  // Throw an exception because of the token.\n\n  function throwUnexpected(token) {\n      if (token.type === Token.EOF) {\n          throwError(token, Messages.UnexpectedEOS);\n      }\n\n      if (token.type === Token.NumericLiteral) {\n          throwError(token, Messages.UnexpectedNumber);\n      }\n\n      if (token.type === Token.StringLiteral) {\n          throwError(token, Messages.UnexpectedString);\n      }\n\n      if (token.type === Token.Identifier) {\n          throwError(token, Messages.UnexpectedIdentifier);\n      }\n\n      if (token.type === Token.Keyword) {\n          if (isFutureReservedWord(token.value)) {\n              throwError(token, Messages.UnexpectedReserved);\n          } else if (strict && isStrictModeReservedWord(token.value)) {\n              throwErrorTolerant(token, Messages.StrictReservedWord);\n              return;\n          }\n          throwError(token, Messages.UnexpectedToken, token.value);\n      }\n\n      // BooleanLiteral, NullLiteral, or Punctuator.\n      throwError(token, Messages.UnexpectedToken, token.value);\n  }\n\n  // Expect the next token to match the specified punctuator.\n  // If not, an exception will be thrown.\n\n  function expect(value) {\n      var token = lex();\n      if (token.type !== Token.Punctuator || token.value !== value) {\n          throwUnexpected(token);\n      }\n  }\n\n  /**\n   * @name expectTolerant\n   * @description Quietly expect the given token value when in tolerant mode, otherwise delegates\n   * to <code>expect(value)</code>\n   * @param {String} value The value we are expecting the lookahead token to have\n   * @since 2.0\n   */\n  function expectTolerant(value) {\n      if (extra.errors) {\n          var token = lookahead;\n          if (token.type !== Token.Punctuator && token.value !== value) {\n              throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n          } else {\n              lex();\n          }\n      } else {\n          expect(value);\n      }\n  }\n\n  // Return true if the next token matches the specified punctuator.\n\n  function match(value) {\n      return lookahead.type === Token.Punctuator && lookahead.value === value;\n  }\n\n  // Return true if the next token matches the specified keyword\n\n  function matchKeyword(keyword) {\n      return lookahead.type === Token.Keyword && lookahead.value === keyword;\n  }\n\n  function consumeSemicolon() {\n      var line;\n\n      // Catch the very common case first: immediately a semicolon (U+003B).\n      if (source.charCodeAt(index) === 0x3B || match(';')) {\n          lex();\n          return;\n      }\n\n      line = lineNumber;\n      skipComment();\n      if (lineNumber !== line) {\n          return;\n      }\n\n      if (lookahead.type !== Token.EOF && !match('}')) {\n          throwUnexpected(lookahead);\n      }\n  }\n\n  // 11.1.4 Array Initialiser\n\n  function parseArrayInitialiser() {\n      var elements = [], node = new Node();\n\n      expect('[');\n\n      while (!match(']')) {\n          if (match(',')) {\n              lex();\n              elements.push(null);\n          } else {\n              elements.push(parseAssignmentExpression());\n\n              if (!match(']')) {\n                  expect(',');\n              }\n          }\n      }\n\n      lex();\n\n      return node.finishArrayExpression(elements);\n  }\n\n  // 11.1.5 Object Initialiser\n\n  function parseObjectPropertyKey() {\n      var token, node = new Node();\n\n      token = lex();\n\n      // Note: This function is called only from parseObjectProperty(), where\n      // EOF and Punctuator tokens are already filtered out.\n\n      if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n          if (strict && token.octal) {\n              throwErrorTolerant(token, Messages.StrictOctalLiteral);\n          }\n          return node.finishLiteral(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseObjectProperty() {\n      var token, key, id, value, node = new Node();\n\n      token = lookahead;\n\n      if (token.type === Token.Identifier) {\n          id = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', id, value);\n      }\n      if (token.type === Token.EOF || token.type === Token.Punctuator) {\n          throwUnexpected(token);\n      } else {\n          key = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', key, value);\n      }\n  }\n\n  function parseObjectInitialiser() {\n      var properties = [], property, name, key, kind, map = {}, toString = String, node = new Node();\n\n      expect('{');\n\n      while (!match('}')) {\n          property = parseObjectProperty();\n\n          if (property.key.type === Syntax.Identifier) {\n              name = property.key.name;\n          } else {\n              name = toString(property.key.value);\n          }\n          kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n          key = '$' + name;\n          if (Object.prototype.hasOwnProperty.call(map, key)) {\n              if (map[key] === PropertyKind.Data) {\n                  if (strict && kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                  } else if (kind !== PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  }\n              } else {\n                  if (kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  } else if (map[key] & kind) {\n                      throwErrorTolerant({}, Messages.AccessorGetSet);\n                  }\n              }\n              map[key] |= kind;\n          } else {\n              map[key] = kind;\n          }\n\n          properties.push(property);\n\n          if (!match('}')) {\n              expectTolerant(',');\n          }\n      }\n\n      expect('}');\n\n      return node.finishObjectExpression(properties);\n  }\n\n  // 11.1.6 The Grouping Operator\n\n  function parseGroupExpression() {\n      var expr;\n\n      expect('(');\n\n      ++state.parenthesisCount;\n\n      expr = parseExpression();\n\n      expect(')');\n\n      return expr;\n  }\n\n\n  // 11.1 Primary Expressions\n\n  var legalKeywords = {\"if\":1, \"this\":1};\n\n  function parsePrimaryExpression() {\n      var type, token, expr, node;\n\n      if (match('(')) {\n          return parseGroupExpression();\n      }\n\n      if (match('[')) {\n          return parseArrayInitialiser();\n      }\n\n      if (match('{')) {\n          return parseObjectInitialiser();\n      }\n\n      type = lookahead.type;\n      node = new Node();\n\n      if (type === Token.Identifier || legalKeywords[lookahead.value]) {\n          expr = node.finishIdentifier(lex().value);\n      } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n          if (strict && lookahead.octal) {\n              throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n          }\n          expr = node.finishLiteral(lex());\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\");\n      } else if (type === Token.BooleanLiteral) {\n          token = lex();\n          token.value = (token.value === 'true');\n          expr = node.finishLiteral(token);\n      } else if (type === Token.NullLiteral) {\n          token = lex();\n          token.value = null;\n          expr = node.finishLiteral(token);\n      } else if (match('/') || match('/=')) {\n          if (typeof extra.tokens !== 'undefined') {\n              expr = node.finishLiteral(collectRegex());\n          } else {\n              expr = node.finishLiteral(scanRegExp());\n          }\n          peek();\n      } else {\n          throwUnexpected(lex());\n      }\n\n      return expr;\n  }\n\n  // 11.2 Left-Hand-Side Expressions\n\n  function parseArguments() {\n      var args = [];\n\n      expect('(');\n\n      if (!match(')')) {\n          while (index < length) {\n              args.push(parseAssignmentExpression());\n              if (match(')')) {\n                  break;\n              }\n              expectTolerant(',');\n          }\n      }\n\n      expect(')');\n\n      return args;\n  }\n\n  function parseNonComputedProperty() {\n      var token, node = new Node();\n\n      token = lex();\n\n      if (!isIdentifierName(token)) {\n          throwUnexpected(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseNonComputedMember() {\n      expect('.');\n\n      return parseNonComputedProperty();\n  }\n\n  function parseComputedMember() {\n      var expr;\n\n      expect('[');\n\n      expr = parseExpression();\n\n      expect(']');\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpressionAllowCall() {\n      var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n      startToken = lookahead;\n      state.allowIn = true;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else if (match('(')) {\n              args = parseArguments();\n              expr = new WrappingNode(startToken).finishCallExpression(expr, args);\n          } else if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else {\n              break;\n          }\n      }\n      state.allowIn = previousAllowIn;\n\n      return expr;\n  }\n\n  // 11.3 Postfix Expressions\n\n  function parsePostfixExpression() {\n      var expr = parseLeftHandSideExpressionAllowCall();\n\n      if (lookahead.type === Token.Punctuator) {\n          if ((match('++') || match('--')) && !peekLineTerminator()) {\n              throw new Error(\"Disabled.\");\n          }\n      }\n\n      return expr;\n  }\n\n  // 11.4 Unary Operators\n\n  function parseUnaryExpression() {\n      var token, expr, startToken;\n\n      if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n          expr = parsePostfixExpression();\n      } else if (match('++') || match('--')) {\n          throw new Error(\"Disabled.\");\n      } else if (match('+') || match('-') || match('~') || match('!')) {\n          startToken = lookahead;\n          token = lex();\n          expr = parseUnaryExpression();\n          expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);\n      } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n          throw new Error(\"Disabled.\");\n      } else {\n          expr = parsePostfixExpression();\n      }\n\n      return expr;\n  }\n\n  function binaryPrecedence(token, allowIn) {\n      var prec = 0;\n\n      if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n          return 0;\n      }\n\n      switch (token.value) {\n      case '||':\n          prec = 1;\n          break;\n\n      case '&&':\n          prec = 2;\n          break;\n\n      case '|':\n          prec = 3;\n          break;\n\n      case '^':\n          prec = 4;\n          break;\n\n      case '&':\n          prec = 5;\n          break;\n\n      case '==':\n      case '!=':\n      case '===':\n      case '!==':\n          prec = 6;\n          break;\n\n      case '<':\n      case '>':\n      case '<=':\n      case '>=':\n      case 'instanceof':\n          prec = 7;\n          break;\n\n      case 'in':\n          prec = allowIn ? 7 : 0;\n          break;\n\n      case '<<':\n      case '>>':\n      case '>>>':\n          prec = 8;\n          break;\n\n      case '+':\n      case '-':\n          prec = 9;\n          break;\n\n      case '*':\n      case '/':\n      case '%':\n          prec = 11;\n          break;\n\n      default:\n          break;\n      }\n\n      return prec;\n  }\n\n  // 11.5 Multiplicative Operators\n  // 11.6 Additive Operators\n  // 11.7 Bitwise Shift Operators\n  // 11.8 Relational Operators\n  // 11.9 Equality Operators\n  // 11.10 Binary Bitwise Operators\n  // 11.11 Binary Logical Operators\n\n  function parseBinaryExpression() {\n      var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n      marker = lookahead;\n      left = parseUnaryExpression();\n\n      token = lookahead;\n      prec = binaryPrecedence(token, state.allowIn);\n      if (prec === 0) {\n          return left;\n      }\n      token.prec = prec;\n      lex();\n\n      markers = [marker, lookahead];\n      right = parseUnaryExpression();\n\n      stack = [left, token, right];\n\n      while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n          // Reduce: make a binary expression from the three topmost entries.\n          while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n              right = stack.pop();\n              operator = stack.pop().value;\n              left = stack.pop();\n              markers.pop();\n              expr = new WrappingNode(markers[markers.length - 1]).finishBinaryExpression(operator, left, right);\n              stack.push(expr);\n          }\n\n          // Shift.\n          token = lex();\n          token.prec = prec;\n          stack.push(token);\n          markers.push(lookahead);\n          expr = parseUnaryExpression();\n          stack.push(expr);\n      }\n\n      // Final reduce to clean-up the stack.\n      i = stack.length - 1;\n      expr = stack[i];\n      markers.pop();\n      while (i > 1) {\n          expr = new WrappingNode(markers.pop()).finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n          i -= 2;\n      }\n\n      return expr;\n  }\n\n  // 11.12 Conditional Operator\n\n  function parseConditionalExpression() {\n      var expr, previousAllowIn, consequent, alternate, startToken;\n\n      startToken = lookahead;\n\n      expr = parseBinaryExpression();\n\n      if (match('?')) {\n          lex();\n          previousAllowIn = state.allowIn;\n          state.allowIn = true;\n          consequent = parseAssignmentExpression();\n          state.allowIn = previousAllowIn;\n          expect(':');\n          alternate = parseAssignmentExpression();\n\n          expr = new WrappingNode(startToken).finishConditionalExpression(expr, consequent, alternate);\n      }\n\n      return expr;\n  }\n\n  // 11.13 Assignment Operators\n\n  function parseAssignmentExpression() {\n      var oldParenthesisCount, token, expr, startToken;\n\n      oldParenthesisCount = state.parenthesisCount;\n\n      startToken = lookahead;\n      token = lookahead;\n\n      expr = parseConditionalExpression();\n\n      return expr;\n  }\n\n  // 11.14 Comma Operator\n\n  function parseExpression() {\n      var expr = parseAssignmentExpression();\n\n      if (match(',')) {\n          throw new Error(\"Disabled.\"); // no sequence expressions\n      }\n\n      return expr;\n  }\n\n  // 12.4 Expression Statement\n\n  function parseExpressionStatement(node) {\n      var expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 12 Statements\n\n  function parseStatement() {\n      var type = lookahead.type,\n          expr,\n          node;\n\n      if (type === Token.EOF) {\n          throwUnexpected(lookahead);\n      }\n\n      if (type === Token.Punctuator && lookahead.value === '{') {\n          throw new Error(\"Disabled.\"); // block statement\n      }\n\n      node = new Node();\n\n      if (type === Token.Punctuator) {\n          switch (lookahead.value) {\n          case ';':\n              throw new Error(\"Disabled.\"); // empty statement\n          case '(':\n              return parseExpressionStatement(node);\n          default:\n              break;\n          }\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\"); // keyword\n      }\n\n      expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 14 Program\n\n  function parseSourceElement() {\n      if (lookahead.type === Token.Keyword) {\n          switch (lookahead.value) {\n          case 'const':\n          case 'let':\n              throw new Error(\"Disabled.\");\n          case 'function':\n              throw new Error(\"Disabled.\");\n          default:\n              return parseStatement();\n          }\n      }\n\n      if (lookahead.type !== Token.EOF) {\n          return parseStatement();\n      }\n  }\n\n  function parseSourceElements() {\n      var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n      while (index < length) {\n          token = lookahead;\n          if (token.type !== Token.StringLiteral) {\n              break;\n          }\n\n          sourceElement = parseSourceElement();\n          sourceElements.push(sourceElement);\n          if (sourceElement.expression.type !== Syntax.Literal) {\n              // this is not directive\n              break;\n          }\n          directive = source.slice(token.start + 1, token.end - 1);\n          if (directive === 'use strict') {\n              strict = true;\n              if (firstRestricted) {\n                  throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n              }\n          } else {\n              if (!firstRestricted && token.octal) {\n                  firstRestricted = token;\n              }\n          }\n      }\n\n      while (index < length) {\n          sourceElement = parseSourceElement();\n          if (typeof sourceElement === 'undefined') {\n              break;\n          }\n          sourceElements.push(sourceElement);\n      }\n      return sourceElements;\n  }\n\n  function parseProgram() {\n      var body, node;\n\n      skipComment();\n      peek();\n      node = new Node();\n      strict = true; // assume strict\n\n      body = parseSourceElements();\n      return node.finishProgram(body);\n  }\n\n  function filterTokenLocation() {\n      var i, entry, token, tokens = [];\n\n      for (i = 0; i < extra.tokens.length; ++i) {\n          entry = extra.tokens[i];\n          token = {\n              type: entry.type,\n              value: entry.value\n          };\n          if (entry.regex) {\n              token.regex = {\n                  pattern: entry.regex.pattern,\n                  flags: entry.regex.flags\n              };\n          }\n          if (extra.range) {\n              token.range = entry.range;\n          }\n          if (extra.loc) {\n              token.loc = entry.loc;\n          }\n          tokens.push(token);\n      }\n\n      extra.tokens = tokens;\n  }\n\n  function tokenize(code, options) {\n      var toString,\n          tokens;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n\n      // Options matching.\n      options = options || {};\n\n      // Of course we collect tokens here.\n      options.tokens = true;\n      extra.tokens = [];\n      extra.tokenize = true;\n      // The following two fields are necessary to compute the Regex tokens.\n      extra.openParenToken = -1;\n      extra.openCurlyToken = -1;\n\n      extra.range = (typeof options.range === 'boolean') && options.range;\n      extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n      if (typeof options.tolerant === 'boolean' && options.tolerant) {\n          extra.errors = [];\n      }\n\n      try {\n          peek();\n          if (lookahead.type === Token.EOF) {\n              return extra.tokens;\n          }\n\n          lex();\n          while (lookahead.type !== Token.EOF) {\n              try {\n                  lex();\n              } catch (lexError) {\n                  if (extra.errors) {\n                      extra.errors.push(lexError);\n                      // We have to break on the first error\n                      // to avoid infinite loops.\n                      break;\n                  } else {\n                      throw lexError;\n                  }\n              }\n          }\n\n          filterTokenLocation();\n          tokens = extra.tokens;\n          if (typeof extra.errors !== 'undefined') {\n              tokens.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n      return tokens;\n  }\n\n  function parse(code, options) {\n      var program, toString;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          parenthesisCount: 0,\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n      if (typeof options !== 'undefined') {\n          extra.range = (typeof options.range === 'boolean') && options.range;\n          extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n          if (extra.loc && options.source !== null && options.source !== undefined) {\n              extra.source = toString(options.source);\n          }\n\n          if (typeof options.tokens === 'boolean' && options.tokens) {\n              extra.tokens = [];\n          }\n          if (typeof options.tolerant === 'boolean' && options.tolerant) {\n              extra.errors = [];\n          }\n      }\n\n      try {\n          program = parseProgram();\n          if (typeof extra.tokens !== 'undefined') {\n              filterTokenLocation();\n              program.tokens = extra.tokens;\n          }\n          if (typeof extra.errors !== 'undefined') {\n              program.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n\n      return program;\n  }\n\n  return {\n    tokenize: tokenize,\n    parse: parse\n  };\n\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-expression/src/parser.js\n// module id = nxjn\n// module chunks = 0","\"use strict\";\nvar aggregate_1 = require('./aggregate');\nvar scale_1 = require('./scale');\nvar timeunit_1 = require('./timeunit');\nvar type_1 = require('./type');\nvar util_1 = require('./util');\nexports.aggregate = {\n    type: 'string',\n    enum: aggregate_1.AGGREGATE_OPS,\n    supportedEnums: {\n        quantitative: aggregate_1.AGGREGATE_OPS,\n        ordinal: ['median', 'min', 'max'],\n        nominal: [],\n        temporal: ['mean', 'median', 'min', 'max'],\n        '': ['count']\n    },\n    supportedTypes: util_1.toMap([type_1.QUANTITATIVE, type_1.NOMINAL, type_1.ORDINAL, type_1.TEMPORAL, ''])\n};\nfunction field(fieldDef, opt) {\n    if (opt === void 0) { opt = {}; }\n    var prefix = (opt.datum ? 'datum.' : '') + (opt.prefn || '');\n    var suffix = opt.suffix || '';\n    var field = fieldDef.field;\n    if (isCount(fieldDef)) {\n        return prefix + 'count' + suffix;\n    }\n    else if (opt.fn) {\n        return prefix + opt.fn + '_' + field + suffix;\n    }\n    else if (!opt.nofn && fieldDef.bin) {\n        var binSuffix = opt.binSuffix || (opt.scaleType === scale_1.ScaleType.ORDINAL ?\n            '_range' :\n            '_start');\n        return prefix + 'bin_' + field + binSuffix;\n    }\n    else if (!opt.nofn && !opt.noAggregate && fieldDef.aggregate) {\n        return prefix + fieldDef.aggregate + '_' + field + suffix;\n    }\n    else if (!opt.nofn && fieldDef.timeUnit) {\n        return prefix + fieldDef.timeUnit + '_' + field + suffix;\n    }\n    else {\n        return prefix + field;\n    }\n}\nexports.field = field;\nfunction _isFieldDimension(fieldDef) {\n    return util_1.contains([type_1.NOMINAL, type_1.ORDINAL], fieldDef.type) || !!fieldDef.bin ||\n        (fieldDef.type === type_1.TEMPORAL && !!fieldDef.timeUnit);\n}\nfunction isDimension(fieldDef) {\n    return fieldDef && fieldDef.field && _isFieldDimension(fieldDef);\n}\nexports.isDimension = isDimension;\nfunction isMeasure(fieldDef) {\n    return fieldDef && fieldDef.field && !_isFieldDimension(fieldDef);\n}\nexports.isMeasure = isMeasure;\nfunction count() {\n    return { field: '*', aggregate: aggregate_1.AggregateOp.COUNT, type: type_1.QUANTITATIVE };\n}\nexports.count = count;\nfunction isCount(fieldDef) {\n    return fieldDef.aggregate === aggregate_1.AggregateOp.COUNT;\n}\nexports.isCount = isCount;\nfunction cardinality(fieldDef, stats, filterNull) {\n    if (filterNull === void 0) { filterNull = {}; }\n    var stat = stats[fieldDef.field], type = fieldDef.type;\n    if (fieldDef.bin) {\n        var bin_1 = fieldDef.bin;\n        var maxbins = (typeof bin_1 === 'boolean') ? undefined : bin_1.maxbins;\n        if (maxbins === undefined) {\n            maxbins = 10;\n        }\n        var bins = util_1.getbins(stat, maxbins);\n        return (bins.stop - bins.start) / bins.step;\n    }\n    if (type === type_1.TEMPORAL) {\n        var timeUnit = fieldDef.timeUnit;\n        switch (timeUnit) {\n            case timeunit_1.TimeUnit.SECONDS: return 60;\n            case timeunit_1.TimeUnit.MINUTES: return 60;\n            case timeunit_1.TimeUnit.HOURS: return 24;\n            case timeunit_1.TimeUnit.DAY: return 7;\n            case timeunit_1.TimeUnit.DATE: return 31;\n            case timeunit_1.TimeUnit.MONTH: return 12;\n            case timeunit_1.TimeUnit.QUARTER: return 4;\n            case timeunit_1.TimeUnit.YEAR:\n                var yearstat = stats['year_' + fieldDef.field];\n                if (!yearstat) {\n                    return null;\n                }\n                return yearstat.distinct -\n                    (stat.missing > 0 && filterNull[type] ? 1 : 0);\n        }\n    }\n    if (fieldDef.aggregate) {\n        return 1;\n    }\n    return stat.distinct -\n        (stat.missing > 0 && filterNull[type] ? 1 : 0);\n}\nexports.cardinality = cardinality;\nfunction title(fieldDef, config) {\n    if (fieldDef.title != null) {\n        return fieldDef.title;\n    }\n    if (isCount(fieldDef)) {\n        return config.countTitle;\n    }\n    var fn = fieldDef.aggregate || fieldDef.timeUnit || (fieldDef.bin && 'bin');\n    if (fn) {\n        return fn.toString().toUpperCase() + '(' + fieldDef.field + ')';\n    }\n    else {\n        return fieldDef.field;\n    }\n}\nexports.title = title;\n//# sourceMappingURL=fielddef.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/fielddef.js\n// module id = o+e1\n// module chunks = 0","var sg = require('vega-scenegraph').render,\n    canvas = sg.canvas,\n    svg = sg.svg.string,\n    View = require('./View');\n\nfunction HeadlessView(width, height, model) {\n  View.call(this, width, height, model);\n  this._type = 'canvas';\n  this._renderers = {canvas: canvas, svg: svg};\n}\n\nvar prototype = (HeadlessView.prototype = new View());\n\nprototype.renderer = function(type) {\n  if(type) this._type = type;\n  return View.prototype.renderer.apply(this, arguments);\n};\n\nprototype.canvas = function() {\n  return (this._type === 'canvas') ? this._renderer.canvas() : null;\n};\n\nprototype.canvasAsync = function(callback) {\n  var r = this._renderer, view = this;\n\n  function wait() {\n    if (r.pendingImages() === 0) {\n      view.render(); // re-render with all images\n      callback(view.canvas());\n    } else {\n      setTimeout(wait, 10);\n    }\n  }\n\n  // if images loading, poll until ready\n  if (this._type !== 'canvas') return null;\n  if (r.pendingImages() > 0) { wait(); } else { callback(this.canvas()); }\n};\n\nprototype.svg = function() {\n  return (this._type === 'svg') ? this._renderer.svg() : null;\n};\n\nprototype.initialize = function() {\n  var w = this._width,\n      h = this._height,\n      bg  = this._bgcolor,\n      pad = this._padding,\n      config = this.model().config();\n\n  if (this._viewport) {\n    w = this._viewport[0] - (pad ? pad.left + pad.right : 0);\n    h = this._viewport[1] - (pad ? pad.top + pad.bottom : 0);\n  }\n\n  this._renderer = (this._renderer || new this._io.Renderer(config.load))\n    .initialize(null, w, h, pad)\n    .background(bg);\n\n  return (this._repaint = true, this);\n};\n\nmodule.exports = HeadlessView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/core/HeadlessView.js\n// module id = oCPx\n// module chunks = 0","function instance(w, h) {\n  w = w || 1;\n  h = h || 1;\n  var canvas;\n\n  if (typeof document !== 'undefined' && document.createElement) {\n    canvas = document.createElement('canvas');\n    canvas.width = w;\n    canvas.height = h;\n  } else {\n    var Canvas = require('canvas');\n    if (!Canvas.prototype) return null;\n    canvas = new Canvas(w, h);\n  }\n  return lineDash(canvas);\n}\n\nfunction resize(canvas, w, h, p, retina) {\n  var g = this._ctx = canvas.getContext('2d'), \n      s = 1;\n\n  canvas.width = w + p.left + p.right;\n  canvas.height = h + p.top + p.bottom;\n\n  // if browser canvas, attempt to modify for retina display\n  if (retina && typeof HTMLElement !== 'undefined' &&\n      canvas instanceof HTMLElement)\n  {\n    g.pixelratio = (s = pixelRatio(canvas) || 1);\n  }\n\n  g.setTransform(s, 0, 0, s, s*p.left, s*p.top);\n  return canvas;\n}\n\nfunction pixelRatio(canvas) {\n  var g = canvas.getContext('2d');\n\n  // get canvas pixel data\n  var devicePixelRatio = window && window.devicePixelRatio || 1,\n      backingStoreRatio = (\n        g.webkitBackingStorePixelRatio ||\n        g.mozBackingStorePixelRatio ||\n        g.msBackingStorePixelRatio ||\n        g.oBackingStorePixelRatio ||\n        g.backingStorePixelRatio) || 1,\n      ratio = devicePixelRatio / backingStoreRatio;\n\n  if (devicePixelRatio !== backingStoreRatio) {\n    // set actual and visible canvas size\n    var w = canvas.width,\n        h = canvas.height;\n    canvas.width = w * ratio;\n    canvas.height = h * ratio;\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n\n  return ratio;\n}\n\nfunction lineDash(canvas) {\n  var g = canvas.getContext('2d');\n  if (g.vgLineDash) return; // already initialized!\n\n  var NOOP = function() {},\n      NODASH = [];\n  \n  if (g.setLineDash) {\n    g.vgLineDash = function(dash) { this.setLineDash(dash || NODASH); };\n    g.vgLineDashOffset = function(off) { this.lineDashOffset = off; };\n  } else if (g.webkitLineDash !== undefined) {\n  \tg.vgLineDash = function(dash) { this.webkitLineDash = dash || NODASH; };\n    g.vgLineDashOffset = function(off) { this.webkitLineDashOffset = off; };\n  } else if (g.mozDash !== undefined) {\n    g.vgLineDash = function(dash) { this.mozDash = dash; };\n    g.vgLineDashOffset = NOOP;\n  } else {\n    g.vgLineDash = NOOP;\n    g.vgLineDashOffset = NOOP;\n  }\n  return canvas;\n}\n\nmodule.exports = {\n  instance:   instance,\n  resize:     resize,\n  lineDash:   lineDash\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/util/canvas.js\n// module id = oHkv\n// module chunks = 0","\"use strict\";\nvar util_1 = require('../../util');\nvar formula;\n(function (formula_1) {\n    function parse(model) {\n        return (model.transform().calculate || []).reduce(function (formulaComponent, formula) {\n            formulaComponent[util_1.hash(formula)] = formula;\n            return formulaComponent;\n        }, {});\n    }\n    formula_1.parseUnit = parse;\n    function parseFacet(model) {\n        var formulaComponent = parse(model);\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source) {\n            util_1.extend(formulaComponent, childDataComponent.calculate);\n            delete childDataComponent.calculate;\n        }\n        return formulaComponent;\n    }\n    formula_1.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var formulaComponent = parse(model);\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (!childDataComponent.source && childDataComponent.calculate) {\n                util_1.extend(formulaComponent || {}, childDataComponent.calculate);\n                delete childDataComponent.calculate;\n            }\n        });\n        return formulaComponent;\n    }\n    formula_1.parseLayer = parseLayer;\n    function assemble(component) {\n        return util_1.vals(component.calculate).reduce(function (transform, formula) {\n            transform.push(util_1.extend({ type: 'formula' }, formula));\n            return transform;\n        }, []);\n    }\n    formula_1.assemble = assemble;\n})(formula = exports.formula || (exports.formula = {}));\n//# sourceMappingURL=formula.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/formula.js\n// module id = pAWG\n// module chunks = 0","var d3 = require('d3'),\n    df = require('vega-dataflow'),\n    Tuple = df.Tuple,\n    ChangeSet = df.ChangeSet,\n    log = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction Force(graph) {\n  Transform.prototype.init.call(this, graph);\n\n  this._prev = null;\n  this._interactive = false;\n  this._setup = true;\n  this._nodes  = [];\n  this._links = [];\n  this._layout = d3.layout.force();\n\n  Transform.addParameters(this, {\n    size: {type: 'array<value>', default: require('./screen').size},\n    bound: {type: 'value', default: true},\n    links: {type: 'data'},\n\n    // TODO: for now force these to be value params only (pun-intended)\n    // Can update to include fields after Parameter refactoring.\n    linkStrength: {type: 'value', default: 1},\n    linkDistance: {type: 'value', default: 20},\n    charge: {type: 'value', default: -30},\n\n    chargeDistance: {type: 'value', default: Infinity},\n    friction: {type: 'value', default: 0.9},\n    theta: {type: 'value', default: 0.8},\n    gravity: {type: 'value', default: 0.1},\n    alpha: {type: 'value', default: 0.1},\n    iterations: {type: 'value', default: 500},\n\n    interactive: {type: 'value', default: this._interactive},\n    active: {type: 'value', default: this._prev},\n    fixed: {type: 'data'}\n  });\n\n  this._output = {\n    'x': 'layout_x',\n    'y': 'layout_y'\n  };\n\n  return this.mutates(true);\n}\n\nvar prototype = (Force.prototype = Object.create(Transform.prototype));\nprototype.constructor = Force;\n\nprototype.transform = function(nodeInput, reset) {\n  log.debug(nodeInput, ['force']);\n  reset = reset - (nodeInput.signals.active ? 1 : 0);\n\n  // get variables\n  var interactive = this.param('interactive'),\n      linkSource = this.param('links').source,\n      linkInput = linkSource.last(),\n      active = this.param('active'),\n      output = this._output,\n      layout = this._layout,\n      nodes = this._nodes,\n      links = this._links;\n\n  // configure nodes, links and layout\n  if (linkInput.stamp < nodeInput.stamp) linkInput = null;\n  this.configure(nodeInput, linkInput, interactive, reset);\n\n  // run batch layout\n  if (!interactive) {\n    var iterations = this.param('iterations');\n    for (var i=0; i<iterations; ++i) layout.tick();\n    layout.stop();\n  }\n\n  // update node positions\n  this.update(active);\n\n  // re-up alpha on parameter change\n  if (reset || active !== this._prev && active && active.update) {\n    layout.alpha(this.param('alpha')); // re-start layout\n  }\n\n  // update active node status,\n  if (active !== this._prev) {\n    this._prev = active;\n  }\n\n  // process removed nodes or edges\n  if (nodeInput.rem.length) {\n    layout.nodes(this._nodes = Tuple.idFilter(nodes, nodeInput.rem));\n  }\n  if (linkInput && linkInput.rem.length) {\n    layout.links(this._links = Tuple.idFilter(links, linkInput.rem));\n  }\n\n  // return changeset\n  nodeInput.fields[output.x] = 1;\n  nodeInput.fields[output.y] = 1;\n  return nodeInput;\n};\n\nprototype.configure = function(nodeInput, linkInput, interactive, reset) {\n  // check if we need to run configuration\n  var layout = this._layout,\n      update = this._setup || nodeInput.add.length ||\n            linkInput && linkInput.add.length ||\n            interactive !== this._interactive ||\n            this.param('charge') !== layout.charge() ||\n            this.param('linkStrength') !== layout.linkStrength() ||\n            this.param('linkDistance') !== layout.linkDistance();\n\n  if (update || reset) {\n    // a parameter changed, so update tick-only parameters\n    layout\n      .size(this.param('size'))\n      .chargeDistance(this.param('chargeDistance'))\n      .theta(this.param('theta'))\n      .gravity(this.param('gravity'))\n      .friction(this.param('friction'));\n  }\n\n  if (!update) return; // if no more updates needed, return now\n\n  this._setup = false;\n  this._interactive = interactive;\n\n  var force = this,\n      graph = this._graph,\n      nodes = this._nodes,\n      links = this._links, a, i;\n\n  // process added nodes\n  for (a=nodeInput.add, i=0; i<a.length; ++i) {\n    nodes.push({tuple: a[i]});\n  }\n\n  // process added edges\n  if (linkInput) for (a=linkInput.add, i=0; i<a.length; ++i) {\n    // TODO add configurable source/target accessors\n    // TODO support lookup by node id\n    // TODO process 'mod' of edge source or target?\n    links.push({\n      tuple:  a[i],\n      source: nodes[a[i].source],\n      target: nodes[a[i].target]\n    });\n  }\n\n  // setup handler for force layout tick events\n  var tickHandler = !interactive ? null : function() {\n    // re-schedule the transform, force reflow\n    graph.propagate(ChangeSet.create(null, true), force);\n  };\n\n  // configure the rest of the layout\n  layout\n    .linkStrength(this.param('linkStrength'))\n    .linkDistance(this.param('linkDistance'))\n    .charge(this.param('charge'))\n    .nodes(nodes)\n    .links(links)\n    .on('tick', tickHandler)\n    .start().alpha(this.param('alpha'));\n};\n\nprototype.update = function(active) {\n  var output = this._output,\n      bound = this.param('bound'),\n      fixed = this.param('fixed'),\n      size = this.param('size'),\n      nodes = this._nodes,\n      lut = {}, id, i, n, t, x, y;\n\n  if (fixed && fixed.source) {\n    // TODO: could cache and update as needed?\n    fixed = fixed.source.values();\n    for (i=0, n=fixed.length; i<n; ++i) {\n      lut[fixed[i].id] = 1;\n    }\n  }\n\n  for (i=0; i<nodes.length; ++i) {\n    n = nodes[i];\n    t = n.tuple;\n    id = t._id;\n\n    if (active && active.id === id) {\n      n.fixed = 1;\n      if (active.update) {\n        n.x = n.px = active.x;\n        n.y = n.py = active.y;\n      }\n    } else {\n      n.fixed = lut[id] || 0;\n    }\n\n    x = bound ? Math.max(0, Math.min(n.x, size[0])) : n.x;\n    y = bound ? Math.max(0, Math.min(n.y, size[1])) : n.y;\n    Tuple.set(t, output.x, x);\n    Tuple.set(t, output.y, y);\n  }\n};\n\nmodule.exports = Force;\n\nForce.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Force transform\",\n  \"description\": \"Performs force-directed layout for network data.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"force\"]},\n    \"size\": {\n      \"description\": \"The dimensions [width, height] of this force layout.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"minItems\": 2,\n          \"maxItems\": 2,\n          \"items\": {\"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}]}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n\n      \"default\": [500, 500]\n    },\n    \"links\": {\n      \"type\": \"string\",\n      \"description\": \"The name of the link (edge) data set.\"\n    },\n    \"linkDistance\": {\n      \"description\": \"Determines the length of edges, in pixels.\",\n      \"oneOf\": [{\"type\": \"number\"}, {\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 20\n    },\n    \"linkStrength\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"Determines the tension of edges (the spring constant).\",\n      \"default\": 1\n    },\n    \"charge\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"The strength of the charge each node exerts.\",\n      \"default\": -30\n    },\n    \"chargeDistance\": {\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"The maximum distance over which charge forces are applied.\",\n      \"default\": Infinity\n    },\n    \"iterations\": {\n      \"description\": \"The number of iterations to run the force directed layout.\",\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 500\n    },\n    \"friction\": {\n      \"description\": \"The strength of the friction force used to stabilize the layout.\",\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 0.9\n    },\n    \"theta\": {\n      \"description\": \"The theta parameter for the Barnes-Hut algorithm, which is used to compute charge forces between nodes.\",\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 0.8\n    },\n    \"gravity\": {\n      \"description\": \"The strength of the pseudo-gravity force that pulls nodes towards the center of the layout area.\",\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 0.1\n    },\n    \"alpha\": {\n      \"description\": \"A \\\"temperature\\\" parameter that determines how much node positions are adjusted at each step.\",\n      \"oneOf\": [{\"type\": \"number\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": 0.1\n    },\n    \"interactive\": {\n      \"description\": \"Enables an interactive force-directed layout.\",\n      \"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": false\n    },\n    \"active\": {\n      \"description\": \"A signal representing the active node.\",\n      \"$ref\": \"#/refs/signal\"\n    },\n    \"fixed\": {\n      \"description\": \"The name of a datasource containing the IDs of nodes with fixed positions.\",\n      \"type\": \"string\"\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"x\": {\"type\": \"string\", \"default\": \"layout_x\"},\n        \"y\": {\"type\": \"string\", \"default\": \"layout_y\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\", \"links\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Force.js\n// module id = pKLr\n// module chunks = 0","var util = require('../../util');\nvar d3_dsv = require('d3-dsv');\n\nfunction dsv(data, format) {\n  if (data) {\n    var h = format.header;\n    data = (h ? h.join(format.delimiter) + '\\n' : '') + data;\n  }\n  return d3_dsv.dsv(format.delimiter).parse(data);\n}\n\ndsv.delimiter = function(delim) {\n  var fmt = {delimiter: delim};\n  return function(data, format) {\n    return dsv(data, format ? util.extend(format, fmt) : fmt);\n  };\n};\n\nmodule.exports = dsv;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/import/formats/dsv.js\n// module id = pYy3\n// module chunks = 0","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define('d3-time', ['exports'], factory) :\n  factory((global.d3_time = {}));\n}(this, function (exports) { 'use strict';\n\n  var t0 = new Date;\n  var t1 = new Date;\n  function newInterval(floori, offseti, count, field) {\n\n    function interval(date) {\n      return floori(date = new Date(+date)), date;\n    }\n\n    interval.floor = interval;\n\n    interval.round = function(date) {\n      var d0 = new Date(+date),\n          d1 = new Date(date - 1);\n      floori(d0), floori(d1), offseti(d1, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    };\n\n    interval.ceil = function(date) {\n      return floori(date = new Date(date - 1)), offseti(date, 1), date;\n    };\n\n    interval.offset = function(date, step) {\n      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n    };\n\n    interval.range = function(start, stop, step) {\n      var range = [];\n      start = new Date(start - 1);\n      stop = new Date(+stop);\n      step = step == null ? 1 : Math.floor(step);\n      if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n      offseti(start, 1), floori(start);\n      if (start < stop) range.push(new Date(+start));\n      while (offseti(start, step), floori(start), start < stop) range.push(new Date(+start));\n      return range;\n    };\n\n    interval.filter = function(test) {\n      return newInterval(function(date) {\n        while (floori(date), !test(date)) date.setTime(date - 1);\n      }, function(date, step) {\n        while (--step >= 0) while (offseti(date, 1), !test(date));\n      });\n    };\n\n    if (count) {\n      interval.count = function(start, end) {\n        t0.setTime(+start), t1.setTime(+end);\n        floori(t0), floori(t1);\n        return Math.floor(count(t0, t1));\n      };\n\n      interval.every = function(step) {\n        step = Math.floor(step);\n        return !isFinite(step) || !(step > 0) ? null\n            : !(step > 1) ? interval\n            : interval.filter(field\n                ? function(d) { return field(d) % step === 0; }\n                : function(d) { return interval.count(0, d) % step === 0; });\n      };\n    }\n\n    return interval;\n  };\n\n  var millisecond = newInterval(function() {\n    // noop\n  }, function(date, step) {\n    date.setTime(+date + step);\n  }, function(start, end) {\n    return end - start;\n  });\n\n  // An optimized implementation for this simple case.\n  millisecond.every = function(k) {\n    k = Math.floor(k);\n    if (!isFinite(k) || !(k > 0)) return null;\n    if (!(k > 1)) return millisecond;\n    return newInterval(function(date) {\n      date.setTime(Math.floor(date / k) * k);\n    }, function(date, step) {\n      date.setTime(+date + step * k);\n    }, function(start, end) {\n      return (end - start) / k;\n    });\n  };\n\n  var second = newInterval(function(date) {\n    date.setMilliseconds(0);\n  }, function(date, step) {\n    date.setTime(+date + step * 1e3);\n  }, function(start, end) {\n    return (end - start) / 1e3;\n  }, function(date) {\n    return date.getSeconds();\n  });\n\n  var minute = newInterval(function(date) {\n    date.setSeconds(0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 6e4);\n  }, function(start, end) {\n    return (end - start) / 6e4;\n  }, function(date) {\n    return date.getMinutes();\n  });\n\n  var hour = newInterval(function(date) {\n    date.setMinutes(0, 0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 36e5);\n  }, function(start, end) {\n    return (end - start) / 36e5;\n  }, function(date) {\n    return date.getHours();\n  });\n\n  var day = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 864e5;\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n\n  function weekday(i) {\n    return newInterval(function(date) {\n      date.setHours(0, 0, 0, 0);\n      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setDate(date.getDate() + step * 7);\n    }, function(start, end) {\n      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 6048e5;\n    });\n  }\n\n  var sunday = weekday(0);\n  var monday = weekday(1);\n  var tuesday = weekday(2);\n  var wednesday = weekday(3);\n  var thursday = weekday(4);\n  var friday = weekday(5);\n  var saturday = weekday(6);\n\n  var month = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n    date.setDate(1);\n  }, function(date, step) {\n    date.setMonth(date.getMonth() + step);\n  }, function(start, end) {\n    return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n  }, function(date) {\n    return date.getMonth();\n  });\n\n  var year = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n    date.setMonth(0, 1);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step);\n  }, function(start, end) {\n    return end.getFullYear() - start.getFullYear();\n  }, function(date) {\n    return date.getFullYear();\n  });\n\n  var utcSecond = newInterval(function(date) {\n    date.setUTCMilliseconds(0);\n  }, function(date, step) {\n    date.setTime(+date + step * 1e3);\n  }, function(start, end) {\n    return (end - start) / 1e3;\n  }, function(date) {\n    return date.getUTCSeconds();\n  });\n\n  var utcMinute = newInterval(function(date) {\n    date.setUTCSeconds(0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 6e4);\n  }, function(start, end) {\n    return (end - start) / 6e4;\n  }, function(date) {\n    return date.getUTCMinutes();\n  });\n\n  var utcHour = newInterval(function(date) {\n    date.setUTCMinutes(0, 0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 36e5);\n  }, function(start, end) {\n    return (end - start) / 36e5;\n  }, function(date) {\n    return date.getUTCHours();\n  });\n\n  var utcDay = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step);\n  }, function(start, end) {\n    return (end - start) / 864e5;\n  }, function(date) {\n    return date.getUTCDate() - 1;\n  });\n\n  function utcWeekday(i) {\n    return newInterval(function(date) {\n      date.setUTCHours(0, 0, 0, 0);\n      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setUTCDate(date.getUTCDate() + step * 7);\n    }, function(start, end) {\n      return (end - start) / 6048e5;\n    });\n  }\n\n  var utcSunday = utcWeekday(0);\n  var utcMonday = utcWeekday(1);\n  var utcTuesday = utcWeekday(2);\n  var utcWednesday = utcWeekday(3);\n  var utcThursday = utcWeekday(4);\n  var utcFriday = utcWeekday(5);\n  var utcSaturday = utcWeekday(6);\n\n  var utcMonth = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCDate(1);\n  }, function(date, step) {\n    date.setUTCMonth(date.getUTCMonth() + step);\n  }, function(start, end) {\n    return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n  }, function(date) {\n    return date.getUTCMonth();\n  });\n\n  var utcYear = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCMonth(0, 1);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step);\n  }, function(start, end) {\n    return end.getUTCFullYear() - start.getUTCFullYear();\n  }, function(date) {\n    return date.getUTCFullYear();\n  });\n\n  var milliseconds = millisecond.range;\n  var seconds = second.range;\n  var minutes = minute.range;\n  var hours = hour.range;\n  var days = day.range;\n  var sundays = sunday.range;\n  var mondays = monday.range;\n  var tuesdays = tuesday.range;\n  var wednesdays = wednesday.range;\n  var thursdays = thursday.range;\n  var fridays = friday.range;\n  var saturdays = saturday.range;\n  var weeks = sunday.range;\n  var months = month.range;\n  var years = year.range;\n\n  var utcMillisecond = millisecond;\n  var utcMilliseconds = milliseconds;\n  var utcSeconds = utcSecond.range;\n  var utcMinutes = utcMinute.range;\n  var utcHours = utcHour.range;\n  var utcDays = utcDay.range;\n  var utcSundays = utcSunday.range;\n  var utcMondays = utcMonday.range;\n  var utcTuesdays = utcTuesday.range;\n  var utcWednesdays = utcWednesday.range;\n  var utcThursdays = utcThursday.range;\n  var utcFridays = utcFriday.range;\n  var utcSaturdays = utcSaturday.range;\n  var utcWeeks = utcSunday.range;\n  var utcMonths = utcMonth.range;\n  var utcYears = utcYear.range;\n\n  var version = \"0.1.1\";\n\n  exports.version = version;\n  exports.milliseconds = milliseconds;\n  exports.seconds = seconds;\n  exports.minutes = minutes;\n  exports.hours = hours;\n  exports.days = days;\n  exports.sundays = sundays;\n  exports.mondays = mondays;\n  exports.tuesdays = tuesdays;\n  exports.wednesdays = wednesdays;\n  exports.thursdays = thursdays;\n  exports.fridays = fridays;\n  exports.saturdays = saturdays;\n  exports.weeks = weeks;\n  exports.months = months;\n  exports.years = years;\n  exports.utcMillisecond = utcMillisecond;\n  exports.utcMilliseconds = utcMilliseconds;\n  exports.utcSeconds = utcSeconds;\n  exports.utcMinutes = utcMinutes;\n  exports.utcHours = utcHours;\n  exports.utcDays = utcDays;\n  exports.utcSundays = utcSundays;\n  exports.utcMondays = utcMondays;\n  exports.utcTuesdays = utcTuesdays;\n  exports.utcWednesdays = utcWednesdays;\n  exports.utcThursdays = utcThursdays;\n  exports.utcFridays = utcFridays;\n  exports.utcSaturdays = utcSaturdays;\n  exports.utcWeeks = utcWeeks;\n  exports.utcMonths = utcMonths;\n  exports.utcYears = utcYears;\n  exports.millisecond = millisecond;\n  exports.second = second;\n  exports.minute = minute;\n  exports.hour = hour;\n  exports.day = day;\n  exports.sunday = sunday;\n  exports.monday = monday;\n  exports.tuesday = tuesday;\n  exports.wednesday = wednesday;\n  exports.thursday = thursday;\n  exports.friday = friday;\n  exports.saturday = saturday;\n  exports.week = sunday;\n  exports.month = month;\n  exports.year = year;\n  exports.utcSecond = utcSecond;\n  exports.utcMinute = utcMinute;\n  exports.utcHour = utcHour;\n  exports.utcDay = utcDay;\n  exports.utcSunday = utcSunday;\n  exports.utcMonday = utcMonday;\n  exports.utcTuesday = utcTuesday;\n  exports.utcWednesday = utcWednesday;\n  exports.utcThursday = utcThursday;\n  exports.utcFriday = utcFriday;\n  exports.utcSaturday = utcSaturday;\n  exports.utcWeek = utcSunday;\n  exports.utcMonth = utcMonth;\n  exports.utcYear = utcYear;\n  exports.interval = newInterval;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/~/d3-time/build/d3-time.js\n// module id = pd8q\n// module chunks = 0","var util = require('../util'),\n    time = require('../time'),\n    EPSILON = 1e-15;\n\nfunction bins(opt) {\n  if (!opt) { throw Error(\"Missing binning options.\"); }\n\n  // determine range\n  var maxb = opt.maxbins || 15,\n      base = opt.base || 10,\n      logb = Math.log(base),\n      div = opt.div || [5, 2],\n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step, level, minstep, precision, v, i, eps;\n\n  if (opt.step) {\n    // if step size is explicitly given, use that\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n      opt.steps.length - 1,\n      bisect(opt.steps, span/maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // else use span to determine step size\n    level = Math.ceil(Math.log(maxb) / logb);\n    minstep = opt.minstep || 0;\n    step = Math.max(\n      minstep,\n      Math.pow(base, Math.round(Math.log(span) / logb) - level)\n    );\n\n    // increase step size if too many bins\n    while (Math.ceil(span/step) > maxb) { step *= base; }\n\n    // decrease step size if allowed\n    for (i=0; i<div.length; ++i) {\n      v = step / div[i];\n      if (v >= minstep && span / v <= maxb) step = v;\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop:  max,\n    step:  step,\n    unit:  {precision: precision},\n    value: value,\n    index: index\n  };\n}\n\nfunction bisect(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (util.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n\nfunction value(v) {\n  return this.step * Math.floor(v / this.step + EPSILON);\n}\n\nfunction index(v) {\n  return Math.floor((v - this.start) / this.step + EPSILON);\n}\n\nfunction date_value(v) {\n  return this.unit.date(value.call(this, v));\n}\n\nfunction date_index(v) {\n  return index.call(this, this.unit.unit(v));\n}\n\nbins.date = function(opt) {\n  if (!opt) { throw Error(\"Missing date binning options.\"); }\n\n  // find time step, then bin\n  var units = opt.utc ? time.utc : time,\n      dmin = opt.min,\n      dmax = opt.max,\n      maxb = opt.maxbins || 20,\n      minb = opt.minbins || 4,\n      span = (+dmax) - (+dmin),\n      unit = opt.unit ? units[opt.unit] : units.find(span, minb, maxb),\n      spec = bins({\n        min:     unit.min != null ? unit.min : unit.unit(dmin),\n        max:     unit.max != null ? unit.max : unit.unit(dmax),\n        maxbins: maxb,\n        minstep: unit.minstep,\n        steps:   unit.step\n      });\n\n  spec.unit = unit;\n  spec.index = date_index;\n  if (!opt.raw) spec.value = date_value;\n  return spec;\n};\n\nmodule.exports = bins;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/bins/bins.js\n// module id = prMK\n// module chunks = 0","var util = require('./util');\n\nfunction draw(g, scene, bounds) {\n  if (!scene.items || !scene.items.length) return;\n\n  var renderer = this,\n      items = scene.items, o;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    if (!(o.image && o.image.url === o.url)) {\n      o.image = renderer.loadImage(o.url);\n      o.image.url = o.url;\n    }\n\n    var x = o.x || 0,\n        y = o.y || 0,\n        w = o.width || (o.image && o.image.width) || 0,\n        h = o.height || (o.image && o.image.height) || 0,\n        opac;\n    x = x - (o.align==='center' ? w/2 : o.align==='right' ? w : 0);\n    y = y - (o.baseline==='middle' ? h/2 : o.baseline==='bottom' ? h : 0);\n\n    if (o.image.loaded) {\n      g.globalAlpha = (opac = o.opacity) != null ? opac : 1;\n      g.drawImage(o.image, x, y, w, h);\n    }\n  }\n}\n\nmodule.exports = {\n  draw: draw,\n  pick: util.pick()\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/render/canvas/marks/image.js\n// module id = pvXc\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../channel');\nvar encoding_1 = require('../encoding');\nvar fielddef_1 = require('../fielddef');\nvar mark_1 = require('../mark');\nvar util_1 = require('../util');\nfunction initMarkConfig(mark, encoding, config) {\n    return util_1.extend(['filled', 'opacity', 'orient', 'align'].reduce(function (cfg, property) {\n        var value = config.mark[property];\n        switch (property) {\n            case 'filled':\n                if (value === undefined) {\n                    cfg[property] = mark !== mark_1.POINT && mark !== mark_1.LINE && mark !== mark_1.RULE;\n                }\n                break;\n            case 'opacity':\n                if (value === undefined) {\n                    if (util_1.contains([mark_1.POINT, mark_1.TICK, mark_1.CIRCLE, mark_1.SQUARE], mark)) {\n                        if (!encoding_1.isAggregate(encoding) || encoding_1.has(encoding, channel_1.DETAIL)) {\n                            cfg[property] = 0.7;\n                        }\n                    }\n                    if (mark === mark_1.AREA) {\n                        cfg[property] = 0.7;\n                    }\n                }\n                break;\n            case 'orient':\n                var xIsMeasure = fielddef_1.isMeasure(encoding.x) || fielddef_1.isMeasure(encoding.x2);\n                var yIsMeasure = fielddef_1.isMeasure(encoding.y) || fielddef_1.isMeasure(encoding.y2);\n                if (xIsMeasure && !yIsMeasure) {\n                    if (mark === mark_1.TICK) {\n                        cfg[property] = 'vertical';\n                    }\n                    else {\n                        cfg[property] = 'horizontal';\n                    }\n                }\n                else if (!xIsMeasure && yIsMeasure) {\n                    if (mark === mark_1.TICK) {\n                        cfg[property] = 'horizontal';\n                    }\n                    else {\n                        cfg[property] = 'vertical';\n                    }\n                }\n                break;\n            case 'align':\n                if (value === undefined) {\n                    cfg[property] = encoding_1.has(encoding, channel_1.X) ? 'center' : 'right';\n                }\n        }\n        return cfg;\n    }, {}), config.mark);\n}\nexports.initMarkConfig = initMarkConfig;\n//# sourceMappingURL=config.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/config.js\n// module id = pyUU\n// module chunks = 0","var bins = require('./bins'),\n    gen  = require('../generate'),\n    type = require('../import/type'),\n    util = require('../util'),\n    stats = require('../stats');\n\nvar qtype = {\n  'integer': 1,\n  'number': 1,\n  'date': 1\n};\n\nfunction $bin(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return !b ? (opt.accessor || util.identity) :\n    util.$func('bin', b.unit.unit ?\n      function(x) { return b.value(b.unit.unit(x)); } :\n      function(x) { return b.value(x); }\n    )(opt.accessor);\n}\n\nfunction histogram(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return b ?\n    numerical(values, opt.accessor, b) :\n    categorical(values, opt.accessor, opt && opt.sort);\n}\n\nfunction spec(opt) {\n  var t = opt.type, b = null;\n  if (t == null || qtype[t]) {\n    if (t === 'integer' && opt.minstep == null) opt.minstep = 1;\n    b = (t === 'date') ? bins.date(opt) : bins(opt);\n  }\n  return b;\n}\n\nfunction options() {\n  var a = arguments,\n      i = 0,\n      values = util.isArray(a[i]) ? a[i++] : null,\n      f = util.isFunction(a[i]) || util.isString(a[i]) ? util.$(a[i++]) : null,\n      opt = util.extend({}, a[i]);\n\n  if (values) {\n    opt.type = opt.type || type(values, f);\n    if (qtype[opt.type]) {\n      var ext = stats.extent(values, f);\n      opt = util.extend({min: ext[0], max: ext[1]}, opt);\n    }\n  }\n  if (f) { opt.accessor = f; }\n  return opt;\n}\n\nfunction numerical(values, f, b) {\n  var h = gen.range(b.start, b.stop + b.step/2, b.step)\n    .map(function(v) { return {value: b.value(v), count: 0}; });\n\n  for (var i=0, v, j; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      j = b.index(v);\n      if (j < 0 || j >= h.length || !isFinite(j)) continue;\n      h[j].count += 1;\n    }\n  }\n  h.bins = b;\n  return h;\n}\n\nfunction categorical(values, f, sort) {\n  var u = stats.unique(values, f),\n      c = stats.count.map(values, f);\n  return u.map(function(k) { return {value: k, count: c[k]}; })\n    .sort(util.comparator(sort ? '-count' : '+value'));\n}\n\nmodule.exports = {\n  $bin: $bin,\n  histogram: histogram\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/bins/histogram.js\n// module id = qmQ9\n// module chunks = 0","var util = require('./util');\n\nfunction draw(g, scene, bounds) {\n  if (!scene.items || !scene.items.length) return;\n\n  var items = scene.items,\n      o, opac, x1, y1, x2, y2;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac === 0) continue;\n      \n    x1 = o.x || 0;\n    y1 = o.y || 0;\n    x2 = o.x2 != null ? o.x2 : x1;\n    y2 = o.y2 != null ? o.y2 : y1;\n\n    if (o.stroke && util.stroke(g, o, opac)) {\n      g.beginPath();\n      g.moveTo(x1, y1);\n      g.lineTo(x2, y2);\n      g.stroke();\n    }\n  }\n}\n\nfunction stroke(g, o) {\n  var x1 = o.x || 0,\n      y1 = o.y || 0,\n      x2 = o.x2 != null ? o.x2 : x1,\n      y2 = o.y2 != null ? o.y2 : y1,\n      lw = o.strokeWidth,\n      lc = o.strokeCap;\n\n  g.lineWidth = lw != null ? lw : 1;\n  g.lineCap   = lc != null ? lc : 'butt';\n  g.beginPath();\n  g.moveTo(x1, y1);\n  g.lineTo(x2, y2);\n}\n\nfunction hit(g, o, x, y) {\n  if (!g.isPointInStroke) return false;\n  stroke(g, o);\n  return g.isPointInStroke(x, y);\n}\n\nmodule.exports = {\n  draw: draw,\n  pick: util.pick(hit)\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/render/canvas/marks/rule.js\n// module id = qtVb\n// module chunks = 0","var dl = require('datalib'),\n    log = require('vega-logging'),\n    df = require('vega-dataflow'),\n    Node = df.Node, // jshint ignore:line\n    Tuple = df.Tuple,\n    Deps = df.Dependencies;\n\nvar Types = {\n  INSERT: \"insert\",\n  REMOVE: \"remove\",\n  UPSERT: \"upsert\",\n  TOGGLE: \"toggle\",\n  CLEAR:  \"clear\"\n};\n\nvar EMPTY = [];\n\nfunction filter(fields, value, src, dest) {\n  var splice = true, len = fields.length, i, j, f, v;\n  for (i = src.length - 1; i >= 0; --i) {\n    for (j=0; j<len; ++j) {\n      f = fields[j];\n      v = value && f(value) || value;\n      if (f(src[i]) !== v) {\n        splice = false;\n        break;\n      }\n    }\n\n    if (splice) dest.push.apply(dest, src.splice(i, 1));\n    splice = true;\n  }\n}\n\nfunction insert(input, datum, source) {\n  var t = Tuple.ingest(datum);\n  input.add.push(t);\n  source._data.push(t);\n}\n\nfunction parseModify(model, def, ds) {\n  var signal = def.signal ? dl.field(def.signal) : null,\n      signalName  = signal ? signal[0] : null,\n      predicate   = def.predicate ? model.predicate(def.predicate.name || def.predicate) : null,\n      exprTrigger = def.test ? model.expr(def.test) : null,\n      reeval  = (predicate === null && exprTrigger === null),\n      isClear = def.type === Types.CLEAR,\n      fields  = dl.array(def.field || 'data'),\n      getters = fields.map(dl.accessor),\n      setters = fields.map(dl.mutator),\n      node = new Node(model).router(isClear);\n\n  node.evaluate = function(input) {\n    var db, sg;\n\n    if (predicate !== null) {  // TODO: predicate args\n      db = model.values(Deps.DATA, predicate.data || EMPTY);\n      sg = model.values(Deps.SIGNALS, predicate.signals || EMPTY);\n      reeval = predicate.call(predicate, {}, db, sg, model._predicates);\n    }\n\n    if (exprTrigger !== null) {\n      sg = model.values(Deps.SIGNALS, exprTrigger.globals || EMPTY);\n      reeval = exprTrigger.fn();\n    }\n\n    log.debug(input, [def.type+\"ing\", reeval]);\n    if (!reeval || (!isClear && !input.signals[signalName])) return input;\n\n    var value = signal ? model.signalRef(def.signal) : null,\n        d = model.data(ds.name),\n        t = null, add = [], rem = [], up = 0, datum;\n\n    if (dl.isObject(value)) {\n      datum = value;\n      if (!def.field) {\n        fields = dl.keys(datum);\n        getters = fields.map(dl.accessor);\n        setters = fields.map(dl.mutator);\n      }\n    } else {\n      datum = {};\n      setters.forEach(function(f) { f(datum, value); });\n    }\n\n    // We have to modify ds._data so that subsequent pulses contain\n    // our dynamic data. W/o modifying ds._data, only the output\n    // collector will contain dynamic tuples.\n    if (def.type === Types.INSERT) {\n      insert(input, datum, d);\n    } else if (def.type === Types.REMOVE) {\n      filter(getters, value, input.mod, input.rem);\n      filter(getters, value, input.add, rem);\n      filter(getters, value, d._data, rem);\n    } else if (def.type === Types.UPSERT) {\n      input.mod.forEach(function(x) {\n        var every = getters.every(function(f) {\n          return f(x) === f(datum);\n        });\n\n        if (every) up = (dl.extend(x, datum), up+1);\n      });\n\n      if (up === 0) insert(input, datum, d);\n    } else if (def.type === Types.TOGGLE) {\n      // If tuples are in mod, remove them.\n      filter(getters, value, input.mod, rem);\n      input.rem.push.apply(input.rem, rem);\n\n      // If tuples are in add, they've been added to backing data source,\n      // but no downstream operators will have seen it yet.\n      filter(getters, value, input.add, add);\n\n      if (add.length || rem.length) {\n        d._data = d._data.filter(function(x) {\n          return rem.indexOf(x) < 0 && add.indexOf(x) < 0;\n        });\n      } else {\n        // If the tuples aren't seen in the changeset, add a new tuple.\n        // Note, tuple might be in input.rem, but we ignore this and just\n        // re-add a new tuple for simplicity.\n        input.add.push(t=Tuple.ingest(datum));\n        d._data.push(t);\n      }\n    } else if (def.type === Types.CLEAR) {\n      input.rem.push.apply(input.rem, input.mod.splice(0));\n      input.add.splice(0);\n      d._data.splice(0);\n    }\n\n    fields.forEach(function(f) { input.fields[f] = 1; });\n    return input;\n  };\n\n  if (signalName) node.dependency(Deps.SIGNALS, signalName);\n\n  if (predicate) {\n    node.dependency(Deps.DATA, predicate.data);\n    node.dependency(Deps.SIGNALS, predicate.signals);\n  }\n\n  if (exprTrigger) {\n    node.dependency(Deps.SIGNALS, exprTrigger.globals);\n    node.dependency(Deps.DATA,    exprTrigger.dataSources);\n  }\n\n  return node;\n}\n\nmodule.exports = parseModify;\nparseModify.schema = {\n  \"defs\": {\n    \"modify\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"oneOf\": [{\n          \"properties\": {\n            \"type\": {\"enum\": [\n              Types.INSERT, Types.REMOVE, Types.UPSERT, Types.TOGGLE\n            ]},\n            \"signal\": {\"type\": \"string\"},\n            \"field\": {\"type\": \"string\"}\n          },\n          \"required\": [\"type\", \"signal\"]\n        }, {\n          \"properties\": {\n            \"type\": {\"enum\": [Types.CLEAR]},\n            \"predicate\": {\"type\": \"string\"}  // TODO predicate args\n          },\n          \"required\": [\"type\", \"predicate\"]\n        },\n        {\n          \"properties\": {\n            \"type\": {\"enum\": [Types.CLEAR]},\n            \"test\": {\"type\": \"string\"}\n          },\n          \"required\": [\"type\", \"test\"]\n        }]\n      }\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/modify.js\n// module id = r7he\n// module chunks = 0","var Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform');\n\nfunction LinkPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    sourceX:  {type: 'field', default: '_source.layout_x'},\n    sourceY:  {type: 'field', default: '_source.layout_y'},\n    targetX:  {type: 'field', default: '_target.layout_x'},\n    targetY:  {type: 'field', default: '_target.layout_y'},\n    tension:  {type: 'value', default: 0.2},\n    shape:    {type: 'value', default: 'line'}\n  });\n\n  this._output = {'path': 'layout_path'};\n  return this.mutates(true);\n}\n\nvar prototype = (LinkPath.prototype = Object.create(Transform.prototype));\nprototype.constructor = LinkPath;\n\nfunction line(sx, sy, tx, ty) {\n  return 'M' + sx + ',' + sy +\n         'L' + tx + ',' + ty;\n}\n\nfunction curve(sx, sy, tx, ty, tension) {\n  var dx = tx - sx,\n      dy = ty - sy,\n      ix = tension * (dx + dy),\n      iy = tension * (dy - dx);\n  return 'M' + sx + ',' + sy +\n         'C' + (sx+ix) + ',' + (sy+iy) +\n         ' ' + (tx+iy) + ',' + (ty-ix) +\n         ' ' + tx + ',' + ty;\n}\n\nfunction cornerX(sx, sy, tx, ty) {\n  return 'M' + sx + ',' + sy +\n         'V' + ty + 'H' + tx;\n}\n\nfunction cornerY(sx, sy, tx, ty) {\n  return 'M' + sx + ',' + sy +\n         'H' + tx + 'V' + ty;\n}\n\nfunction cornerR(sa, sr, ta, tr) {\n  var sc = Math.cos(sa),\n      ss = Math.sin(sa),\n      tc = Math.cos(ta),\n      ts = Math.sin(ta),\n      sf = Math.abs(ta - sa) > Math.PI ? ta <= sa : ta > sa;\n  return 'M' + (sr*sc) + ',' + (sr*ss) +\n         'A' + sr + ',' + sr + ' 0 0,' + (sf?1:0) +\n         ' ' + (sr*tc) + ',' + (sr*ts) +\n         'L' + (tr*tc) + ',' + (tr*ts);\n}\n\nfunction diagonalX(sx, sy, tx, ty) {\n  var m = (sx + tx) / 2;\n  return 'M' + sx + ',' + sy +\n         'C' + m  + ',' + sy +\n         ' ' + m  + ',' + ty +\n         ' ' + tx + ',' + ty;\n}\n\nfunction diagonalY(sx, sy, tx, ty) {\n  var m = (sy + ty) / 2;\n  return 'M' + sx + ',' + sy +\n         'C' + sx + ',' + m +\n         ' ' + tx + ',' + m +\n         ' ' + tx + ',' + ty;\n}\n\nfunction diagonalR(sa, sr, ta, tr) {\n  var sc = Math.cos(sa),\n      ss = Math.sin(sa),\n      tc = Math.cos(ta),\n      ts = Math.sin(ta),\n      mr = (sr + tr) / 2;\n  return 'M' + (sr*sc) + ',' + (sr*ss) +\n         'C' + (mr*sc) + ',' + (mr*ss) +\n         ' ' + (mr*tc) + ',' + (mr*ts) +\n         ' ' + (tr*tc) + ',' + (tr*ts);\n}\n\nvar shapes = {\n  line:      line,\n  curve:     curve,\n  cornerX:   cornerX,\n  cornerY:   cornerY,\n  cornerR:   cornerR,\n  diagonalX: diagonalX,\n  diagonalY: diagonalY,\n  diagonalR: diagonalR\n};\n\nprototype.transform = function(input) {\n  log.debug(input, ['linkpath']);\n\n  var output = this._output,\n      shape = shapes[this.param('shape')] || shapes.line,\n      sourceX = this.param('sourceX').accessor,\n      sourceY = this.param('sourceY').accessor,\n      targetX = this.param('targetX').accessor,\n      targetY = this.param('targetY').accessor,\n      tension = this.param('tension');\n\n  function set(t) {\n    var path = shape(sourceX(t), sourceY(t), targetX(t), targetY(t), tension);\n    Tuple.set(t, output.path, path);\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = LinkPath;\n\nLinkPath.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"LinkPath transform\",\n  \"description\": \"Computes a path definition for connecting nodes within a node-link network or tree diagram.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"linkpath\"]},\n    \"sourceX\": {\n      \"description\": \"The data field that references the source x-coordinate for this link.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"_source\"\n    },\n    \"sourceY\": {\n      \"description\": \"The data field that references the source y-coordinate for this link.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"_source\"\n    },\n    \"targetX\": {\n      \"description\": \"The data field that references the target x-coordinate for this link.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"_target\"\n    },\n    \"targetY\": {\n      \"description\": \"The data field that references the target y-coordinate for this link.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"_target\"\n    },\n    \"tension\": {\n      \"description\": \"A tension parameter for the \\\"tightness\\\" of \\\"curve\\\"-shaped links.\",\n      \"oneOf\": [\n        {\n          \"type\": \"number\",\n          \"minimum\": 0,\n          \"maximum\": 1\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": 0.2\n    },\n    \"shape\": {\n      \"description\": \"The path shape to use\",\n      \"oneOf\": [\n        {\"enum\": [\"line\", \"curve\", \"cornerX\", \"cornerY\", \"cornerR\", \"diagonalX\", \"diagonalY\", \"diagonalR\"]},\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n      \"default\": \"line\"\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"path\": {\"type\": \"string\", \"default\": \"layout_path\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/LinkPath.js\n// module id = rCVn\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar fielddef_1 = require('../../fielddef');\nvar common_1 = require('../common');\nvar point;\n(function (point) {\n    function markType() {\n        return 'symbol';\n    }\n    point.markType = markType;\n    function properties(model, fixedShape) {\n        var p = {};\n        var config = model.config();\n        p.x = x(model.encoding().x, model.scaleName(channel_1.X), config);\n        p.y = y(model.encoding().y, model.scaleName(channel_1.Y), config);\n        p.size = size(model.encoding().size, model.scaleName(channel_1.SIZE), model.scale(channel_1.SIZE), config);\n        p.shape = shape(model.encoding().shape, model.scaleName(channel_1.SHAPE), model.scale(channel_1.SHAPE), config, fixedShape);\n        common_1.applyColorAndOpacity(p, model);\n        return p;\n    }\n    point.properties = properties;\n    function x(fieldDef, scaleName, config) {\n        if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef, { binSuffix: '_mid' })\n                };\n            }\n        }\n        return { value: config.scale.bandSize / 2 };\n    }\n    function y(fieldDef, scaleName, config) {\n        if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef, { binSuffix: '_mid' })\n                };\n            }\n        }\n        return { value: config.scale.bandSize / 2 };\n    }\n    function size(fieldDef, scaleName, scale, config) {\n        if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef, { scaleType: scale.type })\n                };\n            }\n            else if (fieldDef.value !== undefined) {\n                return { value: fieldDef.value };\n            }\n        }\n        return { value: config.mark.size };\n    }\n    function shape(fieldDef, scaleName, scale, config, fixedShape) {\n        if (fixedShape) {\n            return { value: fixedShape };\n        }\n        else if (fieldDef) {\n            if (fieldDef.field) {\n                return {\n                    scale: scaleName,\n                    field: fielddef_1.field(fieldDef, { scaleType: scale.type })\n                };\n            }\n            else if (fieldDef.value) {\n                return { value: fieldDef.value };\n            }\n        }\n        return { value: config.mark.shape };\n    }\n})(point = exports.point || (exports.point = {}));\nvar circle;\n(function (circle) {\n    function markType() {\n        return 'symbol';\n    }\n    circle.markType = markType;\n    function properties(model) {\n        return point.properties(model, 'circle');\n    }\n    circle.properties = properties;\n    function labels(model) {\n        return undefined;\n    }\n    circle.labels = labels;\n})(circle = exports.circle || (exports.circle = {}));\nvar square;\n(function (square) {\n    function markType() {\n        return 'symbol';\n    }\n    square.markType = markType;\n    function properties(model) {\n        return point.properties(model, 'square');\n    }\n    square.properties = properties;\n    function labels(model) {\n        return undefined;\n    }\n    square.labels = labels;\n})(square = exports.square || (exports.square = {}));\n//# sourceMappingURL=point.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/mark/point.js\n// module id = rKP5\n// module chunks = 0","module.exports = {\n  Handler:  require('./CanvasHandler'),\n  Renderer: require('./CanvasRenderer')\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/render/canvas/index.js\n// module id = rO1A\n// module chunks = 0","var dl = require('datalib'),\n    df = require('vega-dataflow'),\n    scene = require('vega-scenegraph'),\n    Node = df.Node, // jshint ignore:line\n    log = require('vega-logging'),\n    bound = scene.bound,\n    Bounds = scene.Bounds,\n    Encoder = require('./Encoder');\n\nfunction Bounder(graph, mark) {\n  this._mark = mark;\n  return Node.prototype.init.call(this, graph)\n    .router(true)\n    .reflows(true)\n    .mutates(true);\n}\n\nvar proto = (Bounder.prototype = new Node());\n\nproto.evaluate = function(input) {\n  log.debug(input, ['bounds', this._mark.marktype]);\n\n  var mark  = this._mark,\n      type  = mark.marktype,\n      isGrp = type === 'group',\n      items = mark.items,\n      hasLegends = dl.array(mark.def.legends).length > 0,\n      bounds  = mark.bounds,\n      rebound = !bounds || input.rem.length,\n      i, ilen, j, jlen, group, legend;\n\n  if (type === 'line' || type === 'area') {\n    bound.mark(mark, null, isGrp && !hasLegends);\n  } else {\n    input.add.forEach(function(item) {\n      bound.item(item);\n      rebound = rebound || (bounds && !bounds.encloses(item.bounds));\n    });\n\n    input.mod.forEach(function(item) {\n      rebound = rebound || (bounds && bounds.alignsWith(item.bounds));\n      bound.item(item);\n    });\n\n    if (rebound) {\n      bounds = mark.bounds && mark.bounds.clear() || (mark.bounds = new Bounds());\n      for (i=0, ilen=items.length; i<ilen; ++i) bounds.union(items[i].bounds);\n    }\n  }\n\n  if (isGrp && hasLegends) {\n    for (i=0, ilen=items.length; i<ilen; ++i) {\n      group = items[i];\n      group._legendPositions = null;\n      for (j=0, jlen=group.legendItems.length; j<jlen; ++j) {\n        legend = group.legendItems[j];\n        Encoder.update(this._graph, input.trans, 'legendPosition', legend.items, input.dirty);\n        bound.mark(legend, null, false);\n      }\n    }\n\n    bound.mark(mark, null, true);\n  }\n\n  return df.ChangeSet.create(input, true);\n};\n\nmodule.exports = Bounder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/scene/Bounder.js\n// module id = rnWk\n// module chunks = 0","var d3 = require('d3'),\n    dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Geo = require('./Geo'),\n    Transform = require('./Transform');\n\nfunction GeoPath(graph) {\n  Transform.prototype.init.call(this, graph);\n  Transform.addParameters(this, Geo.Parameters);\n  Transform.addParameters(this, {\n    field: {type: 'field', default: null},\n  });\n\n  this._output = {\n    'path': 'layout_path'\n  };\n  return this.mutates(true);\n}\n\nvar prototype = (GeoPath.prototype = Object.create(Transform.prototype));\nprototype.constructor = GeoPath;\n\nprototype.transform = function(input) {\n  log.debug(input, ['geopath']);\n\n  var output = this._output,\n      geojson = this.param('field').accessor || dl.identity,\n      proj = Geo.d3Projection.call(this),\n      path = d3.geo.path().projection(proj);\n\n  function set(t) {\n    Tuple.set(t, output.path, path(geojson(t)));\n  }\n\n  input.add.forEach(set);\n  if (this.reevaluate(input)) {\n    input.mod.forEach(set);\n    input.rem.forEach(set);\n  }\n\n  input.fields[output.path] = 1;\n  return input;\n};\n\nmodule.exports = GeoPath;\n\nGeoPath.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"GeoPath transform\",\n  \"description\": \"Creates paths for geographic regions, such as countries, states and counties.\",\n  \"type\": \"object\",\n  \"properties\": dl.extend({\n    \"type\": {\"enum\": [\"geopath\"]},\n    \"field\": {\n      \"description\": \"The data field containing GeoJSON Feature data.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"path\": {\"type\": \"string\", \"default\": \"layout_path\"}\n      },\n      \"additionalProperties\": false\n    }\n  }, Geo.baseSchema),\n  \"required\": [\"type\"],\n  \"additionalProperties\": false\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/GeoPath.js\n// module id = snBf\n// module chunks = 0","var DOM = require('../../util/dom'),\n    Bounds = require('../../util/Bounds'),\n    ImageLoader = require('../../util/ImageLoader'),\n    Canvas = require('../../util/canvas'),\n    Renderer = require('../Renderer'),\n    marks = require('./marks');\n\nfunction CanvasRenderer(loadConfig) {\n  Renderer.call(this);\n  this._loader = new ImageLoader(loadConfig);\n}\n\nCanvasRenderer.RETINA = true;\n\nvar base = Renderer.prototype;\nvar prototype = (CanvasRenderer.prototype = Object.create(base));\nprototype.constructor = CanvasRenderer;\n\nprototype.initialize = function(el, width, height, padding) {\n  this._canvas = Canvas.instance(width, height);\n  if (el) {\n    DOM.clear(el, 0).appendChild(this._canvas);\n    this._canvas.setAttribute('class', 'marks');\n  }\n  return base.initialize.call(this, el, width, height, padding);\n};\n\nprototype.resize = function(width, height, padding) {\n  base.resize.call(this, width, height, padding);\n  Canvas.resize(this._canvas, this._width, this._height,\n    this._padding, CanvasRenderer.RETINA);\n  return this;\n};\n\nprototype.canvas = function() {\n  return this._canvas;\n};\n\nprototype.context = function() {\n  return this._canvas ? this._canvas.getContext('2d') : null;\n};\n\nprototype.pendingImages = function() {\n  return this._loader.pending();\n};\n\nfunction clipToBounds(g, items) {\n  if (!items) return null;\n\n  var b = new Bounds(), i, n, item, mark, group;\n  for (i=0, n=items.length; i<n; ++i) {\n    item = items[i];\n    mark = item.mark;\n    group = mark.group;\n    item = marks[mark.marktype].nested ? mark : item;\n    b.union(translate(item.bounds, group));\n    if (item['bounds:prev']) {\n      b.union(translate(item['bounds:prev'], group));\n    }\n  }\n  b.round();\n\n  g.beginPath();\n  g.rect(b.x1, b.y1, b.width(), b.height());\n  g.clip();\n\n  return b;\n}\n\nfunction translate(bounds, group) {\n  if (group == null) return bounds;\n  var b = bounds.clone();\n  for (; group != null; group = group.mark.group) {\n    b.translate(group.x || 0, group.y || 0);\n  }\n  return b;\n}\n\nprototype.render = function(scene, items) {\n  var g = this.context(),\n      p = this._padding,\n      w = this._width + p.left + p.right,\n      h = this._height + p.top + p.bottom,\n      b;\n\n  // setup\n  this._scene = scene; // cache scene for async redraw\n  g.save();\n  b = clipToBounds(g, items);\n  this.clear(-p.left, -p.top, w, h);\n\n  // render\n  this.draw(g, scene, b);\n  \n  // takedown\n  g.restore();\n  this._scene = null; // clear scene cache\n\n  return this;\n};\n\nprototype.draw = function(ctx, scene, bounds) {\n  var mark = marks[scene.marktype];\n  mark.draw.call(this, ctx, scene, bounds);\n};\n\nprototype.clear = function(x, y, w, h) {\n  var g = this.context();\n  g.clearRect(x, y, w, h);\n  if (this._bgcolor != null) {\n    g.fillStyle = this._bgcolor;\n    g.fillRect(x, y, w, h); \n  }\n};\n\nprototype.loadImage = function(uri) {\n  var renderer = this,\n      scene = this._scene;\n  return this._loader.loadImage(uri, function() {\n    renderer.renderAsync(scene);\n  });\n};\n\nprototype.renderAsync = function(scene) {\n  // TODO make safe for multiple scene rendering?\n  var renderer = this;\n  if (renderer._async_id) {\n    clearTimeout(renderer._async_id);\n  }\n  renderer._async_id = setTimeout(function() {\n    renderer.render(scene);\n    delete renderer._async_id;\n  }, 10);\n};\n\nmodule.exports = CanvasRenderer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/render/canvas/CanvasRenderer.js\n// module id = suYa\n// module chunks = 0","\"use strict\";\nvar util_1 = require('../../util');\nvar DEFAULT_NULL_FILTERS = {\n    nominal: false,\n    ordinal: false,\n    quantitative: true,\n    temporal: true\n};\nvar nullFilter;\n(function (nullFilter) {\n    function parse(model) {\n        var filterNull = model.transform().filterNull;\n        return model.reduce(function (aggregator, fieldDef) {\n            if (filterNull ||\n                (filterNull === undefined && fieldDef.field && fieldDef.field !== '*' && DEFAULT_NULL_FILTERS[fieldDef.type])) {\n                aggregator[fieldDef.field] = true;\n            }\n            else {\n                aggregator[fieldDef.field] = false;\n            }\n            return aggregator;\n        }, {});\n    }\n    nullFilter.parseUnit = parse;\n    function parseFacet(model) {\n        var nullFilterComponent = parse(model);\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source) {\n            util_1.extend(nullFilterComponent, childDataComponent.nullFilter);\n            delete childDataComponent.nullFilter;\n        }\n        return nullFilterComponent;\n    }\n    nullFilter.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var nullFilterComponent = parse(model);\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (model.compatibleSource(child) && !util_1.differ(childDataComponent.nullFilter, nullFilterComponent)) {\n                util_1.extend(nullFilterComponent, childDataComponent.nullFilter);\n                delete childDataComponent.nullFilter;\n            }\n        });\n        return nullFilterComponent;\n    }\n    nullFilter.parseLayer = parseLayer;\n    function assemble(component) {\n        var filteredFields = util_1.keys(component.nullFilter).filter(function (field) {\n            return component.nullFilter[field];\n        });\n        return filteredFields.length > 0 ?\n            [{\n                    type: 'filter',\n                    test: filteredFields.map(function (fieldName) {\n                        return '(datum.' + fieldName + '!==null' +\n                            ' && !isNaN(datum.' + fieldName + '))';\n                    }).join(' && ')\n                }] : [];\n    }\n    nullFilter.assemble = assemble;\n})(nullFilter = exports.nullFilter || (exports.nullFilter = {}));\n//# sourceMappingURL=nullfilter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/nullfilter.js\n// module id = t3C9\n// module chunks = 0","var util = require('../util'),\n    Measures = require('./measures'),\n    Collector = require('./collector');\n\nfunction Aggregator() {\n  this._cells = {};\n  this._aggr = [];\n  this._stream = false;\n}\n\nvar Flags = Aggregator.Flags = {\n  ADD_CELL: 1,\n  MOD_CELL: 2\n};\n\nvar proto = Aggregator.prototype;\n\n// Parameters\n\nproto.stream = function(v) {\n  if (v == null) return this._stream;\n  this._stream = !!v;\n  this._aggr = [];\n  return this;\n};\n\n// key accessor to use for streaming removes\nproto.key = function(key) {\n  if (key == null) return this._key;\n  this._key = util.$(key);\n  return this;\n};\n\n// Input: array of objects of the form\n// {name: string, get: function}\nproto.groupby = function(dims) {\n  this._dims = util.array(dims).map(function(d, i) {\n    d = util.isString(d) ? {name: d, get: util.$(d)}\n      : util.isFunction(d) ? {name: util.name(d) || d.name || ('_' + i), get: d}\n      : (d.name && util.isFunction(d.get)) ? d : null;\n    if (d == null) throw 'Invalid groupby argument: ' + d;\n    return d;\n  });\n  return this.clear();\n};\n\n// Input: array of objects of the form\n// {name: string, ops: [string, ...]}\nproto.summarize = function(fields) {\n  fields = summarize_args(fields);\n  this._count = true;\n  var aggr = (this._aggr = []),\n      m, f, i, j, op, as, get;\n\n  for (i=0; i<fields.length; ++i) {\n    for (j=0, m=[], f=fields[i]; j<f.ops.length; ++j) {\n      op = f.ops[j];\n      if (op !== 'count') this._count = false;\n      as = (f.as && f.as[j]) || (op + (f.name==='*' ? '' : '_'+f.name));\n      m.push(Measures[op](as));\n    }\n    get = f.get && util.$(f.get) ||\n      (f.name === '*' ? util.identity : util.$(f.name));\n    aggr.push({\n      name: f.name,\n      measures: Measures.create(\n        m,\n        this._stream, // streaming remove flag\n        get,          // input tuple getter\n        this._assign) // output tuple setter\n    });\n  }\n  return this.clear();\n};\n\n// Convenience method to summarize by count\nproto.count = function() {\n  return this.summarize({'*':'count'});\n};\n\n// Override to perform custom tuple value assignment\nproto._assign = function(object, name, value) {\n  object[name] = value;\n};\n\nfunction summarize_args(fields) {\n  if (util.isArray(fields)) { return fields; }\n  if (fields == null) { return []; }\n  var a = [], name, ops;\n  for (name in fields) {\n    ops = util.array(fields[name]);\n    a.push({name: name, ops: ops});\n  }\n  return a;\n}\n\n// Cell Management\n\nproto.clear = function() {\n  return (this._cells = {}, this);\n};\n\nproto._cellkey = function(x) {\n  var d = this._dims,\n      n = d.length, i,\n      k = String(d[0].get(x));\n  for (i=1; i<n; ++i) {\n    k += '|' + d[i].get(x);\n  }\n  return k;\n};\n\nproto._cell = function(x) {\n  var key = this._dims.length ? this._cellkey(x) : '';\n  return this._cells[key] || (this._cells[key] = this._newcell(x, key));\n};\n\nproto._newcell = function(x, key) {\n  var cell = {\n    num:   0,\n    tuple: this._newtuple(x, key),\n    flag:  Flags.ADD_CELL,\n    aggs:  {}\n  };\n\n  var aggr = this._aggr, i;\n  for (i=0; i<aggr.length; ++i) {\n    cell.aggs[aggr[i].name] = new aggr[i].measures(cell, cell.tuple);\n  }\n  if (cell.collect) {\n    cell.data = new Collector(this._key);\n  }\n  return cell;\n};\n\nproto._newtuple = function(x) {\n  var dims = this._dims,\n      t = {}, i, n;\n  for (i=0, n=dims.length; i<n; ++i) {\n    t[dims[i].name] = dims[i].get(x);\n  }\n  return this._ingest(t);\n};\n\n// Override to perform custom tuple ingestion\nproto._ingest = util.identity;\n\n// Process Tuples\n\nproto._add = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num += 1;\n  if (!this._count) { // skip if count-only\n    if (cell.collect) cell.data.add(x);\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].add(x);\n    }\n  }\n  cell.flag |= Flags.MOD_CELL;\n  if (this._on_add) this._on_add(x, cell);\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num -= 1;\n  if (!this._count) { // skip if count-only\n    if (cell.collect) cell.data.rem(x);\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].rem(x);\n    }\n  }\n  cell.flag |= Flags.MOD_CELL;\n  if (this._on_rem) this._on_rem(x, cell);\n};\n\nproto._mod = function(curr, prev) {\n  var cell0 = this._cell(prev),\n      cell1 = this._cell(curr),\n      aggr = this._aggr, i;\n\n  if (cell0 !== cell1) {\n    cell0.num -= 1;\n    cell1.num += 1;\n    if (cell0.collect) cell0.data.rem(prev);\n    if (cell1.collect) cell1.data.add(curr);\n  } else if (cell0.collect && !util.isObject(curr)) {\n    cell0.data.rem(prev);\n    cell0.data.add(curr);\n  }\n\n  for (i=0; i<aggr.length; ++i) {\n    cell0.aggs[aggr[i].name].rem(prev);\n    cell1.aggs[aggr[i].name].add(curr);\n  }\n  cell0.flag |= Flags.MOD_CELL;\n  cell1.flag |= Flags.MOD_CELL;\n  if (this._on_mod) this._on_mod(curr, prev, cell0, cell1);\n};\n\nproto._markMod = function(x) {\n  var cell0 = this._cell(x);\n  cell0.flag |= Flags.MOD_CELL;\n};\n\nproto.result = function() {\n  var result = [],\n      aggr = this._aggr,\n      cell, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    if (cell.num > 0) {\n      // consolidate collector values\n      if (cell.collect) {\n        cell.data.values();\n      }\n      // update tuple properties\n      for (i=0; i<aggr.length; ++i) {\n        cell.aggs[aggr[i].name].set();\n      }\n      // add output tuple\n      result.push(cell.tuple);\n    } else {\n      delete this._cells[k];\n    }\n    cell.flag = 0;\n  }\n\n  this._rems = false;\n  return result;\n};\n\nproto.changes = function(output) {\n  var changes = output || {add:[], rem:[], mod:[]},\n      aggr = this._aggr,\n      cell, flag, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    flag = cell.flag;\n\n    // consolidate collector values\n    if (cell.collect) {\n      cell.data.values();\n    }\n\n    // update tuple properties\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].set();\n    }\n\n    // organize output tuples\n    if (cell.num <= 0) {\n      changes.rem.push(cell.tuple); // if (flag === Flags.MOD_CELL) { ??\n      delete this._cells[k];\n      if (this._on_drop) this._on_drop(cell);\n    } else {\n      if (this._on_keep) this._on_keep(cell);\n      if (flag & Flags.ADD_CELL) {\n        changes.add.push(cell.tuple);\n      } else if (flag & Flags.MOD_CELL) {\n        changes.mod.push(cell.tuple);\n      }\n    }\n\n    cell.flag = 0;\n  }\n\n  this._rems = false;\n  return changes;\n};\n\nproto.execute = function(input) {\n  return this.clear().insert(input).result();\n};\n\nproto.insert = function(input) {\n  this._consolidate();\n  for (var i=0; i<input.length; ++i) {\n    this._add(input[i]);\n  }\n  return this;\n};\n\nproto.remove = function(input) {\n  if (!this._stream) {\n    throw 'Aggregator not configured for streaming removes.' +\n      ' Call stream(true) prior to calling summarize.';\n  }\n  for (var i=0; i<input.length; ++i) {\n    this._rem(input[i]);\n  }\n  this._rems = true;\n  return this;\n};\n\n// consolidate removals\nproto._consolidate = function() {\n  if (!this._rems) return;\n  for (var k in this._cells) {\n    if (this._cells[k].collect) {\n      this._cells[k].data.values();\n    }\n  }\n  this._rems = false;\n};\n\nmodule.exports = Aggregator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/aggregate/aggregator.js\n// module id = tGq9\n// module chunks = 0","var segmentCache = {},\n    bezierCache = {},\n    join = [].join;\n\n// Copied from Inkscape svgtopdf, thanks!\nfunction segments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  var key = join.call(arguments);\n  if (segmentCache[key]) {\n    return segmentCache[key];\n  }\n\n  var th = rotateX * (Math.PI/180);\n  var sin_th = Math.sin(th);\n  var cos_th = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  var px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n  var py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n  var pl = (px*px) / (rx*rx) + (py*py) / (ry*ry);\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n\n  var a00 = cos_th / rx;\n  var a01 = sin_th / rx;\n  var a10 = (-sin_th) / ry;\n  var a11 = (cos_th) / ry;\n  var x0 = a00 * ox + a01 * oy;\n  var y0 = a10 * ox + a11 * oy;\n  var x1 = a00 * x + a01 * y;\n  var y1 = a10 * x + a11 * y;\n\n  var d = (x1-x0) * (x1-x0) + (y1-y0) * (y1-y0);\n  var sfactor_sq = 1 / d - 0.25;\n  if (sfactor_sq < 0) sfactor_sq = 0;\n  var sfactor = Math.sqrt(sfactor_sq);\n  if (sweep == large) sfactor = -sfactor;\n  var xc = 0.5 * (x0 + x1) - sfactor * (y1-y0);\n  var yc = 0.5 * (y0 + y1) + sfactor * (x1-x0);\n\n  var th0 = Math.atan2(y0-yc, x0-xc);\n  var th1 = Math.atan2(y1-yc, x1-xc);\n\n  var th_arc = th1-th0;\n  if (th_arc < 0 && sweep === 1){\n    th_arc += 2 * Math.PI;\n  } else if (th_arc > 0 && sweep === 0) {\n    th_arc -= 2 * Math.PI;\n  }\n\n  var segs = Math.ceil(Math.abs(th_arc / (Math.PI * 0.5 + 0.001)));\n  var result = [];\n  for (var i=0; i<segs; ++i) {\n    var th2 = th0 + i * th_arc / segs;\n    var th3 = th0 + (i+1) * th_arc / segs;\n    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n  }\n\n  return (segmentCache[key] = result);\n}\n\nfunction bezier(params) {\n  var key = join.call(params);\n  if (bezierCache[key]) {\n    return bezierCache[key];\n  }\n  \n  var cx = params[0],\n      cy = params[1],\n      th0 = params[2],\n      th1 = params[3],\n      rx = params[4],\n      ry = params[5],\n      sin_th = params[6],\n      cos_th = params[7];\n\n  var a00 = cos_th * rx;\n  var a01 = -sin_th * ry;\n  var a10 = sin_th * rx;\n  var a11 = cos_th * ry;\n\n  var cos_th0 = Math.cos(th0);\n  var sin_th0 = Math.sin(th0);\n  var cos_th1 = Math.cos(th1);\n  var sin_th1 = Math.sin(th1);\n\n  var th_half = 0.5 * (th1 - th0);\n  var sin_th_h2 = Math.sin(th_half * 0.5);\n  var t = (8/3) * sin_th_h2 * sin_th_h2 / Math.sin(th_half);\n  var x1 = cx + cos_th0 - t * sin_th0;\n  var y1 = cy + sin_th0 + t * cos_th0;\n  var x3 = cx + cos_th1;\n  var y3 = cy + sin_th1;\n  var x2 = x3 + t * sin_th1;\n  var y2 = y3 - t * cos_th1;\n\n  return (bezierCache[key] = [\n    a00 * x1 + a01 * y1,  a10 * x1 + a11 * y1,\n    a00 * x2 + a01 * y2,  a10 * x2 + a11 * y2,\n    a00 * x3 + a01 * y3,  a10 * x3 + a11 * y3\n  ]);\n}\n\nmodule.exports = {\n  segments: segments,\n  bezier: bezier,\n  cache: {\n    segments: segmentCache,\n    bezier: bezierCache\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/path/arc.js\n// module id = tKPL\n// module chunks = 0","var util = require('./util'),\n    parse = require('../../../path/parse'),\n    render = require('../../../path/render'),\n    linePath = require('../../../util/svg').path.line;\n    \nfunction path(g, items) {\n  var o = items[0],\n      p = o.pathCache || (o.pathCache = parse(linePath(items)));\n  render(g, p);\n}\n\nfunction pick(g, scene, x, y, gx, gy) {\n  var items = scene.items,\n      b = scene.bounds;\n\n  if (!items || !items.length || b && !b.contains(gx, gy)) {\n    return null;\n  }\n\n  if (g.pixelratio != null && g.pixelratio !== 1) {\n    x *= g.pixelratio;\n    y *= g.pixelratio;\n  }\n  return hit(g, items, x, y) ? items[0] : null;\n}\n\nvar hit = util.testPath(path, false);\n\nmodule.exports = {\n  draw: util.drawOne(path),\n  pick: pick,\n  nested: true\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/render/canvas/marks/line.js\n// module id = tT5v\n// module chunks = 0","module.exports = {\n  'canvas': require('./canvas'),\n  'svg':    require('./svg')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/render/index.js\n// module id = tb3c\n// module chunks = 0","var util = require('./util');\n\nfunction draw(g, scene, bounds) {\n  if (!scene.items || !scene.items.length) return;\n\n  var items = scene.items,\n      o, opac, x, y, w, h;\n\n  for (var i=0, len=items.length; i<len; ++i) {\n    o = items[i];\n    if (bounds && !bounds.intersects(o.bounds))\n      continue; // bounds check\n\n    opac = o.opacity == null ? 1 : o.opacity;\n    if (opac === 0) continue;\n\n    x = o.x || 0;\n    y = o.y || 0;\n    w = o.width || 0;\n    h = o.height || 0;\n\n    if (o.fill && util.fill(g, o, opac)) {\n      g.fillRect(x, y, w, h);\n    }\n    if (o.stroke && util.stroke(g, o, opac)) {\n      g.strokeRect(x, y, w, h);\n    }\n  }\n}\n\nmodule.exports = {\n  draw: draw,\n  pick: util.pick()\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/render/canvas/marks/rect.js\n// module id = tbPx\n// module chunks = 0","var util = require('./util');\nvar type = require('./import/type');\nvar gen = require('./generate');\n\nvar stats = module.exports;\n\n// Collect unique values.\n// Output: an array of unique values, in first-observed order\nstats.unique = function(values, f, results) {\n  f = util.$(f);\n  results = results || [];\n  var u = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    results.push(v);\n  }\n  return results;\n};\n\n// Return the length of the input array.\nstats.count = function(values) {\n  return values && values.length || 0;\n};\n\n// Count the number of non-null, non-undefined, non-NaN values.\nstats.count.valid = function(values, f) {\n  f = util.$(f);\n  var v, i, n, valid = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) valid += 1;\n  }\n  return valid;\n};\n\n// Count the number of null or undefined values.\nstats.count.missing = function(values, f) {\n  f = util.$(f);\n  var v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\n// Count the number of distinct values.\n// Null, undefined and NaN are each considered distinct values.\nstats.count.distinct = function(values, f) {\n  f = util.$(f);\n  var u = {}, v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\n// Construct a map from distinct values to occurrence counts.\nstats.count.map = function(values, f) {\n  f = util.$(f);\n  var map = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    map[v] = (v in map) ? map[v] + 1 : 1;\n  }\n  return map;\n};\n\n// Compute the median of an array of numbers.\nstats.median = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  return stats.quantile(values, 0.5);\n};\n\n// Computes the quartile boundaries of an array of numbers.\nstats.quartile = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  var q = stats.quantile;\n  return [q(values, 0.25), q(values, 0.50), q(values, 0.75)];\n};\n\n// Compute the quantile of a sorted array of numbers.\n// Adapted from the D3.js implementation.\nstats.quantile = function(values, f, p) {\n  if (p === undefined) { p = f; f = util.identity; }\n  f = util.$(f);\n  var H = (values.length - 1) * p + 1,\n      h = Math.floor(H),\n      v = +f(values[h - 1]),\n      e = H - h;\n  return e ? v + e * (f(values[h]) - v) : v;\n};\n\n// Compute the sum of an array of numbers.\nstats.sum = function(values, f) {\n  f = util.$(f);\n  for (var sum=0, i=0, n=values.length, v; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) sum += v;\n  }\n  return sum;\n};\n\n// Compute the mean (average) of an array of numbers.\nstats.mean = function(values, f) {\n  f = util.$(f);\n  var mean = 0, delta, i, n, c, v;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\n// Compute the geometric mean of an array of numbers.\nstats.mean.geometric = function(values, f) {\n  f = util.$(f);\n  var mean = 1, c, n, v, i;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v <= 0) {\n        throw Error(\"Geometric mean only defined for positive values.\");\n      }\n      mean *= v;\n      ++c;\n    }\n  }\n  mean = c > 0 ? Math.pow(mean, 1/c) : 0;\n  return mean;\n};\n\n// Compute the harmonic mean of an array of numbers.\nstats.mean.harmonic = function(values, f) {\n  f = util.$(f);\n  var mean = 0, c, n, v, i;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      mean += 1/v;\n      ++c;\n    }\n  }\n  return c / mean;\n};\n\n// Compute the sample variance of an array of numbers.\nstats.variance = function(values, f) {\n  f = util.$(f);\n  if (!util.isArray(values) || values.length < 2) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\n// Compute the sample standard deviation of an array of numbers.\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\n// Compute the Pearson mode skewness ((median-mean)/stdev) of an array of numbers.\nstats.modeskew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\n// Find the minimum value in an array.\nstats.min = function(values, f) {\n  return stats.extent(values, f)[0];\n};\n\n// Find the maximum value in an array.\nstats.max = function(values, f) {\n  return stats.extent(values, f)[1];\n};\n\n// Find the minimum and maximum of an array of values.\nstats.extent = function(values, f) {\n  f = util.$(f);\n  var a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) a = v;\n      if (v > b) b = v;\n    }\n  }\n  return [a, b];\n};\n\n// Find the integer indices of the minimum and maximum values.\nstats.extent.index = function(values, f) {\n  f = util.$(f);\n  var x = -1, y = -1, a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; x = y = i; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) { a = v; x = i; }\n      if (v > b) { b = v; y = i; }\n    }\n  }\n  return [x, y];\n};\n\n// Compute the dot product of two arrays of numbers.\nstats.dot = function(values, a, b) {\n  var sum = 0, i, v;\n  if (!b) {\n    if (values.length !== a.length) {\n      throw Error('Array lengths must match.');\n    }\n    for (i=0; i<values.length; ++i) {\n      v = values[i] * a[i];\n      if (v === v) sum += v;\n    }\n  } else {\n    a = util.$(a);\n    b = util.$(b);\n    for (i=0; i<values.length; ++i) {\n      v = a(values[i]) * b(values[i]);\n      if (v === v) sum += v;\n    }\n  }\n  return sum;\n};\n\n// Compute the vector distance between two arrays of numbers.\n// Default is Euclidean (exp=2) distance, configurable via exp argument.\nstats.dist = function(values, a, b, exp) {\n  var f = util.isFunction(b) || util.isString(b),\n      X = values,\n      Y = f ? values : a,\n      e = f ? exp : b,\n      L2 = e === 2 || e == null,\n      n = values.length, s = 0, d, i;\n  if (f) {\n    a = util.$(a);\n    b = util.$(b);\n  }\n  for (i=0; i<n; ++i) {\n    d = f ? (a(X[i])-b(Y[i])) : (X[i]-Y[i]);\n    s += L2 ? d*d : Math.pow(Math.abs(d), e);\n  }\n  return L2 ? Math.sqrt(s) : Math.pow(s, 1/e);\n};\n\n// Compute the Cohen's d effect size between two arrays of numbers.\nstats.cohensd = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a,\n      x1 = stats.mean(X),\n      x2 = stats.mean(Y),\n      n1 = stats.count.valid(X),\n      n2 = stats.count.valid(Y);\n\n  if ((n1+n2-2) <= 0) {\n    // if both arrays are size 1, or one is empty, there's no effect size\n    return 0;\n  }\n  // pool standard deviation\n  var s1 = stats.variance(X),\n      s2 = stats.variance(Y),\n      s = Math.sqrt((((n1-1)*s1) + ((n2-1)*s2)) / (n1+n2-2));\n  // if there is no variance, there's no effect size\n  return s===0 ? 0 : (x1 - x2) / s;\n};\n\n// Computes the covariance between two arrays of numbers\nstats.covariance = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a,\n      n = X.length,\n      xm = stats.mean(X),\n      ym = stats.mean(Y),\n      sum = 0, c = 0, i, x, y, vx, vy;\n\n  if (n !== Y.length) {\n    throw Error('Input lengths must match.');\n  }\n\n  for (i=0; i<n; ++i) {\n    x = X[i]; vx = util.isValid(x);\n    y = Y[i]; vy = util.isValid(y);\n    if (vx && vy) {\n      sum += (x-xm) * (y-ym);\n      ++c;\n    } else if (vx || vy) {\n      throw Error('Valid values must align.');\n    }\n  }\n  return sum / (c-1);\n};\n\n// Compute ascending rank scores for an array of values.\n// Ties are assigned their collective mean rank.\nstats.rank = function(values, f) {\n  f = util.$(f) || util.identity;\n  var a = values.map(function(v, i) {\n      return {idx: i, val: f(v)};\n    })\n    .sort(util.comparator('val'));\n\n  var n = values.length,\n      r = Array(n),\n      tie = -1, p = {}, i, v, mu;\n\n  for (i=0; i<n; ++i) {\n    v = a[i].val;\n    if (tie < 0 && p === v) {\n      tie = i - 1;\n    } else if (tie > -1 && p !== v) {\n      mu = 1 + (i-1 + tie) / 2;\n      for (; tie<i; ++tie) r[a[tie].idx] = mu;\n      tie = -1;\n    }\n    r[a[i].idx] = i + 1;\n    p = v;\n  }\n\n  if (tie > -1) {\n    mu = 1 + (n-1 + tie) / 2;\n    for (; tie<n; ++tie) r[a[tie].idx] = mu;\n  }\n\n  return r;\n};\n\n// Compute the sample Pearson product-moment correlation of two arrays of numbers.\nstats.cor = function(values, a, b) {\n  var fn = b;\n  b = fn ? values.map(util.$(b)) : a;\n  a = fn ? values.map(util.$(a)) : values;\n\n  var dot = stats.dot(a, b),\n      mua = stats.mean(a),\n      mub = stats.mean(b),\n      sda = stats.stdev(a),\n      sdb = stats.stdev(b),\n      n = values.length;\n\n  return (dot - n*mua*mub) / ((n-1) * sda * sdb);\n};\n\n// Compute the Spearman rank correlation of two arrays of values.\nstats.cor.rank = function(values, a, b) {\n  var ra = b ? stats.rank(values, a) : stats.rank(values),\n      rb = b ? stats.rank(values, b) : stats.rank(a),\n      n = values.length, i, s, d;\n\n  for (i=0, s=0; i<n; ++i) {\n    d = ra[i] - rb[i];\n    s += d * d;\n  }\n\n  return 1 - 6*s / (n * (n*n-1));\n};\n\n// Compute the distance correlation of two arrays of numbers.\n// http://en.wikipedia.org/wiki/Distance_correlation\nstats.cor.dist = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a;\n\n  var A = stats.dist.mat(X),\n      B = stats.dist.mat(Y),\n      n = A.length,\n      i, aa, bb, ab;\n\n  for (i=0, aa=0, bb=0, ab=0; i<n; ++i) {\n    aa += A[i]*A[i];\n    bb += B[i]*B[i];\n    ab += A[i]*B[i];\n  }\n\n  return Math.sqrt(ab / Math.sqrt(aa*bb));\n};\n\n// Simple linear regression.\n// Returns a \"fit\" object with slope (m), intercept (b),\n// r value (R), and sum-squared residual error (rss).\nstats.linearRegression = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a,\n      n = X.length,\n      xy = stats.covariance(X, Y), // will throw err if valid vals don't align\n      sx = stats.stdev(X),\n      sy = stats.stdev(Y),\n      slope = xy / (sx*sx),\n      icept = stats.mean(Y) - slope * stats.mean(X),\n      fit = {slope: slope, intercept: icept, R: xy / (sx*sy), rss: 0},\n      res, i;\n\n  for (i=0; i<n; ++i) {\n    if (util.isValid(X[i]) && util.isValid(Y[i])) {\n      res = (slope*X[i] + icept) - Y[i];\n      fit.rss += res * res;\n    }\n  }\n\n  return fit;\n};\n\n// Namespace for bootstrap\nstats.bootstrap = {};\n\n// Construct a bootstrapped confidence interval at a given percentile level\n// Arguments are an array, an optional n (defaults to 1000),\n//  an optional alpha (defaults to 0.05), and an optional smoothing parameter\nstats.bootstrap.ci = function(values, a, b, c, d) {\n  var X, N, alpha, smooth, bs, means, i;\n  if (util.isFunction(a) || util.isString(a)) {\n    X = values.map(util.$(a));\n    N = b;\n    alpha = c;\n    smooth = d;\n  } else {\n    X = values;\n    N = a;\n    alpha = b;\n    smooth = c;\n  }\n  N = N ? +N : 1000;\n  alpha = alpha || 0.05;\n\n  bs = gen.random.bootstrap(X, smooth);\n  for (i=0, means = Array(N); i<N; ++i) {\n    means[i] = stats.mean(bs.samples(X.length));\n  }\n  means.sort(util.numcmp);\n  return [\n    stats.quantile(means, alpha/2),\n    stats.quantile(means, 1-(alpha/2))\n  ];\n};\n\n// Namespace for z-tests\nstats.z = {};\n\n// Construct a z-confidence interval at a given significance level\n// Arguments are an array and an optional alpha (defaults to 0.05).\nstats.z.ci = function(values, a, b) {\n  var X = values, alpha = a;\n  if (util.isFunction(a) || util.isString(a)) {\n    X = values.map(util.$(a));\n    alpha = b;\n  }\n  alpha = alpha || 0.05;\n\n  var z = alpha===0.05 ? 1.96 : gen.random.normal(0, 1).icdf(1-(alpha/2)),\n      mu = stats.mean(X),\n      SE = stats.stdev(X) / Math.sqrt(stats.count.valid(X));\n  return [mu - (z*SE), mu + (z*SE)];\n};\n\n// Perform a z-test of means. Returns the p-value.\n// If a single array is provided, performs a one-sample location test.\n// If two arrays or a table and two accessors are provided, performs\n// a two-sample location test. A paired test is performed if specified\n// by the options hash.\n// The options hash format is: {paired: boolean, nullh: number}.\n// http://en.wikipedia.org/wiki/Z-test\n// http://en.wikipedia.org/wiki/Paired_difference_test\nstats.z.test = function(values, a, b, opt) {\n  if (util.isFunction(b) || util.isString(b)) { // table and accessors\n    return (opt && opt.paired ? ztestP : ztest2)(opt, values, a, b);\n  } else if (util.isArray(a)) { // two arrays\n    return (b && b.paired ? ztestP : ztest2)(b, values, a);\n  } else if (util.isFunction(a) || util.isString(a)) {\n    return ztest1(b, values, a); // table and accessor\n  } else {\n    return ztest1(a, values); // one array\n  }\n};\n\n// Perform a z-test of means. Returns the p-value.\n// Assuming we have a list of values, and a null hypothesis. If no null\n// hypothesis, assume our null hypothesis is mu=0.\nfunction ztest1(opt, X, f) {\n  var nullH = opt && opt.nullh || 0,\n      gaussian = gen.random.normal(0, 1),\n      mu = stats.mean(X,f),\n      SE = stats.stdev(X,f) / Math.sqrt(stats.count.valid(X,f));\n\n  if (SE===0) {\n    // Test not well defined when standard error is 0.\n    return (mu - nullH) === 0 ? 1 : 0;\n  }\n  // Two-sided, so twice the one-sided cdf.\n  var z = (mu - nullH) / SE;\n  return 2 * gaussian.cdf(-Math.abs(z));\n}\n\n// Perform a two sample paired z-test of means. Returns the p-value.\nfunction ztestP(opt, values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a,\n      n1 = stats.count(X),\n      n2 = stats.count(Y),\n      diffs = Array(), i;\n\n  if (n1 !== n2) {\n    throw Error('Array lengths must match.');\n  }\n  for (i=0; i<n1; ++i) {\n    // Only valid differences should contribute to the test statistic\n    if (util.isValid(X[i]) && util.isValid(Y[i])) {\n      diffs.push(X[i] - Y[i]);\n    }\n  }\n  return stats.z.test(diffs, opt && opt.nullh || 0);\n}\n\n// Perform a two sample z-test of means. Returns the p-value.\nfunction ztest2(opt, values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a,\n      n1 = stats.count.valid(X),\n      n2 = stats.count.valid(Y),\n      gaussian = gen.random.normal(0, 1),\n      meanDiff = stats.mean(X) - stats.mean(Y) - (opt && opt.nullh || 0),\n      SE = Math.sqrt(stats.variance(X)/n1 + stats.variance(Y)/n2);\n\n  if (SE===0) {\n    // Not well defined when pooled standard error is 0.\n    return meanDiff===0 ? 1 : 0;\n  }\n  // Two-tailed, so twice the one-sided cdf.\n  var z = meanDiff / SE;\n  return 2 * gaussian.cdf(-Math.abs(z));\n}\n\n// Construct a mean-centered distance matrix for an array of numbers.\nstats.dist.mat = function(X) {\n  var n = X.length,\n      m = n*n,\n      A = Array(m),\n      R = gen.zeros(n),\n      M = 0, v, i, j;\n\n  for (i=0; i<n; ++i) {\n    A[i*n+i] = 0;\n    for (j=i+1; j<n; ++j) {\n      A[i*n+j] = (v = Math.abs(X[i] - X[j]));\n      A[j*n+i] = v;\n      R[i] += v;\n      R[j] += v;\n    }\n  }\n\n  for (i=0; i<n; ++i) {\n    M += R[i];\n    R[i] /= n;\n  }\n  M /= m;\n\n  for (i=0; i<n; ++i) {\n    for (j=i; j<n; ++j) {\n      A[i*n+j] += M - R[i] - R[j];\n      A[j*n+i] = A[i*n+j];\n    }\n  }\n\n  return A;\n};\n\n// Compute the Shannon entropy (log base 2) of an array of counts.\nstats.entropy = function(counts, f) {\n  f = util.$(f);\n  var i, p, s = 0, H = 0, n = counts.length;\n  for (i=0; i<n; ++i) {\n    s += (f ? f(counts[i]) : counts[i]);\n  }\n  if (s === 0) return 0;\n  for (i=0; i<n; ++i) {\n    p = (f ? f(counts[i]) : counts[i]) / s;\n    if (p) H += p * Math.log(p);\n  }\n  return -H / Math.LN2;\n};\n\n// Compute the mutual information between two discrete variables.\n// Returns an array of the form [MI, MI_distance]\n// MI_distance is defined as 1 - I(a,b) / H(a,b).\n// http://en.wikipedia.org/wiki/Mutual_information\nstats.mutual = function(values, a, b, counts) {\n  var x = counts ? values.map(util.$(a)) : values,\n      y = counts ? values.map(util.$(b)) : a,\n      z = counts ? values.map(util.$(counts)) : b;\n\n  var px = {},\n      py = {},\n      n = z.length,\n      s = 0, I = 0, H = 0, p, t, i;\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] = 0;\n    py[y[i]] = 0;\n  }\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] += z[i];\n    py[y[i]] += z[i];\n    s += z[i];\n  }\n\n  t = 1 / (s * Math.LN2);\n  for (i=0; i<n; ++i) {\n    if (z[i] === 0) continue;\n    p = (s * z[i]) / (px[x[i]] * py[y[i]]);\n    I += z[i] * t * Math.log(p);\n    H += z[i] * t * Math.log(z[i]/s);\n  }\n\n  return [I, 1 + I/H];\n};\n\n// Compute the mutual information between two discrete variables.\nstats.mutual.info = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[0];\n};\n\n// Compute the mutual information distance between two discrete variables.\n// MI_distance is defined as 1 - I(a,b) / H(a,b).\nstats.mutual.dist = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[1];\n};\n\n// Compute a profile of summary statistics for a variable.\nstats.profile = function(values, f) {\n  var mean = 0,\n      valid = 0,\n      missing = 0,\n      distinct = 0,\n      min = null,\n      max = null,\n      M2 = 0,\n      vals = [],\n      u = {}, delta, sd, i, v, x;\n\n  // compute summary stats\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n\n    // update unique values\n    u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n\n    if (v == null) {\n      ++missing;\n    } else if (util.isValid(v)) {\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      if (min===null || x < min) min = x;\n      if (max===null || x > max) max = x;\n      delta = x - mean;\n      mean = mean + delta / (++valid);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (valid - 1);\n  sd = Math.sqrt(M2);\n\n  // sort values for median and iqr\n  vals.sort(util.cmp);\n\n  return {\n    type:     type(values, f),\n    unique:   u,\n    count:    values.length,\n    valid:    valid,\n    missing:  missing,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    stdev:    sd,\n    median:   (v = stats.quantile(vals, 0.5)),\n    q1:       stats.quantile(vals, 0.25),\n    q3:       stats.quantile(vals, 0.75),\n    modeskew: sd === 0 ? 0 : (mean - v) / sd\n  };\n};\n\n// Compute profiles for all variables in a data set.\nstats.summary = function(data, fields) {\n  fields = fields || util.keys(data[0]);\n  var s = fields.map(function(f) {\n    var p = stats.profile(data, util.$(f));\n    return (p.field = f, p);\n  });\n  return (s.__summary__ = true, s);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/stats.js\n// module id = uHQN\n// module chunks = 0","var dl = require('datalib'),\n    u  = {};\n\ndl.extend(u, require('./format'));\nmodule.exports = dl.extend(u, dl);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/util/index.js\n// module id = v0Fq\n// module chunks = 0","var lgnd = require('../scene/legend');\n\nfunction parseLegends(model, spec, legends, group) {\n  (spec || []).forEach(function(def, index) {\n    legends[index] = legends[index] || lgnd(model);\n    parseLegend(def, index, legends[index], group);\n  });\n}\n\nfunction parseLegend(def, index, legend, group) {\n  // legend scales\n  legend.size   (def.size    ? group.scale(def.size)    : null);\n  legend.shape  (def.shape   ? group.scale(def.shape)   : null);\n  legend.fill   (def.fill    ? group.scale(def.fill)    : null);\n  legend.stroke (def.stroke  ? group.scale(def.stroke)  : null);\n  legend.opacity(def.opacity ? group.scale(def.opacity) : null);\n\n  // legend orientation\n  if (def.orient) legend.orient(def.orient);\n\n  // legend offset\n  if (def.offset != null) legend.offset(def.offset);\n\n  // legend title\n  legend.title(def.title || null);\n\n  // legend values\n  legend.values(def.values || null);\n\n  // legend label formatting\n  legend.format(def.format !== undefined ? def.format : null);\n  legend.formatType(def.formatType || null);\n\n  // style properties\n  var p = def.properties;\n  legend.titleProperties(p && p.title || {});\n  legend.labelProperties(p && p.labels || {});\n  legend.legendProperties(p && p.legend || {});\n  legend.symbolProperties(p && p.symbols || {});\n  legend.gradientProperties(p && p.gradient || {});\n}\n\nmodule.exports = parseLegends;\n\nparseLegends.schema = {\n  \"defs\": {\n    \"legend\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"size\": {\"type\": \"string\"},\n        \"shape\": {\"type\": \"string\"},\n        \"fill\": {\"type\": \"string\"},\n        \"stroke\": {\"type\": \"string\"},\n        \"opacity\": {\"type\": \"string\"},\n        \"orient\": {\"enum\": [\"left\", \"right\"], \"default\": \"right\"},\n        \"offset\": {\"type\": \"number\"},\n        \"title\": {\"type\": \"string\"},\n        \"values\": {\"type\": \"array\"},\n        \"format\": {\"type\": \"string\"},\n        \"formatType\": {\"enum\": [\"time\", \"utc\", \"string\", \"number\"]},\n        \"properties\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"title\": {\"$ref\": \"#/defs/propset\"},\n            \"labels\": {\"$ref\": \"#/defs/propset\"},\n            \"legend\": {\"$ref\": \"#/defs/propset\"},\n            \"symbols\": {\"$ref\": \"#/defs/propset\"},\n            \"gradient\": {\"$ref\": \"#/defs/propset\"}\n          },\n          \"additionalProperties\": false\n        }\n      },\n      \"additionalProperties\": false,\n      \"anyOf\": [\n        {\"required\": [\"size\"]},\n        {\"required\": [\"shape\"]},\n        {\"required\": [\"fill\"]},\n        {\"required\": [\"stroke\"]},\n        {\"required\": [\"opacity\"]}\n      ]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/legends.js\n// module id = v4pi\n// module chunks = 0","\"use strict\";\nvar channel_1 = require('../../channel');\nvar type_1 = require('../../type');\nvar util_1 = require('../../util');\nvar colorRank;\n(function (colorRank) {\n    function parseUnit(model) {\n        var colorRankComponent = {};\n        if (model.has(channel_1.COLOR) && model.fieldDef(channel_1.COLOR).type === type_1.ORDINAL) {\n            colorRankComponent[model.field(channel_1.COLOR)] = [{\n                    type: 'sort',\n                    by: model.field(channel_1.COLOR)\n                }, {\n                    type: 'rank',\n                    field: model.field(channel_1.COLOR),\n                    output: {\n                        rank: model.field(channel_1.COLOR, { prefn: 'rank_' })\n                    }\n                }];\n        }\n        return colorRankComponent;\n    }\n    colorRank.parseUnit = parseUnit;\n    function parseFacet(model) {\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source) {\n            var colorRankComponent = childDataComponent.colorRank;\n            delete childDataComponent.colorRank;\n            return colorRankComponent;\n        }\n        return {};\n    }\n    colorRank.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var colorRankComponent = {};\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (!childDataComponent.source) {\n                util_1.extend(colorRankComponent, childDataComponent.colorRank);\n                delete childDataComponent.colorRank;\n            }\n        });\n        return colorRankComponent;\n    }\n    colorRank.parseLayer = parseLayer;\n    function assemble(component) {\n        return util_1.flatten(util_1.vals(component.colorRank));\n    }\n    colorRank.assemble = assemble;\n})(colorRank = exports.colorRank || (exports.colorRank = {}));\n//# sourceMappingURL=colorrank.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/colorrank.js\n// module id = vY52\n// module chunks = 0","\"use strict\";\nvar util_1 = require('../util');\nvar channel_1 = require('../channel');\nvar timeunit_1 = require('../timeunit');\nfunction smallestUnit(timeUnit) {\n    if (!timeUnit) {\n        return undefined;\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.SECONDS)) {\n        return 'second';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.MINUTES)) {\n        return 'minute';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.HOURS)) {\n        return 'hour';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.DAY) ||\n        timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.DATE)) {\n        return 'day';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.MONTH)) {\n        return 'month';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.YEAR)) {\n        return 'year';\n    }\n    return undefined;\n}\nexports.smallestUnit = smallestUnit;\nfunction parseExpression(timeUnit, fieldRef, onlyRef) {\n    if (onlyRef === void 0) { onlyRef = false; }\n    var out = 'datetime(';\n    function func(fun, addComma) {\n        if (addComma === void 0) { addComma = true; }\n        if (onlyRef) {\n            return fieldRef + (addComma ? ', ' : '');\n        }\n        else {\n            var res = '';\n            if (fun === 'quarter') {\n                res = 'floor(month(' + fieldRef + ')' + '/3)*3';\n            }\n            else {\n                res = fun + '(' + fieldRef + ')';\n            }\n            return res + (addComma ? ', ' : '');\n        }\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.YEAR)) {\n        out += func('year');\n    }\n    else {\n        out += '2006, ';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.MONTH)) {\n        out += func('month');\n    }\n    else if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.QUARTER)) {\n        out += func('quarter');\n    }\n    else {\n        out += '0, ';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.DAY)) {\n        out += func('day', false) + '+1, ';\n    }\n    else if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.DATE)) {\n        out += func('date');\n    }\n    else {\n        out += '1, ';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.HOURS)) {\n        out += func('hours');\n    }\n    else {\n        out += '0, ';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.MINUTES)) {\n        out += func('minutes');\n    }\n    else {\n        out += '0, ';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.SECONDS)) {\n        out += func('seconds');\n    }\n    else {\n        out += '0, ';\n    }\n    if (timeunit_1.containsTimeUnit(timeUnit, timeunit_1.TimeUnit.MILLISECONDS)) {\n        out += func('milliseconds', false);\n    }\n    else {\n        out += '0';\n    }\n    return out + ')';\n}\nexports.parseExpression = parseExpression;\nfunction rawDomain(timeUnit, channel) {\n    if (util_1.contains([channel_1.ROW, channel_1.COLUMN, channel_1.SHAPE, channel_1.COLOR], channel)) {\n        return null;\n    }\n    switch (timeUnit) {\n        case timeunit_1.TimeUnit.SECONDS:\n            return util_1.range(0, 60);\n        case timeunit_1.TimeUnit.MINUTES:\n            return util_1.range(0, 60);\n        case timeunit_1.TimeUnit.HOURS:\n            return util_1.range(0, 24);\n        case timeunit_1.TimeUnit.DAY:\n            return util_1.range(0, 7);\n        case timeunit_1.TimeUnit.DATE:\n            return util_1.range(1, 32);\n        case timeunit_1.TimeUnit.MONTH:\n            return util_1.range(0, 12);\n        case timeunit_1.TimeUnit.QUARTER:\n            return [0, 3, 6, 9];\n    }\n    return null;\n}\nexports.rawDomain = rawDomain;\n//# sourceMappingURL=time.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/time.js\n// module id = wKIX\n// module chunks = 0","var dl = require('datalib'),\n    Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Stack(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    groupby: {type: 'array<field>'},\n    sortby: {type: 'array<field>'},\n    field: {type: 'field'},\n    offset: {type: 'value', default: 'zero'}\n  });\n\n  this._output = {\n    'start': 'layout_start',\n    'end':   'layout_end',\n    'mid':   'layout_mid'\n  };\n  return this.mutates(true);\n}\n\nvar prototype = (Stack.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Stack;\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['stacking']);\n\n  var groupby = this.param('groupby').accessor,\n      sortby = dl.comparator(this.param('sortby').field),\n      field = this.param('field').accessor,\n      offset = this.param('offset'),\n      output = this._output;\n\n  // partition, sum, and sort the stack groups\n  var groups = partition(data, groupby, sortby, field);\n\n  // compute stack layouts per group\n  for (var i=0, max=groups.max; i<groups.length; ++i) {\n    var group = groups[i],\n        sum = group.sum,\n        off = offset==='center' ? (max - sum)/2 : 0,\n        scale = offset==='normalize' ? (1/sum) : 1,\n        j, x, a, b = off, v = 0;\n\n    // set stack coordinates for each datum in group\n    for (j=0; j<group.length; ++j) {\n      x = group[j];\n      a = b; // use previous value for start point\n      v += field(x);\n      b = scale * v + off; // compute end point\n      Tuple.set(x, output.start, a);\n      Tuple.set(x, output.end, b);\n      Tuple.set(x, output.mid, 0.5 * (a + b));\n    }\n  }\n\n  input.fields[output.start] = 1;\n  input.fields[output.end] = 1;\n  input.fields[output.mid] = 1;\n  return input;\n};\n\nfunction partition(data, groupby, sortby, field) {\n  var groups = [],\n      get = function(f) { return f(x); },\n      map, i, x, k, g, s, max;\n\n  // partition data points into stack groups\n  if (groupby == null) {\n    groups.push(data.slice());\n  } else {\n    for (map={}, i=0; i<data.length; ++i) {\n      x = data[i];\n      k = groupby.map(get);\n      g = map[k] || (groups.push(map[k] = []), map[k]);\n      g.push(x);\n    }\n  }\n\n  // compute sums of groups, sort groups as needed\n  for (k=0, max=0; k<groups.length; ++k) {\n    g = groups[k];\n    for (i=0, s=0; i<g.length; ++i) {\n      s += field(g[i]);\n    }\n    g.sum = s;\n    if (s > max) max = s;\n    if (sortby != null) g.sort(sortby);\n  }\n  groups.max = max;\n\n  return groups;\n}\n\nmodule.exports = Stack;\n\nStack.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Stack transform\",\n  \"description\": \"Computes layout values for stacked graphs, as in stacked bar charts or stream graphs.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"stack\"]},\n    \"groupby\": {\n      \"description\": \"A list of fields to split the data into groups (stacks).\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n    },\n    \"sortby\": {\n      \"description\": \"A list of fields to determine the sort order of stacks.\",\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]}\n        },\n        {\"$ref\": \"#/refs/signal\"}\n      ],\n    },\n    \"field\": {\n      \"description\": \"The data field that determines the thickness/height of stacks.\",\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}]\n    },\n    \"offset\": {\n      \"description\": \"The baseline offset\",\n      \"oneOf\": [{\"enum\": [\"zero\", \"center\", \"normalize\"]}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": \"zero\"\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"start\": {\"type\": \"string\", \"default\": \"layout_start\"},\n        \"end\": {\"type\": \"string\", \"default\": \"layout_end\"},\n        \"mid\": {\"type\": \"string\", \"default\": \"layout_mid\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\", \"groupby\", \"field\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Stack.js\n// module id = wLy+\n// module chunks = 0","\"use strict\";\nexports.axis = require('./axis');\nexports.aggregate = require('./aggregate');\nexports.bin = require('./bin');\nexports.channel = require('./channel');\nexports.compile = require('./compile/compile').compile;\nexports.config = require('./config');\nexports.data = require('./data');\nexports.encoding = require('./encoding');\nexports.facet = require('./facet');\nexports.fieldDef = require('./fielddef');\nexports.legend = require('./legend');\nexports.mark = require('./mark');\nexports.scale = require('./scale');\nexports.shorthand = require('./shorthand');\nexports.sort = require('./sort');\nexports.spec = require('./spec');\nexports.stack = require('./stack');\nexports.timeUnit = require('./timeunit');\nexports.transform = require('./transform');\nexports.type = require('./type');\nexports.util = require('./util');\nexports.validate = require('./validate');\nexports.version = '__VERSION__';\n//# sourceMappingURL=vl.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/vl.js\n// module id = wWYS\n// module chunks = 0","\"use strict\";\nvar type_1 = require('./type');\n(function (DataFormatType) {\n    DataFormatType[DataFormatType[\"JSON\"] = 'json'] = \"JSON\";\n    DataFormatType[DataFormatType[\"CSV\"] = 'csv'] = \"CSV\";\n    DataFormatType[DataFormatType[\"TSV\"] = 'tsv'] = \"TSV\";\n    DataFormatType[DataFormatType[\"TOPOJSON\"] = 'topojson'] = \"TOPOJSON\";\n})(exports.DataFormatType || (exports.DataFormatType = {}));\nvar DataFormatType = exports.DataFormatType;\n(function (DataTable) {\n    DataTable[DataTable[\"SOURCE\"] = 'source'] = \"SOURCE\";\n    DataTable[DataTable[\"SUMMARY\"] = 'summary'] = \"SUMMARY\";\n    DataTable[DataTable[\"STACKED_SCALE\"] = 'stacked_scale'] = \"STACKED_SCALE\";\n    DataTable[DataTable[\"LAYOUT\"] = 'layout'] = \"LAYOUT\";\n})(exports.DataTable || (exports.DataTable = {}));\nvar DataTable = exports.DataTable;\nexports.SUMMARY = DataTable.SUMMARY;\nexports.SOURCE = DataTable.SOURCE;\nexports.STACKED_SCALE = DataTable.STACKED_SCALE;\nexports.LAYOUT = DataTable.LAYOUT;\nexports.types = {\n    'boolean': type_1.Type.NOMINAL,\n    'number': type_1.Type.QUANTITATIVE,\n    'integer': type_1.Type.QUANTITATIVE,\n    'date': type_1.Type.TEMPORAL,\n    'string': type_1.Type.NOMINAL\n};\n//# sourceMappingURL=data.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/data.js\n// module id = x6Fv\n// module chunks = 0","var util = require('./util');\nvar halfpi = Math.PI / 2;\n\nfunction path(g, o) {\n  var x = o.x || 0,\n      y = o.y || 0,\n      ir = o.innerRadius || 0,\n      or = o.outerRadius || 0,\n      sa = (o.startAngle || 0) - halfpi,\n      ea = (o.endAngle || 0) - halfpi;\n  g.beginPath();\n  if (ir === 0) g.moveTo(x, y);\n  else g.arc(x, y, ir, sa, ea, 0);\n  g.arc(x, y, or, ea, sa, 1);\n  g.closePath();\n}\n\nmodule.exports = {\n  draw: util.drawAll(path),\n  pick: util.pickPath(path)\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/render/canvas/marks/arc.js\n// module id = xNCi\n// module chunks = 0","var Tuple = require('vega-dataflow').Tuple,\n    log = require('vega-logging'),\n    Transform = require('./Transform'),\n    BatchTransform = require('./BatchTransform');\n\nfunction Rank(graph) {\n  BatchTransform.prototype.init.call(this, graph);\n  Transform.addParameters(this, {\n    field: {type: 'field', default: null},\n    normalize: {type: 'value', default: false}\n  });\n\n  this._output = {\n    'rank': 'rank'\n  };\n\n  return this.mutates(true);\n}\n\nvar prototype = (Rank.prototype = Object.create(BatchTransform.prototype));\nprototype.constructor = Rank;\n\nprototype.batchTransform = function(input, data) {\n  log.debug(input, ['rank']);\n\n  var rank  = this._output.rank,\n      norm  = this.param('normalize'),\n      field = this.param('field').accessor,\n      keys = {}, \n      i, len = data.length, klen, d, f;\n\n  // If we have a field accessor, first compile distinct keys.\n  if (field) {\n    for (i=0, klen=0; i<len; ++i) {\n      d = data[i];\n      keys[f=field(d)] = keys[f] || (keys[f] = ++klen);\n    }\n  }\n\n  // Assign ranks to all tuples.\n  for (i=0; i<len && (d=data[i]); ++i) {\n    if (field && (f=field(d))) {\n      Tuple.set(d, rank, norm ? keys[f] / klen : keys[f]);\n    } else {\n      Tuple.set(d, rank, norm ? (i+1) / len : (i+1));\n    }\n  }\n\n  input.fields[rank] = 1;\n  return input;\n};\n\nmodule.exports = Rank;\n\nRank.schema = {\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"title\": \"Rank transform\",\n  \"description\": \"Computes ascending rank scores for data tuples.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\"enum\": [\"rank\"]},\n    \"field\": {\n      \"oneOf\": [{\"type\": \"string\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"description\": \"A key field to used to rank tuples. \" +\n        \"If undefined, tuples will be ranked in their observed order.\"\n    },\n    \"normalize\": {\n      \"description\": \"If true, values of the output field will lie in the range [0, 1].\",\n      \"oneOf\": [{\"type\": \"boolean\"}, {\"$ref\": \"#/refs/signal\"}],\n      \"default\": false\n    },\n    \"output\": {\n      \"type\": \"object\",\n      \"description\": \"Rename the output data fields\",\n      \"properties\": {\n        \"rank\": {\"type\": \"string\", \"default\": \"rank\"}\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\"type\"]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/transforms/Rank.js\n// module id = yLCL\n// module chunks = 0","\"use strict\";\n(function (SortOrder) {\n    SortOrder[SortOrder[\"ASCENDING\"] = 'ascending'] = \"ASCENDING\";\n    SortOrder[SortOrder[\"DESCENDING\"] = 'descending'] = \"DESCENDING\";\n    SortOrder[SortOrder[\"NONE\"] = 'none'] = \"NONE\";\n})(exports.SortOrder || (exports.SortOrder = {}));\nvar SortOrder = exports.SortOrder;\n//# sourceMappingURL=sort.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/sort.js\n// module id = yLwJ\n// module chunks = 0","var util = require('./util'),\n    format = require('./format');\n\nvar context = {\n  formats:    [],\n  format_map: {},\n  truncate:   util.truncate,\n  pad:        util.pad,\n  day:        format.day,\n  month:      format.month,\n  quarter:    format.quarter,\n  utcQuarter: format.utcQuarter\n};\n\nfunction template(text) {\n  var src = source(text, 'd');\n  src = 'var __t; return ' + src + ';';\n\n  /* jshint evil: true */\n  return (new Function('d', src)).bind(context);\n}\n\ntemplate.source = source;\ntemplate.context = context;\ntemplate.format = get_format;\nmodule.exports = template;\n\n// Clear cache of format objects.\n// This can *break* prior template functions, so invoke with care!\ntemplate.clearFormatCache = function() {\n  context.formats = [];\n  context.format_map = {};\n};\n\n// Generate property access code for use within template source.\n// object: the name of the object (variable) containing template data\n// property: the property access string, verbatim from template tag\ntemplate.property = function(object, property) {\n  var src = util.field(property).map(util.str).join('][');\n  return object + '[' + src + ']';\n};\n\n// Generate source code for a template function.\n// text: the template text\n// variable: the name of the data object variable ('obj' by default)\n// properties: optional hash for collecting all accessed properties\nfunction source(text, variable, properties) {\n  variable = variable || 'obj';\n  var index = 0;\n  var src = '\\'';\n  var regex = template_re;\n\n  // Compile the template source, escaping string literals appropriately.\n  text.replace(regex, function(match, interpolate, offset) {\n    src += text\n      .slice(index, offset)\n      .replace(template_escaper, template_escapeChar);\n    index = offset + match.length;\n\n    if (interpolate) {\n      src += '\\'\\n+((__t=(' +\n        template_var(interpolate, variable, properties) +\n        '))==null?\\'\\':__t)+\\n\\'';\n    }\n\n    // Adobe VMs need the match returned to produce the correct offest.\n    return match;\n  });\n  return src + '\\'';\n}\n\nfunction template_var(text, variable, properties) {\n  var filters = text.match(filter_re);\n  var prop = filters.shift().trim();\n  var stringCast = true;\n\n  function strcall(fn) {\n    fn = fn || '';\n    if (stringCast) {\n      stringCast = false;\n      src = 'String(' + src + ')' + fn;\n    } else {\n      src += fn;\n    }\n    return src;\n  }\n\n  function date() {\n    return '(typeof ' + src + '===\"number\"?new Date('+src+'):'+src+')';\n  }\n\n  function formatter(type) {\n    var pattern = args[0];\n    if ((pattern[0] === '\\'' && pattern[pattern.length-1] === '\\'') ||\n        (pattern[0] === '\"'  && pattern[pattern.length-1] === '\"')) {\n      pattern = pattern.slice(1, -1);\n    } else {\n      throw Error('Format pattern must be quoted: ' + pattern);\n    }\n    a = template_format(pattern, type);\n    stringCast = false;\n    var arg = type === 'number' ? src : date();\n    src = 'this.formats['+a+']('+arg+')';\n  }\n\n  if (properties) properties[prop] = 1;\n  var src = template.property(variable, prop);\n\n  for (var i=0; i<filters.length; ++i) {\n    var f = filters[i], args = null, pidx, a, b;\n\n    if ((pidx=f.indexOf(':')) > 0) {\n      f = f.slice(0, pidx);\n      args = filters[i].slice(pidx+1)\n        .match(args_re)\n        .map(function(s) { return s.trim(); });\n    }\n    f = f.trim();\n\n    switch (f) {\n      case 'length':\n        strcall('.length');\n        break;\n      case 'lower':\n        strcall('.toLowerCase()');\n        break;\n      case 'upper':\n        strcall('.toUpperCase()');\n        break;\n      case 'lower-locale':\n        strcall('.toLocaleLowerCase()');\n        break;\n      case 'upper-locale':\n        strcall('.toLocaleUpperCase()');\n        break;\n      case 'trim':\n        strcall('.trim()');\n        break;\n      case 'left':\n        a = util.number(args[0]);\n        strcall('.slice(0,' + a + ')');\n        break;\n      case 'right':\n        a = util.number(args[0]);\n        strcall('.slice(-' + a +')');\n        break;\n      case 'mid':\n        a = util.number(args[0]);\n        b = a + util.number(args[1]);\n        strcall('.slice(+'+a+','+b+')');\n        break;\n      case 'slice':\n        a = util.number(args[0]);\n        strcall('.slice('+ a +\n          (args.length > 1 ? ',' + util.number(args[1]) : '') +\n          ')');\n        break;\n      case 'truncate':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.truncate(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'pad':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.pad(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'number':\n        formatter('number');\n        break;\n      case 'time':\n        formatter('time');\n        break;\n      case 'time-utc':\n        formatter('utc');\n        break;\n      case 'month':\n        src = 'this.month(' + src + ')';\n        break;\n      case 'month-abbrev':\n        src = 'this.month(' + src + ',true)';\n        break;\n      case 'day':\n        src = 'this.day(' + src + ')';\n        break;\n      case 'day-abbrev':\n        src = 'this.day(' + src + ',true)';\n        break;\n      case 'quarter':\n        src = 'this.quarter(' + src + ')';\n        break;\n      case 'quarter-utc':\n        src = 'this.utcQuarter(' + src + ')';\n        break;\n      default:\n        throw Error('Unrecognized template filter: ' + f);\n    }\n  }\n\n  return src;\n}\n\nvar template_re = /\\{\\{(.+?)\\}\\}|$/g,\n    filter_re = /(?:\"[^\"]*\"|\\'[^\\']*\\'|[^\\|\"]+|[^\\|\\']+)+/g,\n    args_re = /(?:\"[^\"]*\"|\\'[^\\']*\\'|[^,\"]+|[^,\\']+)+/g;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar template_escapes = {\n  '\\'':     '\\'',\n  '\\\\':     '\\\\',\n  '\\r':     'r',\n  '\\n':     'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar template_escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction template_escapeChar(match) {\n  return '\\\\' + template_escapes[match];\n}\n\nfunction template_format(pattern, type) {\n  var key = type + ':' + pattern;\n  if (context.format_map[key] == null) {\n    var f = format[type](pattern);\n    var i = context.formats.length;\n    context.formats.push(f);\n    context.format_map[key] = i;\n    return i;\n  }\n  return context.format_map[key];\n}\n\nfunction get_format(pattern, type) {\n  return context.formats[template_format(pattern, type)];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/template.js\n// module id = yQql\n// module chunks = 0","var dl = require('datalib');\n\nvar types = {\n  '=':   parseComparator,\n  '==':  parseComparator,\n  '!=':  parseComparator,\n  '>':   parseComparator,\n  '>=':  parseComparator,\n  '<':   parseComparator,\n  '<=':  parseComparator,\n  'and': parseLogical,\n  '&&':  parseLogical,\n  'or':  parseLogical,\n  '||':  parseLogical,\n  'in':  parseIn\n};\n\nvar nullScale = function() { return 0; };\nnullScale.invert = nullScale;\n\nfunction parsePredicates(model, spec) {\n  (spec || []).forEach(function(s) {\n    var parse = types[s.type](model, s);\n\n    /* jshint evil:true */\n    var pred  = Function(\"args\", \"db\", \"signals\", \"predicates\", parse.code);\n    pred.root = function() { return model.scene().items[0]; }; // For global scales\n    pred.nullScale = nullScale;\n    pred.isFunction = dl.isFunction;\n    pred.signals = parse.signals;\n    pred.data = parse.data;\n\n    model.predicate(s.name, pred);\n  });\n\n  return spec;\n}\n\nfunction parseSignal(signal, signals) {\n  var s = dl.field(signal),\n      code = \"signals[\"+s.map(dl.str).join(\"][\")+\"]\";\n  signals[s[0]] = 1;\n  return code;\n}\n\nfunction parseOperands(model, operands) {\n  var decl = [], defs = [],\n      signals = {}, db = {};\n\n  function setSignal(s) { signals[s] = 1; }\n  function setData(d) { db[d] = 1; }\n\n  dl.array(operands).forEach(function(o, i) {\n    var name = \"o\" + i,\n        def = \"\";\n\n    if (o.value !== undefined) {\n      def = dl.str(o.value);\n    } else if (o.arg) {\n      def = \"args[\"+dl.str(o.arg)+\"]\";\n    } else if (o.signal) {\n      def = parseSignal(o.signal, signals);\n    } else if (o.predicate) {\n      var ref = o.predicate,\n          predName = ref && (ref.name || ref),\n          pred = model.predicate(predName),\n          p = \"predicates[\"+dl.str(predName)+\"]\";\n\n      pred.signals.forEach(setSignal);\n      pred.data.forEach(setData);\n\n      if (dl.isObject(ref)) {\n        dl.keys(ref).forEach(function(k) {\n          if (k === \"name\") return;\n          var i = ref[k];\n          def += \"args[\"+dl.str(k)+\"] = \";\n          if (i.signal) {\n            def += parseSignal(i.signal, signals);\n          } else if (i.arg) {\n            def += \"args[\"+dl.str(i.arg)+\"]\";\n          }\n          def += \", \";\n        });\n      }\n\n      def += p+\".call(\"+p+\", args, db, signals, predicates)\";\n    }\n\n    decl.push(name);\n    defs.push(name+\"=(\"+def+\")\");\n  });\n\n  return {\n    code: \"var \" + decl.join(\", \") + \";\\n\" + defs.join(\";\\n\") + \";\\n\",\n    signals: dl.keys(signals),\n    data: dl.keys(db)\n  };\n}\n\nfunction parseComparator(model, spec) {\n  var ops = parseOperands(model, spec.operands);\n  if (spec.type === '=') spec.type = '==';\n\n  ops.code += \"o0 = o0 instanceof Date ? o0.getTime() : o0;\\n\" +\n    \"o1 = o1 instanceof Date ? o1.getTime() : o1;\\n\";\n\n  return {\n    code: ops.code + \"return \" + [\"o0\", \"o1\"].join(spec.type) + \";\",\n    signals: ops.signals,\n    data: ops.data\n  };\n}\n\nfunction parseLogical(model, spec) {\n  var ops = parseOperands(model, spec.operands),\n      o = [], i = 0, len = spec.operands.length;\n\n  while (o.push(\"o\"+i++) < len);\n  if (spec.type === 'and') spec.type = '&&';\n  else if (spec.type === 'or') spec.type = '||';\n\n  return {\n    code: ops.code + \"return \" + o.join(spec.type) + \";\",\n    signals: ops.signals,\n    data: ops.data\n  };\n}\n\nfunction parseIn(model, spec) {\n  var o = [spec.item], code = \"\";\n  if (spec.range) o.push.apply(o, spec.range);\n  if (spec.scale) {\n    code = parseScale(spec.scale, o);\n  }\n\n  var ops = parseOperands(model, o);\n  code = ops.code + code + \"\\n  var ordSet = null;\\n\";\n\n  if (spec.data) {\n    var field = dl.field(spec.field).map(dl.str);\n    code += \"var where = function(d) { return d[\"+field.join(\"][\")+\"] == o0 };\\n\";\n    code += \"return db[\"+dl.str(spec.data)+\"].filter(where).length > 0;\";\n  } else if (spec.range) {\n    // TODO: inclusive/exclusive range?\n    if (spec.scale) {\n      code += \"if (scale.length == 2) {\\n\" + // inverting ordinal scales\n        \"  ordSet = scale(o1, o2);\\n\" +\n        \"} else {\\n\" +\n        \"  o1 = scale(o1);\\no2 = scale(o2);\\n\" +\n        \"}\";\n    }\n\n    code += \"return ordSet !== null ? ordSet.indexOf(o0) !== -1 :\\n\" +\n      \"  o1 < o2 ? o1 <= o0 && o0 <= o2 : o2 <= o0 && o0 <= o1;\";\n  }\n\n  return {\n    code: code,\n    signals: ops.signals,\n    data: ops.data.concat(spec.data ? [spec.data] : [])\n  };\n}\n\n// Populate ops such that ultimate scale/inversion function will be in `scale` var.\nfunction parseScale(spec, ops) {\n  var code = \"var scale = \",\n      idx  = ops.length;\n\n  if (dl.isString(spec)) {\n    ops.push({ value: spec });\n    code += \"this.root().scale(o\"+idx+\")\";\n  } else if (spec.arg) {  // Scale function is being passed as an arg\n    ops.push(spec);\n    code += \"o\"+idx;\n  } else if (spec.name) { // Full scale parameter {name: ..}\n    ops.push(dl.isString(spec.name) ? {value: spec.name} : spec.name);\n    code += \"(this.isFunction(o\"+idx+\") ? o\"+idx+\" : \";\n    if (spec.scope) {\n      ops.push(spec.scope);\n      code += \"((o\"+(idx+1)+\".scale || this.root().scale)(o\"+idx+\") || this.nullScale)\";\n    } else {\n      code += \"this.root().scale(o\"+idx+\")\";\n    }\n    code += \")\";\n  }\n\n  if (spec.invert === true) {  // Allow spec.invert.arg?\n    code += \".invert\";\n  }\n\n  return code+\";\\n\";\n}\n\nmodule.exports = parsePredicates;\nparsePredicates.schema = {\n  \"refs\": {\n    \"operand\": {\n      \"type\": \"object\",\n      \"oneOf\": [\n        {\n          \"properties\": {\"value\": {}},\n          \"required\": [\"value\"]\n        },\n        {\n          \"properties\": {\"arg\": {\"type\": \"string\"}},\n          \"required\": [\"arg\"]\n        },\n        {\"$ref\": \"#/refs/signal\"},\n        {\n          \"properties\": {\n            \"predicate\": {\n              \"oneOf\": [\n                {\"type\": \"string\"},\n                {\n                  \"type\": \"object\",\n                  \"properties\": {\"name\": {\"type\": \"string\"}},\n                  \"required\": [\"name\"]\n                }\n              ]\n            }\n          },\n          \"required\": [\"predicate\"]\n        }\n      ]\n    }\n  },\n\n  \"defs\": {\n    \"predicate\": {\n      \"type\": \"object\",\n      \"oneOf\": [{\n        \"properties\": {\n          \"name\": {\"type\": \"string\"},\n          \"type\": {\"enum\": [\"==\", \"!=\", \">\", \"<\", \">=\", \"<=\"]},\n          \"operands\": {\n            \"type\": \"array\",\n            \"items\": {\"$ref\": \"#/refs/operand\"},\n            \"minItems\": 2,\n            \"maxItems\": 2\n          }\n        },\n        \"required\": [\"name\", \"type\", \"operands\"]\n      }, {\n        \"properties\": {\n          \"name\": {\"type\": \"string\"},\n          \"type\": {\"enum\": [\"and\", \"&&\", \"or\", \"||\"]},\n          \"operands\": {\n            \"type\": \"array\",\n            \"items\": {\"$ref\": \"#/refs/operand\"},\n            \"minItems\": 2\n          }\n        },\n        \"required\": [\"name\", \"type\", \"operands\"]\n      }, {\n        \"properties\": {\n          \"name\": {\"type\": \"string\"},\n          \"type\": {\"enum\": [\"in\"]},\n          \"item\": {\"$ref\": \"#/refs/operand\"}\n        },\n\n        \"oneOf\": [\n          {\n            \"properties\": {\n              \"range\": {\n                \"type\": \"array\",\n                \"items\": {\"$ref\": \"#/refs/operand\"},\n                \"minItems\": 2\n              },\n              \"scale\": {\"$ref\": \"#/refs/scopedScale\"}\n            },\n            \"required\": [\"range\"]\n          },\n          {\n            \"properties\": {\n              \"data\": {\"type\": \"string\"},\n              \"field\": {\"type\": \"string\"}\n            },\n            \"required\": [\"data\", \"field\"]\n          }\n        ],\n\n        \"required\": [\"name\", \"type\", \"item\"]\n      }]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/predicates.js\n// module id = yaQe\n// module chunks = 0","var dl  = require('datalib'),\n    log = require('vega-logging'),\n    themeVal = require('../util/theme-val'),\n    Model = require('../core/Model'),\n    View  = require('../core/View');\n\n/**\n * Parse graph specification\n * @param spec (object)\n * @param config (optional object)\n * @param viewFactory (optional function)\n * @param callback (error, model)\n */\n function parseSpec(spec /*, [config,] [viewFactory,] callback */) {\n  // do not assign any values to callback, as it will change arguments\n  var arglen = arguments.length,\n      argidx = 2,\n      cb = arguments[arglen-1],\n      model = new Model(),\n      viewFactory = View.factory,\n      config;\n\n  if (arglen > argidx && dl.isFunction(arguments[arglen - argidx])) {\n    viewFactory = arguments[arglen - argidx];\n    ++argidx;\n  }\n\n  if (arglen > argidx && dl.isObject(arguments[arglen - argidx])) {\n    model.config(arguments[arglen - argidx]);\n  }\n\n  config = model.config();\n  if (dl.isObject(spec)) {\n    parse(spec);\n  } else if (dl.isString(spec)) {\n    var opts = dl.extend({url: spec}, config.load);\n    dl.json(opts, function(err, spec) {\n      if (err) done('SPECIFICATION LOAD FAILED: ' + err);\n      else parse(spec);\n    });\n  } else {\n    done('INVALID SPECIFICATION: Must be a valid JSON object or URL.');\n  }\n\n  function parse(spec) {\n    try {\n      // protect against subsequent spec modification\n      spec = dl.duplicate(spec);\n\n      var parsers = require('./'),\n          width   = themeVal(spec, config, 'width', 500),\n          height  = themeVal(spec, config, 'height', 500),\n          padding = parsers.padding(themeVal(spec, config, 'padding')),\n          background = themeVal(spec, config, 'background');\n\n      // create signals for width, height, padding, and cursor\n      model.signal('width', width);\n      model.signal('height', height);\n      model.signal('padding', padding);\n      cursor(spec);\n\n      // initialize model\n      model.defs({\n        width:      width,\n        height:     height,\n        padding:    padding,\n        viewport:   spec.viewport || null,\n        background: parsers.background(background),\n        signals:    parsers.signals(model, spec.signals),\n        predicates: parsers.predicates(model, spec.predicates),\n        marks:      parsers.marks(model, spec, width, height),\n        data:       parsers.data(model, spec.data, done)\n      });\n    } catch (err) { done(err); }\n  }\n\n  function cursor(spec) {\n    var signals = spec.signals || (spec.signals=[]),  def;\n    signals.some(function(sg) {\n      return (sg.name === 'cursor') ? (def=sg, true) : false;\n    });\n\n    if (!def) signals.push(def={name: 'cursor', streams: []});\n\n    // Add a stream def at the head, so that custom defs can override it.\n    def.init = def.init || {};\n    def.streams.unshift({\n      type: 'mousemove',\n      expr: 'eventItem().cursor === cursor.default ? cursor : {default: eventItem().cursor}'\n    });\n  }\n\n  function done(err) {\n    var view;\n    if (err) {\n      log.error(err);\n    } else {\n      view = viewFactory(model.buildIndexes());\n    }\n\n    if (cb) {\n      if (cb.length > 1) cb(err, view);\n      else if (!err) cb(view);\n      cb = null;\n    }\n  }\n}\n\nmodule.exports = parseSpec;\n\nparseSpec.schema = {\n  \"defs\": {\n    \"spec\": {\n      \"title\": \"Vega visualization specification\",\n      \"type\": \"object\",\n\n      \"allOf\": [{\"$ref\": \"#/defs/container\"}, {\n        \"properties\": {\n          \"width\": {\"type\": \"number\"},\n          \"height\": {\"type\": \"number\"},\n          \"viewport\": {\n            \"type\": \"array\",\n            \"items\": {\"type\": \"number\"},\n            \"maxItems\": 2\n          },\n\n          \"background\": {\"$ref\": \"#/defs/background\"},\n          \"padding\": {\"$ref\": \"#/defs/padding\"},\n\n          \"signals\": {\n            \"type\": \"array\",\n            \"items\": {\"$ref\": \"#/defs/signal\"}\n          },\n\n          \"predicates\": {\n            \"type\": \"array\",\n            \"items\": {\"$ref\": \"#/defs/predicate\"}\n          },\n\n          \"data\": {\n            \"type\": \"array\",\n            \"items\": {\"$ref\": \"#/defs/data\"}\n          }\n        }\n      }]\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/src/parse/spec.js\n// module id = ybCx\n// module chunks = 0","\"use strict\";\nvar scale_1 = require('../../scale');\nvar util_1 = require('../../util');\nvar nonPositiveFilter;\n(function (nonPositiveFilter_1) {\n    function parseUnit(model) {\n        return model.channels().reduce(function (nonPositiveComponent, channel) {\n            var scale = model.scale(channel);\n            if (!model.field(channel) || !scale) {\n                return nonPositiveComponent;\n            }\n            nonPositiveComponent[model.field(channel)] = scale.type === scale_1.ScaleType.LOG;\n            return nonPositiveComponent;\n        }, {});\n    }\n    nonPositiveFilter_1.parseUnit = parseUnit;\n    function parseFacet(model) {\n        var childDataComponent = model.child().component.data;\n        if (!childDataComponent.source) {\n            var nonPositiveFilterComponent = childDataComponent.nonPositiveFilter;\n            delete childDataComponent.nonPositiveFilter;\n            return nonPositiveFilterComponent;\n        }\n        return {};\n    }\n    nonPositiveFilter_1.parseFacet = parseFacet;\n    function parseLayer(model) {\n        var nonPositiveFilter = {};\n        model.children().forEach(function (child) {\n            var childDataComponent = child.component.data;\n            if (model.compatibleSource(child) && !util_1.differ(childDataComponent.nonPositiveFilter, nonPositiveFilter)) {\n                util_1.extend(nonPositiveFilter, childDataComponent.nonPositiveFilter);\n                delete childDataComponent.nonPositiveFilter;\n            }\n        });\n        return nonPositiveFilter;\n    }\n    nonPositiveFilter_1.parseLayer = parseLayer;\n    function assemble(component) {\n        return util_1.keys(component.nonPositiveFilter).filter(function (field) {\n            return component.nonPositiveFilter[field];\n        }).map(function (field) {\n            return {\n                type: 'filter',\n                test: 'datum.' + field + ' > 0'\n            };\n        });\n    }\n    nonPositiveFilter_1.assemble = assemble;\n})(nonPositiveFilter = exports.nonPositiveFilter || (exports.nonPositiveFilter = {}));\n//# sourceMappingURL=nonpositivenullfilter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/data/nonpositivenullfilter.js\n// module id = yixx\n// module chunks = 0","\"use strict\";\nvar data_1 = require('../data');\nvar spec_1 = require('../spec');\nvar util_1 = require('../util');\nvar common_1 = require('./common');\nfunction compile(inputSpec) {\n    var spec = spec_1.normalize(inputSpec);\n    var model = common_1.buildModel(spec, null, '');\n    model.parse();\n    return assemble(model);\n}\nexports.compile = compile;\nfunction assemble(model) {\n    var config = model.config();\n    var output = util_1.extend({\n        width: 1,\n        height: 1,\n        padding: 'auto'\n    }, config.viewport ? { viewport: config.viewport } : {}, config.background ? { background: config.background } : {}, {\n        data: [].concat(model.assembleData([]), model.assembleLayout([])),\n        marks: [assembleRootGroup(model)]\n    });\n    return {\n        spec: output\n    };\n}\nfunction assembleRootGroup(model) {\n    var rootGroup = util_1.extend({\n        name: model.name('root'),\n        type: 'group',\n    }, model.description() ? { description: model.description() } : {}, {\n        from: { data: data_1.LAYOUT },\n        properties: {\n            update: util_1.extend({\n                width: { field: 'width' },\n                height: { field: 'height' }\n            }, model.assembleParentGroupProperties(model.config().cell))\n        }\n    });\n    return util_1.extend(rootGroup, model.assembleGroup());\n}\nexports.assembleRootGroup = assembleRootGroup;\n//# sourceMappingURL=compile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/compile.js\n// module id = z/Ym\n// module chunks = 0","\"use strict\";\n(function (TimeUnit) {\n    TimeUnit[TimeUnit[\"YEAR\"] = 'year'] = \"YEAR\";\n    TimeUnit[TimeUnit[\"MONTH\"] = 'month'] = \"MONTH\";\n    TimeUnit[TimeUnit[\"DAY\"] = 'day'] = \"DAY\";\n    TimeUnit[TimeUnit[\"DATE\"] = 'date'] = \"DATE\";\n    TimeUnit[TimeUnit[\"HOURS\"] = 'hours'] = \"HOURS\";\n    TimeUnit[TimeUnit[\"MINUTES\"] = 'minutes'] = \"MINUTES\";\n    TimeUnit[TimeUnit[\"SECONDS\"] = 'seconds'] = \"SECONDS\";\n    TimeUnit[TimeUnit[\"MILLISECONDS\"] = 'milliseconds'] = \"MILLISECONDS\";\n    TimeUnit[TimeUnit[\"YEARMONTH\"] = 'yearmonth'] = \"YEARMONTH\";\n    TimeUnit[TimeUnit[\"YEARMONTHDAY\"] = 'yearmonthday'] = \"YEARMONTHDAY\";\n    TimeUnit[TimeUnit[\"YEARMONTHDATE\"] = 'yearmonthdate'] = \"YEARMONTHDATE\";\n    TimeUnit[TimeUnit[\"YEARDAY\"] = 'yearday'] = \"YEARDAY\";\n    TimeUnit[TimeUnit[\"YEARDATE\"] = 'yeardate'] = \"YEARDATE\";\n    TimeUnit[TimeUnit[\"YEARMONTHDAYHOURS\"] = 'yearmonthdayhours'] = \"YEARMONTHDAYHOURS\";\n    TimeUnit[TimeUnit[\"YEARMONTHDAYHOURSMINUTES\"] = 'yearmonthdayhoursminutes'] = \"YEARMONTHDAYHOURSMINUTES\";\n    TimeUnit[TimeUnit[\"YEARMONTHDAYHOURSMINUTESSECONDS\"] = 'yearmonthdayhoursminutesseconds'] = \"YEARMONTHDAYHOURSMINUTESSECONDS\";\n    TimeUnit[TimeUnit[\"HOURSMINUTES\"] = 'hoursminutes'] = \"HOURSMINUTES\";\n    TimeUnit[TimeUnit[\"HOURSMINUTESSECONDS\"] = 'hoursminutesseconds'] = \"HOURSMINUTESSECONDS\";\n    TimeUnit[TimeUnit[\"MINUTESSECONDS\"] = 'minutesseconds'] = \"MINUTESSECONDS\";\n    TimeUnit[TimeUnit[\"SECONDSMILLISECONDS\"] = 'secondsmilliseconds'] = \"SECONDSMILLISECONDS\";\n    TimeUnit[TimeUnit[\"QUARTER\"] = 'quarter'] = \"QUARTER\";\n    TimeUnit[TimeUnit[\"YEARQUARTER\"] = 'yearquarter'] = \"YEARQUARTER\";\n    TimeUnit[TimeUnit[\"QUARTERMONTH\"] = 'quartermonth'] = \"QUARTERMONTH\";\n    TimeUnit[TimeUnit[\"YEARQUARTERMONTH\"] = 'yearquartermonth'] = \"YEARQUARTERMONTH\";\n})(exports.TimeUnit || (exports.TimeUnit = {}));\nvar TimeUnit = exports.TimeUnit;\nexports.TIMEUNITS = [\n    TimeUnit.YEAR,\n    TimeUnit.MONTH,\n    TimeUnit.DAY,\n    TimeUnit.DATE,\n    TimeUnit.HOURS,\n    TimeUnit.MINUTES,\n    TimeUnit.SECONDS,\n    TimeUnit.MILLISECONDS,\n    TimeUnit.YEARMONTH,\n    TimeUnit.YEARMONTHDAY,\n    TimeUnit.YEARMONTHDATE,\n    TimeUnit.YEARDAY,\n    TimeUnit.YEARDATE,\n    TimeUnit.YEARMONTHDAYHOURS,\n    TimeUnit.YEARMONTHDAYHOURSMINUTES,\n    TimeUnit.YEARMONTHDAYHOURSMINUTESSECONDS,\n    TimeUnit.HOURSMINUTES,\n    TimeUnit.HOURSMINUTESSECONDS,\n    TimeUnit.MINUTESSECONDS,\n    TimeUnit.SECONDSMILLISECONDS,\n    TimeUnit.QUARTER,\n    TimeUnit.YEARQUARTER,\n    TimeUnit.QUARTERMONTH,\n    TimeUnit.YEARQUARTERMONTH,\n];\nfunction template(timeUnit, field, shortTimeLabels) {\n    if (!timeUnit) {\n        return undefined;\n    }\n    var dateComponents = [];\n    if (containsTimeUnit(timeUnit, TimeUnit.YEAR)) {\n        dateComponents.push(shortTimeLabels ? '%y' : '%Y');\n    }\n    if (containsTimeUnit(timeUnit, TimeUnit.QUARTER)) {\n        dateComponents.push('\\'}}Q{{' + field + ' | quarter}}{{' + field + ' | time:\\'');\n    }\n    if (containsTimeUnit(timeUnit, TimeUnit.MONTH)) {\n        dateComponents.push(shortTimeLabels ? '%b' : '%B');\n    }\n    if (containsTimeUnit(timeUnit, TimeUnit.DAY)) {\n        dateComponents.push(shortTimeLabels ? '%a' : '%A');\n    }\n    else if (containsTimeUnit(timeUnit, TimeUnit.DATE)) {\n        dateComponents.push('%d');\n    }\n    var timeComponents = [];\n    if (containsTimeUnit(timeUnit, TimeUnit.HOURS)) {\n        timeComponents.push('%H');\n    }\n    if (containsTimeUnit(timeUnit, TimeUnit.MINUTES)) {\n        timeComponents.push('%M');\n    }\n    if (containsTimeUnit(timeUnit, TimeUnit.SECONDS)) {\n        timeComponents.push('%S');\n    }\n    if (containsTimeUnit(timeUnit, TimeUnit.MILLISECONDS)) {\n        timeComponents.push('%L');\n    }\n    var out = [];\n    if (dateComponents.length > 0) {\n        out.push(dateComponents.join('-'));\n    }\n    if (timeComponents.length > 0) {\n        out.push(timeComponents.join(':'));\n    }\n    if (out.length > 0) {\n        var template_1 = '{{' + field + ' | time:\\'' + out.join(' ') + '\\'}}';\n        return template_1.replace(new RegExp('{{' + field + ' \\\\| time:\\'\\'}}', 'g'), '');\n    }\n    else {\n        return undefined;\n    }\n}\nexports.template = template;\nfunction containsTimeUnit(fullTimeUnit, timeUnit) {\n    var fullTimeUnitStr = fullTimeUnit.toString();\n    var timeUnitStr = timeUnit.toString();\n    return fullTimeUnitStr.indexOf(timeUnitStr) > -1;\n}\nexports.containsTimeUnit = containsTimeUnit;\n//# sourceMappingURL=timeunit.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/timeunit.js\n// module id = z5TJ\n// module chunks = 0","function Item(mark) {\n  this.mark = mark;\n}\n\nvar prototype = Item.prototype;\n\nprototype.hasPropertySet = function(name) {\n  var props = this.mark.def.properties;\n  return props && props[name] != null;\n};\n\nprototype.cousin = function(offset, index) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      group = mark.group,\n      iidx = index==null ? mark.items.indexOf(this) : index,\n      midx = group.items.indexOf(mark) + offset;\n  return group.items[midx].items[iidx];\n};\n\nprototype.sibling = function(offset) {\n  if (offset === 0) return this;\n  offset = offset || -1;\n  var mark = this.mark,\n      iidx = mark.items.indexOf(this) + offset;\n  return mark.items[iidx];\n};\n\nprototype.remove = function() {\n  var item = this,\n      list = item.mark.items,\n      i = list.indexOf(item);\n  if (i >= 0) {\n    if (i===list.length-1) {\n      list.pop();\n    } else {\n      list.splice(i, 1);\n    }\n  }\n  return item;\n};\n\nprototype.touch = function() {\n  if (this.pathCache) this.pathCache = null;\n};\n\nmodule.exports = Item;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-scenegraph/src/util/Item.js\n// module id = zDyX\n// module chunks = 0","var u = module.exports;\n\n// utility functions\n\nvar FNAME = '__name__';\n\nu.namedfunc = function(name, f) { return (f[FNAME] = name, f); };\n\nu.name = function(f) { return f==null ? null : f[FNAME]; };\n\nu.identity = function(x) { return x; };\n\nu.true = u.namedfunc('true', function() { return true; });\n\nu.false = u.namedfunc('false', function() { return false; });\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.length = function(x) {\n  return x != null && x.length != null ? x.length : null;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list, f) {\n  return (f = u.$(f)) ?\n    list.reduce(function(obj, x) { return (obj[f(x)] = 1, obj); }, {}) :\n    list.reduce(function(obj, x) { return (obj[x] = 1, obj); }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  var n = values.length;\n  if (!n) return '';\n  for (var s=String(values[0]), i=1; i<n; ++i) {\n    s += '|' + String(values[i]);\n  }\n  return s;\n};\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) === '[object Function]';\n};\n\nu.isString = function(obj) {\n  return typeof value === 'string' || toString.call(obj) === '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) === '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return typeof obj === 'number' || toString.call(obj) === '[object Number]';\n};\n\nu.isBoolean = function(obj) {\n  return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) === '[object Date]';\n};\n\nu.isValid = function(obj) {\n  return obj != null && obj === obj;\n};\n\nu.isBuffer = (typeof Buffer === 'function' && Buffer.isBuffer) || u.false;\n\n// type coercion functions\n\nu.number = function(s) {\n  return s == null || s === '' ? null : +s;\n};\n\nu.boolean = function(s) {\n  return s == null || s === '' ? null : s==='false' ? false : !!s;\n};\n\n// parse a date with optional d3.time-format format\nu.date = function(s, format) {\n  var d = format ? format : Date;\n  return s == null || s === '' ? null : d.parse(s);\n};\n\nu.array = function(x) {\n  return x != null ? (u.isArray(x) ? x : [x]) : [];\n};\n\nu.str = function(x) {\n  return u.isArray(x) ? '[' + x.map(u.str) + ']'\n    : u.isObject(x) || u.isString(x) ?\n      // Output valid JSON and JS source strings.\n      // See http://timelessrepo.com/json-isnt-a-javascript-subset\n      JSON.stringify(x).replace('\\u2028','\\\\u2028').replace('\\u2029', '\\\\u2029')\n    : x;\n};\n\n// data access functions\n\nvar field_re = /\\[(.*?)\\]|[^.\\[]+/g;\n\nu.field = function(f) {\n  return String(f).match(field_re).map(function(d) {\n    return d[0] !== '[' ? d :\n      d[1] !== \"'\" && d[1] !== '\"' ? d.slice(1, -1) :\n      d.slice(2, -2).replace(/\\\\([\"'])/g, '$1');\n  });\n};\n\nu.accessor = function(f) {\n  /* jshint evil: true */\n  return f==null || u.isFunction(f) ? f :\n    u.namedfunc(f, Function('x', 'return x[' + u.field(f).map(u.str).join('][') + '];'));\n};\n\n// short-cut for accessor\nu.$ = u.accessor;\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1 ?\n    function(x, v) {\n      for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n      x[s[i]] = v;\n    } :\n    function(x, v) { x[f] = v; };\n};\n\n\nu.$func = function(name, op) {\n  return function(f) {\n    f = u.$(f) || u.identity;\n    var n = name + (u.name(f) ? '_'+u.name(f) : '');\n    return u.namedfunc(n, function(d) { return op(f(d)); });\n  };\n};\n\nu.$valid  = u.$func('valid', u.isValid);\nu.$length = u.$func('length', u.length);\n\nu.$in = function(f, values) {\n  f = u.$(f);\n  var map = u.isArray(values) ? u.toMap(values) : values;\n  return function(d) { return !!map[f(d)]; };\n};\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === '-') { s = -1; f = f.slice(1); }\n    else if (f[0] === '+') { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a, b) {\n    var i, n, f, c;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i];\n      c = u.cmp(f(a), f(b));\n      if (c) return c * sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  return (a < b || a == null) && b != null ? -1 :\n    (a > b || b == null) && a != null ? 1 :\n    ((b = b instanceof Date ? +b : b),\n     (a = a instanceof Date ? +a : a)) !== a && b === b ? -1 :\n    b !== b && a === a ? 1 : 0;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n// permutes an array using a Knuth shuffle\nu.permute = function(a) {\n  var m = a.length,\n      swap,\n      i;\n\n  while (m) {\n    i = Math.floor(Math.random() * m--);\n    swap = a[m];\n    a[m] = a[i];\n    a[i] = swap;\n  }\n};\n\n// string functions\n\nu.pad = function(s, length, pos, padchar) {\n  padchar = padchar || \" \";\n  var d = length - s.length;\n  if (d <= 0) return s;\n  switch (pos) {\n    case 'left':\n      return strrep(d, padchar) + s;\n    case 'middle':\n    case 'center':\n      return strrep(Math.floor(d/2), padchar) +\n         s + strrep(Math.ceil(d/2), padchar);\n    default:\n      return s + strrep(d, padchar);\n  }\n};\n\nfunction strrep(n, str) {\n  var s = \"\", i;\n  for (i=0; i<n; ++i) s += str;\n  return s;\n}\n\nu.truncate = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis !== undefined ? String(ellipsis) : '\\u2026';\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case 'left':\n      return ellipsis + (word ? truncateOnWord(s,l,1) : s.slice(len-l));\n    case 'middle':\n    case 'center':\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) +\n        ellipsis + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join('').trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/util.js\n// module id = zF6n\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar aggregate_1 = require('../aggregate');\nvar channel_1 = require('../channel');\nvar config_1 = require('../config');\nvar data_1 = require('../data');\nvar vlEncoding = require('../encoding');\nvar fielddef_1 = require('../fielddef');\nvar mark_1 = require('../mark');\nvar scale_1 = require('../scale');\nvar type_1 = require('../type');\nvar util_1 = require('../util');\nvar axis_1 = require('./axis');\nvar common_1 = require('./common');\nvar config_2 = require('./config');\nvar data_2 = require('./data/data');\nvar legend_1 = require('./legend');\nvar layout_1 = require('./layout');\nvar model_1 = require('./model');\nvar mark_2 = require('./mark/mark');\nvar scale_2 = require('./scale');\nvar stack_1 = require('../stack');\nvar UnitModel = (function (_super) {\n    __extends(UnitModel, _super);\n    function UnitModel(spec, parent, parentGivenName) {\n        _super.call(this, spec, parent, parentGivenName);\n        var mark = this._mark = spec.mark;\n        var encoding = this._encoding = this._initEncoding(mark, spec.encoding || {});\n        var config = this._config = this._initConfig(spec.config, parent, mark, encoding);\n        this._scale = this._initScale(mark, encoding, config);\n        this._axis = this._initAxis(encoding, config);\n        this._legend = this._initLegend(encoding, config);\n        this._stack = stack_1.stack(mark, encoding, config);\n    }\n    UnitModel.prototype._initEncoding = function (mark, encoding) {\n        encoding = util_1.duplicate(encoding);\n        vlEncoding.forEach(encoding, function (fieldDef, channel) {\n            if (!channel_1.supportMark(channel, mark)) {\n                console.warn(channel, 'dropped as it is incompatible with', mark);\n                delete fieldDef.field;\n                return;\n            }\n            if (fieldDef.type) {\n                fieldDef.type = type_1.getFullName(fieldDef.type);\n            }\n            if ((channel === channel_1.PATH || channel === channel_1.ORDER) && !fieldDef.aggregate && fieldDef.type === type_1.QUANTITATIVE) {\n                fieldDef.aggregate = aggregate_1.AggregateOp.MIN;\n            }\n        });\n        return encoding;\n    };\n    UnitModel.prototype._initConfig = function (specConfig, parent, mark, encoding) {\n        var config = util_1.mergeDeep(util_1.duplicate(config_1.defaultConfig), parent ? parent.config() : {}, specConfig);\n        config.mark = config_2.initMarkConfig(mark, encoding, config);\n        return config;\n    };\n    UnitModel.prototype._initScale = function (mark, encoding, config) {\n        return channel_1.UNIT_SCALE_CHANNELS.reduce(function (_scale, channel) {\n            if (vlEncoding.has(encoding, channel) ||\n                (channel === channel_1.X && vlEncoding.has(encoding, channel_1.X2)) ||\n                (channel === channel_1.Y && vlEncoding.has(encoding, channel_1.Y2))) {\n                var channelDef = encoding[channel];\n                var scaleSpec = (channelDef || {}).scale || {};\n                var _scaleType = scale_2.scaleType(scaleSpec, channelDef, channel, mark);\n                _scale[channel] = util_1.extend({\n                    type: _scaleType,\n                    round: config.scale.round,\n                    padding: config.scale.padding,\n                    useRawDomain: config.scale.useRawDomain,\n                    bandSize: channel === channel_1.X && _scaleType === scale_1.ScaleType.ORDINAL && mark === mark_1.TEXT ?\n                        config.scale.textBandWidth : config.scale.bandSize\n                }, scaleSpec);\n            }\n            return _scale;\n        }, {});\n    };\n    UnitModel.prototype._initAxis = function (encoding, config) {\n        return [channel_1.X, channel_1.Y].reduce(function (_axis, channel) {\n            if (vlEncoding.has(encoding, channel) ||\n                (channel === channel_1.X && vlEncoding.has(encoding, channel_1.X2)) ||\n                (channel === channel_1.Y && vlEncoding.has(encoding, channel_1.Y2))) {\n                var axisSpec = (encoding[channel] || {}).axis;\n                if (axisSpec !== false) {\n                    _axis[channel] = util_1.extend({}, config.axis, axisSpec === true ? {} : axisSpec || {});\n                }\n            }\n            return _axis;\n        }, {});\n    };\n    UnitModel.prototype._initLegend = function (encoding, config) {\n        return channel_1.NONSPATIAL_SCALE_CHANNELS.reduce(function (_legend, channel) {\n            if (vlEncoding.has(encoding, channel)) {\n                var legendSpec = encoding[channel].legend;\n                if (legendSpec !== false) {\n                    _legend[channel] = util_1.extend({}, config.legend, legendSpec === true ? {} : legendSpec || {});\n                }\n            }\n            return _legend;\n        }, {});\n    };\n    UnitModel.prototype.parseData = function () {\n        this.component.data = data_2.parseUnitData(this);\n    };\n    UnitModel.prototype.parseSelectionData = function () {\n    };\n    UnitModel.prototype.parseLayoutData = function () {\n        this.component.layout = layout_1.parseUnitLayout(this);\n    };\n    UnitModel.prototype.parseScale = function () {\n        this.component.scale = scale_2.parseScaleComponent(this);\n    };\n    UnitModel.prototype.parseMark = function () {\n        this.component.mark = mark_2.parseMark(this);\n    };\n    UnitModel.prototype.parseAxis = function () {\n        this.component.axis = axis_1.parseAxisComponent(this, [channel_1.X, channel_1.Y]);\n    };\n    UnitModel.prototype.parseAxisGroup = function () {\n        return null;\n    };\n    UnitModel.prototype.parseGridGroup = function () {\n        return null;\n    };\n    UnitModel.prototype.parseLegend = function () {\n        this.component.legend = legend_1.parseLegendComponent(this);\n    };\n    UnitModel.prototype.assembleData = function (data) {\n        return data_2.assembleData(this, data);\n    };\n    UnitModel.prototype.assembleLayout = function (layoutData) {\n        return layout_1.assembleLayout(this, layoutData);\n    };\n    UnitModel.prototype.assembleMarks = function () {\n        return this.component.mark;\n    };\n    UnitModel.prototype.assembleParentGroupProperties = function (cellConfig) {\n        return common_1.applyConfig({}, cellConfig, common_1.FILL_STROKE_CONFIG.concat(['clip']));\n    };\n    UnitModel.prototype.channels = function () {\n        return channel_1.UNIT_CHANNELS;\n    };\n    UnitModel.prototype.mapping = function () {\n        return this.encoding();\n    };\n    UnitModel.prototype.stack = function () {\n        return this._stack;\n    };\n    UnitModel.prototype.toSpec = function (excludeConfig, excludeData) {\n        var encoding = util_1.duplicate(this._encoding);\n        var spec;\n        spec = {\n            mark: this._mark,\n            encoding: encoding\n        };\n        if (!excludeConfig) {\n            spec.config = util_1.duplicate(this._config);\n        }\n        if (!excludeData) {\n            spec.data = util_1.duplicate(this._data);\n        }\n        return spec;\n    };\n    UnitModel.prototype.mark = function () {\n        return this._mark;\n    };\n    UnitModel.prototype.has = function (channel) {\n        return vlEncoding.has(this._encoding, channel);\n    };\n    UnitModel.prototype.encoding = function () {\n        return this._encoding;\n    };\n    UnitModel.prototype.fieldDef = function (channel) {\n        return this._encoding[channel] || {};\n    };\n    UnitModel.prototype.field = function (channel, opt) {\n        if (opt === void 0) { opt = {}; }\n        var fieldDef = this.fieldDef(channel);\n        if (fieldDef.bin) {\n            opt = util_1.extend({\n                binSuffix: this.scale(channel).type === scale_1.ScaleType.ORDINAL ? '_range' : '_start'\n            }, opt);\n        }\n        return fielddef_1.field(fieldDef, opt);\n    };\n    UnitModel.prototype.dataTable = function () {\n        return this.dataName(vlEncoding.isAggregate(this._encoding) ? data_1.SUMMARY : data_1.SOURCE);\n    };\n    UnitModel.prototype.isUnit = function () {\n        return true;\n    };\n    return UnitModel;\n}(model_1.Model));\nexports.UnitModel = UnitModel;\n//# sourceMappingURL=unit.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega-lite/src/compile/unit.js\n// module id = zYzi\n// module chunks = 0","var util = require('./util');\n\nvar dl = {\n  version:    require('../package.json').version,\n  load:       require('./import/load'),\n  read:       require('./import/read'),\n  type:       require('./import/type'),\n  Aggregator: require('./aggregate/aggregator'),\n  groupby:    require('./aggregate/groupby'),\n  bins:       require('./bins/bins'),\n  $bin:       require('./bins/histogram').$bin,\n  histogram:  require('./bins/histogram').histogram,\n  format:     require('./format'),\n  template:   require('./template'),\n  time:       require('./time')\n};\n\nutil.extend(dl, util);\nutil.extend(dl, require('./accessor'));\nutil.extend(dl, require('./generate'));\nutil.extend(dl, require('./stats'));\nutil.extend(dl, require('./import/readers'));\nutil.extend(dl.format, require('./format-tables'));\n\n// backwards-compatible, deprecated API\n// will remove in the future\ndl.print = {\n  table:   dl.format.table,\n  summary: dl.format.summary\n};\n\nmodule.exports = dl;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/datalib/src/index.js\n// module id = zicW\n// module chunks = 0","module.exports = {\n  ChangeSet:    require('./ChangeSet'),\n  Collector:    require('./Collector'),\n  DataSource:   require('./DataSource'),\n  Dependencies: require('./Dependencies'),\n  Graph:        require('./Graph'),\n  Node:         require('./Node'),\n  Signal:       require('./Signal'),\n  Tuple:        require('./Tuple'),\n  debug:        require('vega-logging').debug\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vega/~/vega-dataflow/src/index.js\n// module id = zsFm\n// module chunks = 0"],"sourceRoot":""}